
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ANDAND ARRAY BOOLEAN CADENADOBLE CADENASIMPLE CEIL COMA COUNT DECIMAL DISTINTO DIVISION ECHO ELSE ELSEIF EXPONENCIACION FEOF FGETS FLAG FLOOR FMOD FOPEN FOR FPASSTHRU GETCLASS IDENTICO IF IGUAL IGUAL_IGUAL IS_A LCORC LIST LPAREN L_LLAVE MAS MAX MAYOROIGUAL MAYORQUE MENOROIGUAL MENORQUE MENOS MIN MODULO NEXT NL2BR NO NUMBER_FORMAT NUMEROS OBJECT OR OROR POSTDECREMENTO POSTINCREMENTO POTENCIA PREDECREMENTO PREINCREMENTO PRINT PRODUCTO PUNTOCOMA RAND RCORC ROUND RPAREN R_LLAVE SORT SUBSTR TRIM VARIABLE WHILE WORDWRAP XORsentencias : sentencias asignacion\n    | sentencias metodos\n    | sentencias if\n    | sentencias for\n    | sentencias while\n    | asignacion\n    | metodos\n    | if\n    | for\n    | whilefor : FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVEwhile : WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVEincremento_decremento : PREINCREMENTOincremento_decremento : POSTINCREMENTOincremento_decremento : PREDECREMENTOincremento_decremento : POSTDECREMENTOobject : LPAREN OBJECT RPAREN termmetodos : imprimir\n    | objectimprimir : ECHO factor PUNTOCOMAimprimir : ECHO funciones PUNTOCOMAimprimir : PRINT LPAREN factor RPAREN PUNTOCOMAimprimir : PRINT LPAREN funciones RPAREN PUNTOCOMAimprimir : PRINT factorimprimir : PRINT funcionesif : IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVEif : IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif : IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif elseelseif : ELSEIF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVEelseif : elseif ELSEIF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVEelse : ELSE L_LLAVE sentencias R_LLAVEasignacion : VARIABLE IGUAL expresion PUNTOCOMAasignacion : VARIABLE IGUAL factor PUNTOCOMAasignacion : incremento_decremento PUNTOCOMAasignacion : VARIABLE IGUAL funciones PUNTOCOMAexpresion : expresion operadores termexpresion : termoperadores : MASoperadores : MENOSoperadores : PRODUCTOoperadores : DIVISIONoperadores : MODULOoperadores : EXPONENCIACIONcomparacion : condicionescomparacion : LPAREN condiciones RPARENcomparacion : NO LPAREN condiciones RPARENcondiciones : factor IGUAL_IGUAL factorcondiciones : factor IDENTICO factorcondiciones : factor DISTINTO factorcondiciones : factor MENORQUE factorcondiciones : factor MAYORQUE factorcondiciones : factor MENOROIGUAL factorcondiciones : factor MAYOROIGUAL factorcomparaciones : comparacioncomparaciones : comparaciones anado comparacionanado : condicioncondicion : XORcondicion : ANDANDcondicion : ANDcondicion : ORcondicion : ORORterm : factorfactor : NUMEROSfactor : DECIMALfactor : CADENASIMPLEfactor : CADENADOBLEfactor : VARIABLEfactor : BOOLEANfactor : LPAREN expresion RPARENfopen : FOPEN LPAREN CADENADOBLE COMA CADENADOBLE RPAREN\n    | FOPEN LPAREN CADENASIMPLE COMA CADENADOBLE RPARENfpassthru : FPASSTHRU LPAREN VARIABLE RPARENfeof : FEOF LPAREN VARIABLE RPAREN fgets : FGETS LPAREN VARIABLE COMA NUMEROS RPAREN\n    | FGETS LPAREN VARIABLE RPARENnl2br : NL2BR LPAREN CADENADOBLE COMA VARIABLE RPAREN\n    | NL2BR LPAREN CADENADOBLE COMA BOOLEAN RPAREN\n    | NL2BR LPAREN CADENADOBLE RPAREN\n    | NL2BR LPAREN VARIABLE COMA BOOLEAN RPAREN\n    | NL2BR LPAREN VARIABLE COMA VARIABLE RPAREN\n    | NL2BR LPAREN VARIABLE RPARENround : ROUND LPAREN DECIMAL RPAREN\n    | ROUND LPAREN MENOS DECIMAL RPAREN\n    | ROUND LPAREN DECIMAL COMA NUMEROS RPAREN\n    | ROUND LPAREN DECIMAL COMA MENOS NUMEROS RPAREN\n    | ROUND LPAREN MENOS DECIMAL COMA MENOS NUMEROS RPAREN\n    | ROUND LPAREN MENOS DECIMAL COMA NUMEROS RPARENfloor : FLOOR LPAREN DECIMAL RPAREN\n    | FLOOR LPAREN MENOS DECIMAL RPAREN\n    | FLOOR LPAREN DECIMAL PRODUCTO NUMEROS RPAREN\n    | FLOOR LPAREN VARIABLE RPARENceil : CEIL LPAREN MENOS DECIMAL RPARENceil : CEIL LPAREN DECIMAL RPARENceil : CEIL LPAREN VARIABLE RPARENceil : CEIL LPAREN VARIABLE PRODUCTO NUMEROS RPARENfmod : FMOD LPAREN VARIABLE COMA VARIABLE RPARENlista : LIST LPAREN elements RPARENelements : factorelements : elementelements : elements COMA factorelements : elements COMA elementelement : arrays\n    | listamax : MAX LPAREN elements RPARENarrays : ARRAY LPAREN elements RPAREN\n    | LCORC elements RCORCmin : MIN LPAREN elements RPARENnumber_format : NUMBER_FORMAT LPAREN VARIABLE RPARENnumber_format : NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS RPARENnumber_format : NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPARENfunciones : trim\n    | substr\n    | wordwrap\n    | fopen\n    | fpassthru\n    | feof\n    | fgets\n    | nl2brfunciones : VARIABLE IGUAL next\n    | lista\n    | arraysrand : RAND LPAREN NUMEROS COMA NUMEROS RPARENrand : RAND LPAREN RPARENfunciones : POTENCIA LPAREN NUMEROS COMA NUMEROS RPARENfunciones : max\n    | min\n    | sort\n    | count\n    | number_format\n    | floor\n    | round\n    | ceil\n    | rand\n    | fmodtrim : TRIM LPAREN VARIABLE RPARENtrim : TRIM LPAREN VARIABLE COMA CADENADOBLE RPAREN\n    | TRIM LPAREN VARIABLE COMA CADENASIMPLE RPARENsubstr : SUBSTR LPAREN VARIABLE COMA NUMEROS COMA NUMEROS RPARENsubstr : SUBSTR LPAREN CADENADOBLE COMA NUMEROS COMA NUMEROS RPARENsubstr : SUBSTR LPAREN VARIABLE COMA NUMEROS RPARENsubstr : SUBSTR LPAREN CADENADOBLE COMA NUMEROS RPARENwordwrap : WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN RPARENsort : SORT LPAREN VARIABLE RPARENsort : SORT LPAREN VARIABLE COMA FLAG RPARENcount : COUNT LPAREN VARIABLE RPARENnext : NEXT LPAREN VARIABLE RPARENfunciones : getclass\n    | is_agetclass : GETCLASS LPAREN VARIABLE RPARENis_a : IS_A LPAREN VARIABLE COMA CADENADOBLE RPAREN'
    
_lr_action_items = {'VARIABLE':([0,1,2,3,4,5,6,9,10,19,20,21,22,23,24,25,26,27,28,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,74,87,88,89,94,100,101,102,104,105,108,110,111,112,114,115,116,117,118,119,125,126,127,128,129,130,132,134,135,136,139,140,141,142,143,144,145,146,147,148,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,170,172,187,188,203,211,222,223,225,232,233,235,236,237,238,239,240,241,244,245,246,248,249,251,254,255,259,260,263,264,266,267,268,271,289,292,294,299,301,302,303,304,305,307,309,311,312,313,314,315,316,317,318,320,321,322,326,327,328,329,330,334,339,341,342,344,345,346,347,348,351,352,353,355,359,361,362,364,365,366,367,],[7,7,-6,-7,-8,-9,-10,-18,-19,38,38,-1,-2,-3,-4,-5,38,-34,100,7,100,-63,-64,-65,-66,-67,-68,100,-111,-112,-113,-114,-115,-116,-117,-118,-120,-121,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-147,-148,100,38,-24,-25,100,-67,100,100,-20,-21,-62,174,175,177,180,181,182,184,100,100,100,100,191,192,193,196,201,204,205,206,-32,100,-38,-39,-40,-41,-42,-43,-33,-35,100,-56,-57,-58,-59,-60,-61,100,100,100,100,100,100,100,100,-17,-119,-69,-106,100,-123,7,7,272,-135,-72,-73,-75,282,-78,284,-81,-97,-105,-104,-107,-143,-145,-108,-88,-91,-82,-93,-94,297,-149,-22,-23,7,7,-89,-83,-92,-26,-12,-146,-124,-136,-137,-140,-141,-70,-71,-74,-76,-77,-80,-79,-144,-109,-90,-84,-95,-122,-96,-150,-27,7,-85,-87,-28,7,100,7,-138,-139,-86,100,7,-11,-31,-142,-110,7,7,7,7,]),'IF':([0,1,2,3,4,5,6,9,10,21,22,23,24,25,27,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,88,89,100,104,105,108,139,147,148,167,170,172,187,203,211,222,225,232,233,235,237,239,240,241,244,245,246,248,249,251,254,255,259,260,264,266,267,268,271,289,292,294,299,301,302,303,304,305,307,309,311,312,313,314,315,316,317,318,320,321,322,326,327,328,329,330,334,339,341,342,344,346,347,348,351,353,355,359,361,362,364,365,366,367,],[11,11,-6,-7,-8,-9,-10,-18,-19,-1,-2,-3,-4,-5,-34,-63,-64,-65,-66,-67,-68,-111,-112,-113,-114,-115,-116,-117,-118,-120,-121,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-147,-148,-24,-25,-67,-20,-21,-62,-32,-33,-35,-17,-119,-69,-106,-123,11,11,-135,-72,-73,-75,-78,-81,-97,-105,-104,-107,-143,-145,-108,-88,-91,-82,-93,-94,-149,-22,-23,11,11,-89,-83,-92,-26,-12,-146,-124,-136,-137,-140,-141,-70,-71,-74,-76,-77,-80,-79,-144,-109,-90,-84,-95,-122,-96,-150,-27,11,-85,-87,-28,11,11,-138,-139,-86,11,-11,-31,-142,-110,11,11,11,11,]),'FOR':([0,1,2,3,4,5,6,9,10,21,22,23,24,25,27,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,88,89,100,104,105,108,139,147,148,167,170,172,187,203,211,222,225,232,233,235,237,239,240,241,244,245,246,248,249,251,254,255,259,260,264,266,267,268,271,289,292,294,299,301,302,303,304,305,307,309,311,312,313,314,315,316,317,318,320,321,322,326,327,328,329,330,334,339,341,342,344,346,347,348,351,353,355,359,361,362,364,365,366,367,],[13,13,-6,-7,-8,-9,-10,-18,-19,-1,-2,-3,-4,-5,-34,-63,-64,-65,-66,-67,-68,-111,-112,-113,-114,-115,-116,-117,-118,-120,-121,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-147,-148,-24,-25,-67,-20,-21,-62,-32,-33,-35,-17,-119,-69,-106,-123,13,13,-135,-72,-73,-75,-78,-81,-97,-105,-104,-107,-143,-145,-108,-88,-91,-82,-93,-94,-149,-22,-23,13,13,-89,-83,-92,-26,-12,-146,-124,-136,-137,-140,-141,-70,-71,-74,-76,-77,-80,-79,-144,-109,-90,-84,-95,-122,-96,-150,-27,13,-85,-87,-28,13,13,-138,-139,-86,13,-11,-31,-142,-110,13,13,13,13,]),'WHILE':([0,1,2,3,4,5,6,9,10,21,22,23,24,25,27,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,88,89,100,104,105,108,139,147,148,167,170,172,187,203,211,222,225,232,233,235,237,239,240,241,244,245,246,248,249,251,254,255,259,260,264,266,267,268,271,289,292,294,299,301,302,303,304,305,307,309,311,312,313,314,315,316,317,318,320,321,322,326,327,328,329,330,334,339,341,342,344,346,347,348,351,353,355,359,361,362,364,365,366,367,],[14,14,-6,-7,-8,-9,-10,-18,-19,-1,-2,-3,-4,-5,-34,-63,-64,-65,-66,-67,-68,-111,-112,-113,-114,-115,-116,-117,-118,-120,-121,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-147,-148,-24,-25,-67,-20,-21,-62,-32,-33,-35,-17,-119,-69,-106,-123,14,14,-135,-72,-73,-75,-78,-81,-97,-105,-104,-107,-143,-145,-108,-88,-91,-82,-93,-94,-149,-22,-23,14,14,-89,-83,-92,-26,-12,-146,-124,-136,-137,-140,-141,-70,-71,-74,-76,-77,-80,-79,-144,-109,-90,-84,-95,-122,-96,-150,-27,14,-85,-87,-28,14,14,-138,-139,-86,14,-11,-31,-142,-110,14,14,14,14,]),'PREINCREMENTO':([0,1,2,3,4,5,6,9,10,21,22,23,24,25,27,30,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,88,89,100,104,105,108,139,147,148,167,170,172,187,203,211,221,222,225,232,233,235,237,239,240,241,244,245,246,248,249,251,254,255,259,260,264,266,267,268,271,289,292,294,299,301,302,303,304,305,307,309,311,312,313,314,315,316,317,318,320,321,322,326,327,328,329,330,334,339,341,342,344,346,347,348,351,353,355,359,361,362,364,365,366,367,],[15,15,-6,-7,-8,-9,-10,-18,-19,-1,-2,-3,-4,-5,-34,15,-63,-64,-65,-66,-67,-68,-111,-112,-113,-114,-115,-116,-117,-118,-120,-121,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-147,-148,-24,-25,-67,-20,-21,-62,-32,-33,-35,-17,-119,-69,-106,-123,15,15,15,-135,-72,-73,-75,-78,-81,-97,-105,-104,-107,-143,-145,-108,-88,-91,-82,-93,-94,-149,-22,-23,15,15,-89,-83,-92,-26,-12,-146,-124,-136,-137,-140,-141,-70,-71,-74,-76,-77,-80,-79,-144,-109,-90,-84,-95,-122,-96,-150,-27,15,-85,-87,-28,15,15,-138,-139,-86,15,-11,-31,-142,-110,15,15,15,15,]),'POSTINCREMENTO':([0,1,2,3,4,5,6,9,10,21,22,23,24,25,27,30,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,88,89,100,104,105,108,139,147,148,167,170,172,187,203,211,221,222,225,232,233,235,237,239,240,241,244,245,246,248,249,251,254,255,259,260,264,266,267,268,271,289,292,294,299,301,302,303,304,305,307,309,311,312,313,314,315,316,317,318,320,321,322,326,327,328,329,330,334,339,341,342,344,346,347,348,351,353,355,359,361,362,364,365,366,367,],[16,16,-6,-7,-8,-9,-10,-18,-19,-1,-2,-3,-4,-5,-34,16,-63,-64,-65,-66,-67,-68,-111,-112,-113,-114,-115,-116,-117,-118,-120,-121,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-147,-148,-24,-25,-67,-20,-21,-62,-32,-33,-35,-17,-119,-69,-106,-123,16,16,16,-135,-72,-73,-75,-78,-81,-97,-105,-104,-107,-143,-145,-108,-88,-91,-82,-93,-94,-149,-22,-23,16,16,-89,-83,-92,-26,-12,-146,-124,-136,-137,-140,-141,-70,-71,-74,-76,-77,-80,-79,-144,-109,-90,-84,-95,-122,-96,-150,-27,16,-85,-87,-28,16,16,-138,-139,-86,16,-11,-31,-142,-110,16,16,16,16,]),'PREDECREMENTO':([0,1,2,3,4,5,6,9,10,21,22,23,24,25,27,30,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,88,89,100,104,105,108,139,147,148,167,170,172,187,203,211,221,222,225,232,233,235,237,239,240,241,244,245,246,248,249,251,254,255,259,260,264,266,267,268,271,289,292,294,299,301,302,303,304,305,307,309,311,312,313,314,315,316,317,318,320,321,322,326,327,328,329,330,334,339,341,342,344,346,347,348,351,353,355,359,361,362,364,365,366,367,],[17,17,-6,-7,-8,-9,-10,-18,-19,-1,-2,-3,-4,-5,-34,17,-63,-64,-65,-66,-67,-68,-111,-112,-113,-114,-115,-116,-117,-118,-120,-121,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-147,-148,-24,-25,-67,-20,-21,-62,-32,-33,-35,-17,-119,-69,-106,-123,17,17,17,-135,-72,-73,-75,-78,-81,-97,-105,-104,-107,-143,-145,-108,-88,-91,-82,-93,-94,-149,-22,-23,17,17,-89,-83,-92,-26,-12,-146,-124,-136,-137,-140,-141,-70,-71,-74,-76,-77,-80,-79,-144,-109,-90,-84,-95,-122,-96,-150,-27,17,-85,-87,-28,17,17,-138,-139,-86,17,-11,-31,-142,-110,17,17,17,17,]),'POSTDECREMENTO':([0,1,2,3,4,5,6,9,10,21,22,23,24,25,27,30,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,88,89,100,104,105,108,139,147,148,167,170,172,187,203,211,221,222,225,232,233,235,237,239,240,241,244,245,246,248,249,251,254,255,259,260,264,266,267,268,271,289,292,294,299,301,302,303,304,305,307,309,311,312,313,314,315,316,317,318,320,321,322,326,327,328,329,330,334,339,341,342,344,346,347,348,351,353,355,359,361,362,364,365,366,367,],[18,18,-6,-7,-8,-9,-10,-18,-19,-1,-2,-3,-4,-5,-34,18,-63,-64,-65,-66,-67,-68,-111,-112,-113,-114,-115,-116,-117,-118,-120,-121,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-147,-148,-24,-25,-67,-20,-21,-62,-32,-33,-35,-17,-119,-69,-106,-123,18,18,18,-135,-72,-73,-75,-78,-81,-97,-105,-104,-107,-143,-145,-108,-88,-91,-82,-93,-94,-149,-22,-23,18,18,-89,-83,-92,-26,-12,-146,-124,-136,-137,-140,-141,-70,-71,-74,-76,-77,-80,-79,-144,-109,-90,-84,-95,-122,-96,-150,-27,18,-85,-87,-28,18,18,-138,-139,-86,18,-11,-31,-142,-110,18,18,18,18,]),'ECHO':([0,1,2,3,4,5,6,9,10,21,22,23,24,25,27,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,88,89,100,104,105,108,139,147,148,167,170,172,187,203,211,222,225,232,233,235,237,239,240,241,244,245,246,248,249,251,254,255,259,260,264,266,267,268,271,289,292,294,299,301,302,303,304,305,307,309,311,312,313,314,315,316,317,318,320,321,322,326,327,328,329,330,334,339,341,342,344,346,347,348,351,353,355,359,361,362,364,365,366,367,],[19,19,-6,-7,-8,-9,-10,-18,-19,-1,-2,-3,-4,-5,-34,-63,-64,-65,-66,-67,-68,-111,-112,-113,-114,-115,-116,-117,-118,-120,-121,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-147,-148,-24,-25,-67,-20,-21,-62,-32,-33,-35,-17,-119,-69,-106,-123,19,19,-135,-72,-73,-75,-78,-81,-97,-105,-104,-107,-143,-145,-108,-88,-91,-82,-93,-94,-149,-22,-23,19,19,-89,-83,-92,-26,-12,-146,-124,-136,-137,-140,-141,-70,-71,-74,-76,-77,-80,-79,-144,-109,-90,-84,-95,-122,-96,-150,-27,19,-85,-87,-28,19,19,-138,-139,-86,19,-11,-31,-142,-110,19,19,19,19,]),'PRINT':([0,1,2,3,4,5,6,9,10,21,22,23,24,25,27,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,88,89,100,104,105,108,139,147,148,167,170,172,187,203,211,222,225,232,233,235,237,239,240,241,244,245,246,248,249,251,254,255,259,260,264,266,267,268,271,289,292,294,299,301,302,303,304,305,307,309,311,312,313,314,315,316,317,318,320,321,322,326,327,328,329,330,334,339,341,342,344,346,347,348,351,353,355,359,361,362,364,365,366,367,],[20,20,-6,-7,-8,-9,-10,-18,-19,-1,-2,-3,-4,-5,-34,-63,-64,-65,-66,-67,-68,-111,-112,-113,-114,-115,-116,-117,-118,-120,-121,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-147,-148,-24,-25,-67,-20,-21,-62,-32,-33,-35,-17,-119,-69,-106,-123,20,20,-135,-72,-73,-75,-78,-81,-97,-105,-104,-107,-143,-145,-108,-88,-91,-82,-93,-94,-149,-22,-23,20,20,-89,-83,-92,-26,-12,-146,-124,-136,-137,-140,-141,-70,-71,-74,-76,-77,-80,-79,-144,-109,-90,-84,-95,-122,-96,-150,-27,20,-85,-87,-28,20,20,-138,-139,-86,20,-11,-31,-142,-110,20,20,20,20,]),'LPAREN':([0,1,2,3,4,5,6,9,10,11,13,14,19,20,21,22,23,24,25,26,27,28,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,94,98,100,101,102,104,105,108,118,119,125,126,139,140,141,142,143,144,145,146,147,148,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,170,171,172,187,188,203,211,222,225,232,233,235,237,239,240,241,244,245,246,248,249,251,254,255,259,260,264,266,267,268,271,289,292,294,299,301,302,303,304,305,307,309,311,312,313,314,315,316,317,318,320,321,322,326,327,328,329,330,333,334,339,341,342,343,344,345,346,347,348,351,352,353,355,359,361,362,364,365,366,367,],[12,12,-6,-7,-8,-9,-10,-18,-19,28,30,31,40,87,-1,-2,-3,-4,-5,40,-34,94,94,-63,-64,-65,-66,-67,-68,40,-111,-112,-113,-114,-115,-116,-117,-118,-120,-121,109,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-147,-148,110,111,112,113,114,115,116,117,118,119,40,125,126,127,128,129,130,131,132,133,134,135,136,40,-24,-25,40,159,-67,40,94,-20,-21,-62,40,40,40,40,-32,40,-38,-39,-40,-41,-42,-43,-33,-35,94,-56,-57,-58,-59,-60,-61,40,40,40,40,40,40,40,40,-17,-119,223,-69,-106,40,-123,12,12,-135,-72,-73,-75,-78,-81,-97,-105,-104,-107,-143,-145,-108,-88,-91,-82,-93,-94,-149,-22,-23,12,12,-89,-83,-92,-26,-12,-146,-124,-136,-137,-140,-141,-70,-71,-74,-76,-77,-80,-79,-144,-109,-90,-84,-95,-122,-96,-150,-27,345,12,-85,-87,-28,352,12,94,12,-138,-139,-86,94,12,-11,-31,-142,-110,12,12,12,12,]),'$end':([1,2,3,4,5,6,9,10,21,22,23,24,25,27,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,88,89,100,104,105,108,139,147,148,167,170,172,187,203,225,232,233,235,237,239,240,241,244,245,246,248,249,251,254,255,259,260,264,266,267,289,292,294,299,301,302,303,304,305,307,309,311,312,313,314,315,316,317,318,320,321,322,326,327,328,329,330,339,341,342,347,348,351,355,359,361,362,],[0,-6,-7,-8,-9,-10,-18,-19,-1,-2,-3,-4,-5,-34,-63,-64,-65,-66,-67,-68,-111,-112,-113,-114,-115,-116,-117,-118,-120,-121,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-147,-148,-24,-25,-67,-20,-21,-62,-32,-33,-35,-17,-119,-69,-106,-123,-135,-72,-73,-75,-78,-81,-97,-105,-104,-107,-143,-145,-108,-88,-91,-82,-93,-94,-149,-22,-23,-89,-83,-92,-26,-12,-146,-124,-136,-137,-140,-141,-70,-71,-74,-76,-77,-80,-79,-144,-109,-90,-84,-95,-122,-96,-150,-27,-85,-87,-28,-138,-139,-86,-11,-31,-142,-110,]),'R_LLAVE':([2,3,4,5,6,9,10,21,22,23,24,25,27,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,88,89,100,104,105,108,139,147,148,167,170,172,187,203,225,232,233,235,237,239,240,241,244,245,246,248,249,251,254,255,259,260,264,266,267,268,271,289,292,294,299,301,302,303,304,305,307,309,311,312,313,314,315,316,317,318,320,321,322,326,327,328,329,330,339,341,342,346,347,348,351,353,355,359,361,362,366,367,],[-6,-7,-8,-9,-10,-18,-19,-1,-2,-3,-4,-5,-34,-63,-64,-65,-66,-67,-68,-111,-112,-113,-114,-115,-116,-117,-118,-120,-121,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-147,-148,-24,-25,-67,-20,-21,-62,-32,-33,-35,-17,-119,-69,-106,-123,-135,-72,-73,-75,-78,-81,-97,-105,-104,-107,-143,-145,-108,-88,-91,-82,-93,-94,-149,-22,-23,299,301,-89,-83,-92,-26,-12,-146,-124,-136,-137,-140,-141,-70,-71,-74,-76,-77,-80,-79,-144,-109,-90,-84,-95,-122,-96,-150,-27,-85,-87,-28,355,-138,-139,-86,359,-11,-31,-142,-110,368,369,]),'IGUAL':([7,38,],[26,106,]),'PUNTOCOMA':([8,15,16,17,18,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,90,91,92,93,96,97,100,108,168,170,172,187,203,207,208,209,210,212,214,215,216,217,218,219,220,225,232,233,235,237,239,240,241,244,245,246,248,249,251,254,255,259,260,264,269,289,292,294,302,303,304,305,307,309,311,312,313,314,315,316,317,318,320,321,322,326,327,328,329,339,341,347,348,351,361,362,],[27,-13,-14,-15,-16,104,105,-63,-64,-65,-66,-67,-68,-111,-112,-113,-114,-115,-116,-117,-118,-120,-121,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-147,-148,139,147,148,-37,-54,-44,-67,-62,221,-119,-69,-106,-123,266,267,-36,-45,-55,-47,-48,-49,-50,-51,-52,-53,-135,-72,-73,-75,-78,-81,-97,-105,-104,-107,-143,-145,-108,-88,-91,-82,-93,-94,-149,-46,-89,-83,-92,-146,-124,-136,-137,-140,-141,-70,-71,-74,-76,-77,-80,-79,-144,-109,-90,-84,-95,-122,-96,-150,-85,-87,-138,-139,-86,-142,-110,]),'OBJECT':([12,],[29,]),'RPAREN':([15,16,17,18,29,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,93,95,96,97,100,103,107,108,121,122,123,124,133,137,138,149,150,170,172,174,180,181,182,183,184,185,186,187,189,190,191,192,193,194,196,197,200,201,203,205,209,210,212,213,214,215,216,217,218,219,220,225,232,233,235,237,239,240,241,242,243,244,245,246,248,249,251,253,254,255,257,258,259,260,264,269,270,272,273,274,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,292,294,295,296,297,298,302,303,304,305,307,309,311,312,313,314,315,316,317,318,320,321,322,323,325,326,327,328,329,335,336,339,340,341,347,348,351,354,356,357,358,361,362,],[-13,-14,-15,-16,101,-63,-64,-65,-66,-67,-68,-111,-112,-113,-114,-115,-116,-117,-118,-120,-121,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-147,-148,-37,151,-54,-44,-67,169,172,-62,-98,-99,-102,-103,203,207,208,210,-62,-119,-69,225,232,233,235,237,239,240,241,-106,244,245,246,248,249,251,254,255,259,260,-123,264,-36,-45,-55,269,-47,-48,-49,-50,-51,-52,-53,-135,-72,-73,-75,-78,-81,-97,-105,-100,-101,-104,-107,-143,-145,-108,-88,289,-91,-82,292,294,-93,-94,-149,-46,300,302,303,304,305,307,309,311,312,313,314,315,316,317,318,320,321,-89,322,-83,-92,326,327,328,329,-146,-124,-136,-137,-140,-141,-70,-71,-74,-76,-77,-80,-79,-144,-109,-90,-84,339,341,-95,-122,-96,-150,347,348,-85,351,-87,-138,-139,-86,360,361,362,363,-142,-110,]),'NUMEROS':([19,20,26,27,28,31,40,74,87,94,101,102,109,118,119,125,126,133,139,140,141,142,143,144,145,146,147,148,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,188,224,227,228,229,234,250,252,256,261,262,291,293,306,308,324,345,352,],[34,34,34,-34,34,34,34,34,34,34,34,34,173,34,34,34,34,202,-32,34,-38,-39,-40,-41,-42,-43,-33,-35,34,-56,-57,-58,-59,-60,-61,34,34,34,34,34,34,34,34,34,273,276,277,278,281,287,288,290,295,296,323,325,335,336,340,34,34,]),'DECIMAL':([19,20,26,27,28,31,40,74,87,94,101,102,118,119,125,126,130,131,132,139,140,141,142,143,144,145,146,147,148,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,188,195,198,199,345,352,],[35,35,35,-34,35,35,35,35,35,35,35,35,35,35,35,35,194,197,200,-32,35,-38,-39,-40,-41,-42,-43,-33,-35,35,-56,-57,-58,-59,-60,-61,35,35,35,35,35,35,35,35,35,253,257,258,35,35,]),'CADENASIMPLE':([19,20,26,27,28,31,40,74,87,94,101,102,113,118,119,125,126,139,140,141,142,143,144,145,146,147,148,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,188,226,319,345,350,352,],[36,36,36,-34,36,36,36,36,36,36,36,36,179,36,36,36,36,-32,36,-38,-39,-40,-41,-42,-43,-33,-35,36,-56,-57,-58,-59,-60,-61,36,36,36,36,36,36,36,36,36,275,338,36,357,36,]),'CADENADOBLE':([19,20,26,27,28,31,40,74,87,94,101,102,111,113,117,118,119,125,126,139,140,141,142,143,144,145,146,147,148,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,188,226,230,231,265,310,345,352,],[37,37,37,-34,37,37,37,37,37,37,37,37,176,178,183,37,37,37,37,-32,37,-38,-39,-40,-41,-42,-43,-33,-35,37,-56,-57,-58,-59,-60,-61,37,37,37,37,37,37,37,37,37,274,279,280,298,337,37,37,]),'BOOLEAN':([19,20,26,27,28,31,40,74,87,94,101,102,118,119,125,126,139,140,141,142,143,144,145,146,147,148,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,188,236,238,345,349,352,],[39,39,39,-34,39,39,39,39,39,39,39,39,39,39,39,39,-32,39,-38,-39,-40,-41,-42,-43,-33,-35,39,-56,-57,-58,-59,-60,-61,39,39,39,39,39,39,39,39,39,283,285,39,356,39,]),'POTENCIA':([19,20,26,87,],[51,51,51,51,]),'TRIM':([19,20,26,87,],[64,64,64,64,]),'SUBSTR':([19,20,26,87,],[65,65,65,65,]),'WORDWRAP':([19,20,26,87,],[66,66,66,66,]),'FOPEN':([19,20,26,87,],[67,67,67,67,]),'FPASSTHRU':([19,20,26,87,],[68,68,68,68,]),'FEOF':([19,20,26,87,],[69,69,69,69,]),'FGETS':([19,20,26,87,],[70,70,70,70,]),'NL2BR':([19,20,26,87,],[71,71,71,71,]),'LIST':([19,20,26,74,87,118,119,125,126,188,],[72,72,72,72,72,72,72,72,72,72,]),'ARRAY':([19,20,26,74,87,118,119,125,126,188,],[73,73,73,73,73,73,73,73,73,73,]),'LCORC':([19,20,26,74,87,118,119,125,126,188,],[74,74,74,74,74,74,74,74,74,74,]),'MAX':([19,20,26,87,],[75,75,75,75,]),'MIN':([19,20,26,87,],[76,76,76,76,]),'SORT':([19,20,26,87,],[77,77,77,77,]),'COUNT':([19,20,26,87,],[78,78,78,78,]),'NUMBER_FORMAT':([19,20,26,87,],[79,79,79,79,]),'FLOOR':([19,20,26,87,],[80,80,80,80,]),'ROUND':([19,20,26,87,],[81,81,81,81,]),'CEIL':([19,20,26,87,],[82,82,82,82,]),'RAND':([19,20,26,87,],[83,83,83,83,]),'FMOD':([19,20,26,87,],[84,84,84,84,]),'GETCLASS':([19,20,26,87,],[85,85,85,85,]),'IS_A':([19,20,26,87,],[86,86,86,86,]),'NO':([27,28,31,102,139,147,148,152,153,154,155,156,157,158,345,352,],[-34,98,98,98,-32,-33,-35,98,-56,-57,-58,-59,-60,-61,98,98,]),'MAS':([34,35,36,37,38,39,90,91,93,100,107,108,137,150,172,209,],[-63,-64,-65,-66,-67,-68,141,-62,-37,-67,141,-62,-62,-62,-69,-36,]),'MENOS':([34,35,36,37,38,39,90,91,93,100,107,108,130,131,132,137,150,172,209,256,293,],[-63,-64,-65,-66,-67,-68,142,-62,-37,-67,142,-62,195,198,199,-62,-62,-69,-36,291,324,]),'PRODUCTO':([34,35,36,37,38,39,90,91,93,100,107,108,137,150,172,194,201,209,],[-63,-64,-65,-66,-67,-68,143,-62,-37,-67,143,-62,-62,-62,-69,252,261,-36,]),'DIVISION':([34,35,36,37,38,39,90,91,93,100,107,108,137,150,172,209,],[-63,-64,-65,-66,-67,-68,144,-62,-37,-67,144,-62,-62,-62,-69,-36,]),'MODULO':([34,35,36,37,38,39,90,91,93,100,107,108,137,150,172,209,],[-63,-64,-65,-66,-67,-68,145,-62,-37,-67,145,-62,-62,-62,-69,-36,]),'EXPONENCIACION':([34,35,36,37,38,39,90,91,93,100,107,108,137,150,172,209,],[-63,-64,-65,-66,-67,-68,146,-62,-37,-67,146,-62,-62,-62,-69,-36,]),'IGUAL_IGUAL':([34,35,36,37,39,99,100,150,172,],[-63,-64,-65,-66,-68,160,-67,160,-69,]),'IDENTICO':([34,35,36,37,39,99,100,150,172,],[-63,-64,-65,-66,-68,161,-67,161,-69,]),'DISTINTO':([34,35,36,37,39,99,100,150,172,],[-63,-64,-65,-66,-68,162,-67,162,-69,]),'MENORQUE':([34,35,36,37,39,99,100,150,172,],[-63,-64,-65,-66,-68,163,-67,163,-69,]),'MAYORQUE':([34,35,36,37,39,99,100,150,172,],[-63,-64,-65,-66,-68,164,-67,164,-69,]),'MENOROIGUAL':([34,35,36,37,39,99,100,150,172,],[-63,-64,-65,-66,-68,165,-67,165,-69,]),'MAYOROIGUAL':([34,35,36,37,39,99,100,150,172,],[-63,-64,-65,-66,-68,166,-67,166,-69,]),'RCORC':([34,35,36,37,39,100,120,121,122,123,124,172,187,240,241,242,243,],[-63,-64,-65,-66,-68,-67,187,-98,-99,-102,-103,-69,-106,-97,-105,-100,-101,]),'COMA':([34,35,36,37,39,100,120,121,122,123,124,172,173,174,175,176,177,178,179,182,183,184,185,186,187,189,190,191,193,197,202,204,206,240,241,242,243,257,276,277,278,287,337,338,],[-63,-64,-65,-66,-68,-67,188,-98,-99,-102,-103,-69,224,226,227,228,229,230,231,234,236,238,188,188,-106,188,188,247,250,256,262,263,265,-97,-105,-100,-101,293,306,308,310,319,349,350,]),'XOR':([34,35,36,37,39,95,96,97,100,103,168,172,210,212,214,215,216,217,218,219,220,269,354,358,],[-63,-64,-65,-66,-68,154,-54,-44,-67,154,154,-69,-45,-55,-47,-48,-49,-50,-51,-52,-53,-46,154,154,]),'ANDAND':([34,35,36,37,39,95,96,97,100,103,168,172,210,212,214,215,216,217,218,219,220,269,354,358,],[-63,-64,-65,-66,-68,155,-54,-44,-67,155,155,-69,-45,-55,-47,-48,-49,-50,-51,-52,-53,-46,155,155,]),'AND':([34,35,36,37,39,95,96,97,100,103,168,172,210,212,214,215,216,217,218,219,220,269,354,358,],[-63,-64,-65,-66,-68,156,-54,-44,-67,156,156,-69,-45,-55,-47,-48,-49,-50,-51,-52,-53,-46,156,156,]),'OR':([34,35,36,37,39,95,96,97,100,103,168,172,210,212,214,215,216,217,218,219,220,269,354,358,],[-63,-64,-65,-66,-68,157,-54,-44,-67,157,157,-69,-45,-55,-47,-48,-49,-50,-51,-52,-53,-46,157,157,]),'OROR':([34,35,36,37,39,95,96,97,100,103,168,172,210,212,214,215,216,217,218,219,220,269,354,358,],[-63,-64,-65,-66,-68,158,-54,-44,-67,158,158,-69,-45,-55,-47,-48,-49,-50,-51,-52,-53,-46,158,158,]),'NEXT':([106,],[171,]),'L_LLAVE':([151,169,300,332,360,363,],[211,222,334,344,364,365,]),'FLAG':([247,],[286,]),'ELSE':([299,331,368,369,],[332,332,-29,-30,]),'ELSEIF':([299,331,368,369,],[333,343,-29,-30,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentencias':([0,211,222,334,344,364,365,],[1,268,271,346,353,366,367,]),'asignacion':([0,1,30,211,222,268,271,334,344,346,353,364,365,366,367,],[2,21,102,2,2,21,21,2,2,21,21,2,2,21,21,]),'metodos':([0,1,211,222,268,271,334,344,346,353,364,365,366,367,],[3,22,3,3,22,22,3,3,22,22,3,3,22,22,]),'if':([0,1,211,222,268,271,334,344,346,353,364,365,366,367,],[4,23,4,4,23,23,4,4,23,23,4,4,23,23,]),'for':([0,1,211,222,268,271,334,344,346,353,364,365,366,367,],[5,24,5,5,24,24,5,5,24,24,5,5,24,24,]),'while':([0,1,211,222,268,271,334,344,346,353,364,365,366,367,],[6,25,6,6,25,25,6,6,25,25,6,6,25,25,]),'incremento_decremento':([0,1,30,211,221,222,268,271,334,344,346,353,364,365,366,367,],[8,8,8,8,270,8,8,8,8,8,8,8,8,8,8,8,]),'imprimir':([0,1,211,222,268,271,334,344,346,353,364,365,366,367,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'object':([0,1,211,222,268,271,334,344,346,353,364,365,366,367,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'factor':([19,20,26,28,31,40,74,87,94,101,102,118,119,125,126,140,152,159,160,161,162,163,164,165,166,188,345,352,],[32,88,91,99,99,108,121,137,150,108,99,121,121,121,121,108,99,99,214,215,216,217,218,219,220,242,99,99,]),'funciones':([19,20,26,87,],[33,89,92,138,]),'trim':([19,20,26,87,],[41,41,41,41,]),'substr':([19,20,26,87,],[42,42,42,42,]),'wordwrap':([19,20,26,87,],[43,43,43,43,]),'fopen':([19,20,26,87,],[44,44,44,44,]),'fpassthru':([19,20,26,87,],[45,45,45,45,]),'feof':([19,20,26,87,],[46,46,46,46,]),'fgets':([19,20,26,87,],[47,47,47,47,]),'nl2br':([19,20,26,87,],[48,48,48,48,]),'lista':([19,20,26,74,87,118,119,125,126,188,],[49,49,49,124,49,124,124,124,124,124,]),'arrays':([19,20,26,74,87,118,119,125,126,188,],[50,50,50,123,50,123,123,123,123,123,]),'max':([19,20,26,87,],[52,52,52,52,]),'min':([19,20,26,87,],[53,53,53,53,]),'sort':([19,20,26,87,],[54,54,54,54,]),'count':([19,20,26,87,],[55,55,55,55,]),'number_format':([19,20,26,87,],[56,56,56,56,]),'floor':([19,20,26,87,],[57,57,57,57,]),'round':([19,20,26,87,],[58,58,58,58,]),'ceil':([19,20,26,87,],[59,59,59,59,]),'rand':([19,20,26,87,],[60,60,60,60,]),'fmod':([19,20,26,87,],[61,61,61,61,]),'getclass':([19,20,26,87,],[62,62,62,62,]),'is_a':([19,20,26,87,],[63,63,63,63,]),'expresion':([26,40,87,94,],[90,107,107,107,]),'term':([26,40,87,94,101,140,],[93,93,93,93,167,209,]),'comparaciones':([28,31,102,345,352,],[95,103,168,354,358,]),'comparacion':([28,31,102,152,345,352,],[96,96,96,212,96,96,]),'condiciones':([28,31,94,102,152,159,345,352,],[97,97,149,97,97,213,97,97,]),'elements':([74,118,119,125,126,],[120,185,186,189,190,]),'element':([74,118,119,125,126,188,],[122,122,122,122,122,243,]),'operadores':([90,107,],[140,140,]),'anado':([95,103,168,354,358,],[152,152,152,152,152,]),'condicion':([95,103,168,354,358,],[153,153,153,153,153,]),'next':([106,],[170,]),'else':([299,331,],[330,342,]),'elseif':([299,],[331,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentencias","S'",1,None,None,None),
  ('sentencias -> sentencias asignacion','sentencias',2,'p_sentencias','sintactic.py',6),
  ('sentencias -> sentencias metodos','sentencias',2,'p_sentencias','sintactic.py',7),
  ('sentencias -> sentencias if','sentencias',2,'p_sentencias','sintactic.py',8),
  ('sentencias -> sentencias for','sentencias',2,'p_sentencias','sintactic.py',9),
  ('sentencias -> sentencias while','sentencias',2,'p_sentencias','sintactic.py',10),
  ('sentencias -> asignacion','sentencias',1,'p_sentencias','sintactic.py',11),
  ('sentencias -> metodos','sentencias',1,'p_sentencias','sintactic.py',12),
  ('sentencias -> if','sentencias',1,'p_sentencias','sintactic.py',13),
  ('sentencias -> for','sentencias',1,'p_sentencias','sintactic.py',14),
  ('sentencias -> while','sentencias',1,'p_sentencias','sintactic.py',15),
  ('for -> FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE','for',10,'p_for','sintactic.py',18),
  ('while -> WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE','while',7,'p_while','sintactic.py',21),
  ('incremento_decremento -> PREINCREMENTO','incremento_decremento',1,'p_incremento_decremento_prein','sintactic.py',24),
  ('incremento_decremento -> POSTINCREMENTO','incremento_decremento',1,'p_incremento_decremento_postin','sintactic.py',26),
  ('incremento_decremento -> PREDECREMENTO','incremento_decremento',1,'p_incremento_decremento_prede','sintactic.py',28),
  ('incremento_decremento -> POSTDECREMENTO','incremento_decremento',1,'p_incremento_decremento_postde','sintactic.py',30),
  ('object -> LPAREN OBJECT RPAREN term','object',4,'p_conver_object','sintactic.py',32),
  ('metodos -> imprimir','metodos',1,'p_metodos','sintactic.py',35),
  ('metodos -> object','metodos',1,'p_metodos','sintactic.py',36),
  ('imprimir -> ECHO factor PUNTOCOMA','imprimir',3,'p_imprimir_uno','sintactic.py',38),
  ('imprimir -> ECHO funciones PUNTOCOMA','imprimir',3,'p_imprimir_unoA','sintactic.py',40),
  ('imprimir -> PRINT LPAREN factor RPAREN PUNTOCOMA','imprimir',5,'p_imprimir_dos','sintactic.py',42),
  ('imprimir -> PRINT LPAREN funciones RPAREN PUNTOCOMA','imprimir',5,'p_imprimir_dosA','sintactic.py',44),
  ('imprimir -> PRINT factor','imprimir',2,'p_imprimir_tres','sintactic.py',46),
  ('imprimir -> PRINT funciones','imprimir',2,'p_imprimir_tresA','sintactic.py',48),
  ('if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE','if',7,'p_if','sintactic.py',52),
  ('if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else','if',8,'p_if_else','sintactic.py',54),
  ('if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else','if',9,'p_if_elseif','sintactic.py',56),
  ('elseif -> ELSEIF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE','elseif',7,'p_elseif','sintactic.py',59),
  ('elseif -> elseif ELSEIF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE','elseif',8,'p_elseif_dos','sintactic.py',61),
  ('else -> ELSE L_LLAVE sentencias R_LLAVE','else',4,'p_else','sintactic.py',64),
  ('asignacion -> VARIABLE IGUAL expresion PUNTOCOMA','asignacion',4,'p_asignacion_uno','sintactic.py',67),
  ('asignacion -> VARIABLE IGUAL factor PUNTOCOMA','asignacion',4,'p_asignacion_dos','sintactic.py',69),
  ('asignacion -> incremento_decremento PUNTOCOMA','asignacion',2,'p_asignacion_incredecre','sintactic.py',71),
  ('asignacion -> VARIABLE IGUAL funciones PUNTOCOMA','asignacion',4,'p_asignacion_funcion','sintactic.py',73),
  ('expresion -> expresion operadores term','expresion',3,'p_expresion_uno','sintactic.py',76),
  ('expresion -> term','expresion',1,'p_expresion_dos','sintactic.py',78),
  ('operadores -> MAS','operadores',1,'p_operadores_mas','sintactic.py',81),
  ('operadores -> MENOS','operadores',1,'p_operadores_menos','sintactic.py',83),
  ('operadores -> PRODUCTO','operadores',1,'p_operadores_producto','sintactic.py',85),
  ('operadores -> DIVISION','operadores',1,'p_operadores_division','sintactic.py',87),
  ('operadores -> MODULO','operadores',1,'p_operadores_modulo','sintactic.py',89),
  ('operadores -> EXPONENCIACION','operadores',1,'p_operadores_exponenciacion','sintactic.py',91),
  ('comparacion -> condiciones','comparacion',1,'p_comparacion','sintactic.py',94),
  ('comparacion -> LPAREN condiciones RPAREN','comparacion',3,'p_comparaciones_paren','sintactic.py',96),
  ('comparacion -> NO LPAREN condiciones RPAREN','comparacion',4,'p_comparaciones_negado','sintactic.py',98),
  ('condiciones -> factor IGUAL_IGUAL factor','condiciones',3,'p_igualdad_compare','sintactic.py',101),
  ('condiciones -> factor IDENTICO factor','condiciones',3,'p_identidad_compare','sintactic.py',103),
  ('condiciones -> factor DISTINTO factor','condiciones',3,'p_distinto_compare','sintactic.py',105),
  ('condiciones -> factor MENORQUE factor','condiciones',3,'p_menorque_compare','sintactic.py',107),
  ('condiciones -> factor MAYORQUE factor','condiciones',3,'p_mayorque_compare','sintactic.py',109),
  ('condiciones -> factor MENOROIGUAL factor','condiciones',3,'p_menoroigual_compare','sintactic.py',111),
  ('condiciones -> factor MAYOROIGUAL factor','condiciones',3,'p_mayoroigual_compare','sintactic.py',113),
  ('comparaciones -> comparacion','comparaciones',1,'p_comparaciones','sintactic.py',116),
  ('comparaciones -> comparaciones anado comparacion','comparaciones',3,'p_comparaciones_uno','sintactic.py',118),
  ('anado -> condicion','anado',1,'p_condicion_extra','sintactic.py',121),
  ('condicion -> XOR','condicion',1,'p_condicion_xor','sintactic.py',124),
  ('condicion -> ANDAND','condicion',1,'p_condicion_andand','sintactic.py',126),
  ('condicion -> AND','condicion',1,'p_condicion_and','sintactic.py',128),
  ('condicion -> OR','condicion',1,'p_condicion_or','sintactic.py',130),
  ('condicion -> OROR','condicion',1,'p_condicion_oror','sintactic.py',132),
  ('term -> factor','term',1,'p_term_factor','sintactic.py',135),
  ('factor -> NUMEROS','factor',1,'p_factor_num','sintactic.py',137),
  ('factor -> DECIMAL','factor',1,'p_factor_float','sintactic.py',139),
  ('factor -> CADENASIMPLE','factor',1,'p_factor_strsimple','sintactic.py',141),
  ('factor -> CADENADOBLE','factor',1,'p_factor_strdoble','sintactic.py',143),
  ('factor -> VARIABLE','factor',1,'p_factor_var','sintactic.py',146),
  ('factor -> BOOLEAN','factor',1,'p_factor_bool','sintactic.py',148),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor_expr','sintactic.py',150),
  ('fopen -> FOPEN LPAREN CADENADOBLE COMA CADENADOBLE RPAREN','fopen',6,'p_fopen','sintactic.py',154),
  ('fopen -> FOPEN LPAREN CADENASIMPLE COMA CADENADOBLE RPAREN','fopen',6,'p_fopen','sintactic.py',155),
  ('fpassthru -> FPASSTHRU LPAREN VARIABLE RPAREN','fpassthru',4,'p_fpassthru','sintactic.py',158),
  ('feof -> FEOF LPAREN VARIABLE RPAREN','feof',4,'p_feof','sintactic.py',161),
  ('fgets -> FGETS LPAREN VARIABLE COMA NUMEROS RPAREN','fgets',6,'p_fgets','sintactic.py',164),
  ('fgets -> FGETS LPAREN VARIABLE RPAREN','fgets',4,'p_fgets','sintactic.py',165),
  ('nl2br -> NL2BR LPAREN CADENADOBLE COMA VARIABLE RPAREN','nl2br',6,'p_nl2br','sintactic.py',168),
  ('nl2br -> NL2BR LPAREN CADENADOBLE COMA BOOLEAN RPAREN','nl2br',6,'p_nl2br','sintactic.py',169),
  ('nl2br -> NL2BR LPAREN CADENADOBLE RPAREN','nl2br',4,'p_nl2br','sintactic.py',170),
  ('nl2br -> NL2BR LPAREN VARIABLE COMA BOOLEAN RPAREN','nl2br',6,'p_nl2br','sintactic.py',171),
  ('nl2br -> NL2BR LPAREN VARIABLE COMA VARIABLE RPAREN','nl2br',6,'p_nl2br','sintactic.py',172),
  ('nl2br -> NL2BR LPAREN VARIABLE RPAREN','nl2br',4,'p_nl2br','sintactic.py',173),
  ('round -> ROUND LPAREN DECIMAL RPAREN','round',4,'p_round','sintactic.py',176),
  ('round -> ROUND LPAREN MENOS DECIMAL RPAREN','round',5,'p_round','sintactic.py',177),
  ('round -> ROUND LPAREN DECIMAL COMA NUMEROS RPAREN','round',6,'p_round','sintactic.py',178),
  ('round -> ROUND LPAREN DECIMAL COMA MENOS NUMEROS RPAREN','round',7,'p_round','sintactic.py',179),
  ('round -> ROUND LPAREN MENOS DECIMAL COMA MENOS NUMEROS RPAREN','round',8,'p_round','sintactic.py',180),
  ('round -> ROUND LPAREN MENOS DECIMAL COMA NUMEROS RPAREN','round',7,'p_round','sintactic.py',181),
  ('floor -> FLOOR LPAREN DECIMAL RPAREN','floor',4,'p_floor','sintactic.py',184),
  ('floor -> FLOOR LPAREN MENOS DECIMAL RPAREN','floor',5,'p_floor','sintactic.py',185),
  ('floor -> FLOOR LPAREN DECIMAL PRODUCTO NUMEROS RPAREN','floor',6,'p_floor','sintactic.py',186),
  ('floor -> FLOOR LPAREN VARIABLE RPAREN','floor',4,'p_floor','sintactic.py',187),
  ('ceil -> CEIL LPAREN MENOS DECIMAL RPAREN','ceil',5,'p_ceil_1','sintactic.py',190),
  ('ceil -> CEIL LPAREN DECIMAL RPAREN','ceil',4,'p_ceil_2','sintactic.py',192),
  ('ceil -> CEIL LPAREN VARIABLE RPAREN','ceil',4,'p_ceil_3','sintactic.py',194),
  ('ceil -> CEIL LPAREN VARIABLE PRODUCTO NUMEROS RPAREN','ceil',6,'p_ceil_4','sintactic.py',196),
  ('fmod -> FMOD LPAREN VARIABLE COMA VARIABLE RPAREN','fmod',6,'p_fmod','sintactic.py',199),
  ('lista -> LIST LPAREN elements RPAREN','lista',4,'p_lista','sintactic.py',204),
  ('elements -> factor','elements',1,'p_parte_lista_uno','sintactic.py',206),
  ('elements -> element','elements',1,'p_parte_lista_dos','sintactic.py',208),
  ('elements -> elements COMA factor','elements',3,'p_parte_lista_tres','sintactic.py',210),
  ('elements -> elements COMA element','elements',3,'p_parte_lista_cuatro','sintactic.py',212),
  ('element -> arrays','element',1,'p_element','sintactic.py',215),
  ('element -> lista','element',1,'p_element','sintactic.py',216),
  ('max -> MAX LPAREN elements RPAREN','max',4,'p_max_funcion','sintactic.py',219),
  ('arrays -> ARRAY LPAREN elements RPAREN','arrays',4,'p_arrays','sintactic.py',222),
  ('arrays -> LCORC elements RCORC','arrays',3,'p_arrays','sintactic.py',223),
  ('min -> MIN LPAREN elements RPAREN','min',4,'p_min_funcion','sintactic.py',226),
  ('number_format -> NUMBER_FORMAT LPAREN VARIABLE RPAREN','number_format',4,'p_number_format_1','sintactic.py',229),
  ('number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS RPAREN','number_format',6,'p_number_format_2','sintactic.py',232),
  ('number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPAREN','number_format',10,'p_number_format_4','sintactic.py',235),
  ('funciones -> trim','funciones',1,'p_funciones_s','sintactic.py',238),
  ('funciones -> substr','funciones',1,'p_funciones_s','sintactic.py',239),
  ('funciones -> wordwrap','funciones',1,'p_funciones_s','sintactic.py',240),
  ('funciones -> fopen','funciones',1,'p_funciones_s','sintactic.py',241),
  ('funciones -> fpassthru','funciones',1,'p_funciones_s','sintactic.py',242),
  ('funciones -> feof','funciones',1,'p_funciones_s','sintactic.py',243),
  ('funciones -> fgets','funciones',1,'p_funciones_s','sintactic.py',244),
  ('funciones -> nl2br','funciones',1,'p_funciones_s','sintactic.py',245),
  ('funciones -> VARIABLE IGUAL next','funciones',3,'p_funciones_a','sintactic.py',248),
  ('funciones -> lista','funciones',1,'p_funciones_a','sintactic.py',249),
  ('funciones -> arrays','funciones',1,'p_funciones_a','sintactic.py',250),
  ('rand -> RAND LPAREN NUMEROS COMA NUMEROS RPAREN','rand',6,'p_rand_uno','sintactic.py',252),
  ('rand -> RAND LPAREN RPAREN','rand',3,'p_rand_dos','sintactic.py',254),
  ('funciones -> POTENCIA LPAREN NUMEROS COMA NUMEROS RPAREN','funciones',6,'p_potencia','sintactic.py',256),
  ('funciones -> max','funciones',1,'p_funciones_i','sintactic.py',259),
  ('funciones -> min','funciones',1,'p_funciones_i','sintactic.py',260),
  ('funciones -> sort','funciones',1,'p_funciones_i','sintactic.py',261),
  ('funciones -> count','funciones',1,'p_funciones_i','sintactic.py',262),
  ('funciones -> number_format','funciones',1,'p_funciones_i','sintactic.py',263),
  ('funciones -> floor','funciones',1,'p_funciones_i','sintactic.py',264),
  ('funciones -> round','funciones',1,'p_funciones_i','sintactic.py',265),
  ('funciones -> ceil','funciones',1,'p_funciones_i','sintactic.py',266),
  ('funciones -> rand','funciones',1,'p_funciones_i','sintactic.py',267),
  ('funciones -> fmod','funciones',1,'p_funciones_i','sintactic.py',268),
  ('trim -> TRIM LPAREN VARIABLE RPAREN','trim',4,'p_trim_1','sintactic.py',271),
  ('trim -> TRIM LPAREN VARIABLE COMA CADENADOBLE RPAREN','trim',6,'p_trim_2','sintactic.py',274),
  ('trim -> TRIM LPAREN VARIABLE COMA CADENASIMPLE RPAREN','trim',6,'p_trim_2','sintactic.py',275),
  ('substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS COMA NUMEROS RPAREN','substr',8,'p_substr_uno','sintactic.py',278),
  ('substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS COMA NUMEROS RPAREN','substr',8,'p_substr_dos','sintactic.py',280),
  ('substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS RPAREN','substr',6,'p_substr_tres','sintactic.py',282),
  ('substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS RPAREN','substr',6,'p_substr_cuatro','sintactic.py',284),
  ('wordwrap -> WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN RPAREN','wordwrap',10,'p_wordwrap','sintactic.py',287),
  ('sort -> SORT LPAREN VARIABLE RPAREN','sort',4,'p_sort','sintactic.py',290),
  ('sort -> SORT LPAREN VARIABLE COMA FLAG RPAREN','sort',6,'p_sort_2','sintactic.py',293),
  ('count -> COUNT LPAREN VARIABLE RPAREN','count',4,'p_count','sintactic.py',296),
  ('next -> NEXT LPAREN VARIABLE RPAREN','next',4,'p_next','sintactic.py',299),
  ('funciones -> getclass','funciones',1,'p_funciones_obj','sintactic.py',302),
  ('funciones -> is_a','funciones',1,'p_funciones_obj','sintactic.py',303),
  ('getclass -> GETCLASS LPAREN VARIABLE RPAREN','getclass',4,'p_getclass','sintactic.py',305),
  ('is_a -> IS_A LPAREN VARIABLE COMA CADENADOBLE RPAREN','is_a',6,'p_is_a','sintactic.py',307),
]
