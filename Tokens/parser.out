Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> sentencias asignacion
Rule 2     sentencias -> sentencias metodos
Rule 3     sentencias -> sentencias if
Rule 4     sentencias -> sentencias for
Rule 5     sentencias -> sentencias while
Rule 6     sentencias -> asignacion
Rule 7     sentencias -> metodos
Rule 8     sentencias -> if
Rule 9     sentencias -> for
Rule 10    sentencias -> while
Rule 11    for -> FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE
Rule 12    while -> WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
Rule 13    incremento_decremento -> PREINCREMENTO
Rule 14    incremento_decremento -> POSTINCREMENTO
Rule 15    incremento_decremento -> PREDECREMENTO
Rule 16    incremento_decremento -> POSTDECREMENTO
Rule 17    object -> LPAREN OBJECT RPAREN term
Rule 18    metodos -> imprimir
Rule 19    metodos -> object
Rule 20    imprimir -> ECHO factor PUNTOCOMA
Rule 21    imprimir -> ECHO funciones PUNTOCOMA
Rule 22    imprimir -> PRINT LPAREN factor RPAREN PUNTOCOMA
Rule 23    imprimir -> PRINT LPAREN funciones RPAREN PUNTOCOMA
Rule 24    imprimir -> PRINT factor
Rule 25    imprimir -> PRINT funciones
Rule 26    if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
Rule 27    if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else
Rule 28    if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else
Rule 29    elseif -> ELSEIF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
Rule 30    elseif -> elseif ELSEIF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
Rule 31    else -> ELSE L_LLAVE sentencias R_LLAVE
Rule 32    asignacion -> VARIABLE IGUAL expresion PUNTOCOMA
Rule 33    asignacion -> VARIABLE IGUAL factor PUNTOCOMA
Rule 34    asignacion -> incremento_decremento PUNTOCOMA
Rule 35    asignacion -> VARIABLE IGUAL funciones PUNTOCOMA
Rule 36    expresion -> expresion operadores term
Rule 37    expresion -> term
Rule 38    operadores -> MAS
Rule 39    operadores -> MENOS
Rule 40    operadores -> PRODUCTO
Rule 41    operadores -> DIVISION
Rule 42    operadores -> MODULO
Rule 43    operadores -> EXPONENCIACION
Rule 44    comparacion -> condiciones
Rule 45    comparacion -> LPAREN condiciones RPAREN
Rule 46    comparacion -> NO LPAREN condiciones RPAREN
Rule 47    condiciones -> factor IGUAL_IGUAL factor
Rule 48    condiciones -> factor IDENTICO factor
Rule 49    condiciones -> factor DISTINTO factor
Rule 50    condiciones -> factor MENORQUE factor
Rule 51    condiciones -> factor MAYORQUE factor
Rule 52    condiciones -> factor MENOROIGUAL factor
Rule 53    condiciones -> factor MAYOROIGUAL factor
Rule 54    comparaciones -> comparacion
Rule 55    comparaciones -> comparaciones anado comparacion
Rule 56    anado -> condicion
Rule 57    condicion -> XOR
Rule 58    condicion -> ANDAND
Rule 59    condicion -> AND
Rule 60    condicion -> OR
Rule 61    condicion -> OROR
Rule 62    term -> factor
Rule 63    factor -> NUMEROS
Rule 64    factor -> DECIMAL
Rule 65    factor -> CADENASIMPLE
Rule 66    factor -> CADENADOBLE
Rule 67    factor -> VARIABLE
Rule 68    factor -> BOOLEAN
Rule 69    factor -> LPAREN expresion RPAREN
Rule 70    fopen -> FOPEN LPAREN CADENADOBLE COMA CADENADOBLE RPAREN
Rule 71    fopen -> FOPEN LPAREN CADENASIMPLE COMA CADENADOBLE RPAREN
Rule 72    fpassthru -> FPASSTHRU LPAREN VARIABLE RPAREN
Rule 73    feof -> FEOF LPAREN VARIABLE RPAREN
Rule 74    fgets -> FGETS LPAREN VARIABLE COMA NUMEROS RPAREN
Rule 75    fgets -> FGETS LPAREN VARIABLE RPAREN
Rule 76    nl2br -> NL2BR LPAREN CADENADOBLE COMA VARIABLE RPAREN
Rule 77    nl2br -> NL2BR LPAREN CADENADOBLE COMA BOOLEAN RPAREN
Rule 78    nl2br -> NL2BR LPAREN CADENADOBLE RPAREN
Rule 79    nl2br -> NL2BR LPAREN VARIABLE COMA BOOLEAN RPAREN
Rule 80    nl2br -> NL2BR LPAREN VARIABLE COMA VARIABLE RPAREN
Rule 81    nl2br -> NL2BR LPAREN VARIABLE RPAREN
Rule 82    round -> ROUND LPAREN DECIMAL RPAREN
Rule 83    round -> ROUND LPAREN MENOS DECIMAL RPAREN
Rule 84    round -> ROUND LPAREN DECIMAL COMA NUMEROS RPAREN
Rule 85    round -> ROUND LPAREN DECIMAL COMA MENOS NUMEROS RPAREN
Rule 86    round -> ROUND LPAREN MENOS DECIMAL COMA MENOS NUMEROS RPAREN
Rule 87    round -> ROUND LPAREN MENOS DECIMAL COMA NUMEROS RPAREN
Rule 88    floor -> FLOOR LPAREN DECIMAL RPAREN
Rule 89    floor -> FLOOR LPAREN MENOS DECIMAL RPAREN
Rule 90    floor -> FLOOR LPAREN DECIMAL PRODUCTO NUMEROS RPAREN
Rule 91    floor -> FLOOR LPAREN VARIABLE RPAREN
Rule 92    ceil -> CEIL LPAREN MENOS DECIMAL RPAREN
Rule 93    ceil -> CEIL LPAREN DECIMAL RPAREN
Rule 94    ceil -> CEIL LPAREN VARIABLE RPAREN
Rule 95    ceil -> CEIL LPAREN VARIABLE PRODUCTO NUMEROS RPAREN
Rule 96    fmod -> FMOD LPAREN VARIABLE COMA VARIABLE RPAREN
Rule 97    lista -> LIST LPAREN elements RPAREN
Rule 98    elements -> factor
Rule 99    elements -> element
Rule 100   elements -> elements COMA factor
Rule 101   elements -> elements COMA element
Rule 102   element -> arrays
Rule 103   element -> lista
Rule 104   max -> MAX LPAREN elements RPAREN
Rule 105   arrays -> ARRAY LPAREN elements RPAREN
Rule 106   arrays -> LCORC elements RCORC
Rule 107   min -> MIN LPAREN elements RPAREN
Rule 108   number_format -> NUMBER_FORMAT LPAREN VARIABLE RPAREN
Rule 109   number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS RPAREN
Rule 110   number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPAREN
Rule 111   funciones -> trim
Rule 112   funciones -> substr
Rule 113   funciones -> wordwrap
Rule 114   funciones -> fopen
Rule 115   funciones -> fpassthru
Rule 116   funciones -> feof
Rule 117   funciones -> fgets
Rule 118   funciones -> nl2br
Rule 119   funciones -> VARIABLE IGUAL next
Rule 120   funciones -> lista
Rule 121   funciones -> arrays
Rule 122   rand -> RAND LPAREN NUMEROS COMA NUMEROS RPAREN
Rule 123   rand -> RAND LPAREN RPAREN
Rule 124   funciones -> POTENCIA LPAREN NUMEROS COMA NUMEROS RPAREN
Rule 125   funciones -> max
Rule 126   funciones -> min
Rule 127   funciones -> sort
Rule 128   funciones -> count
Rule 129   funciones -> number_format
Rule 130   funciones -> floor
Rule 131   funciones -> round
Rule 132   funciones -> ceil
Rule 133   funciones -> rand
Rule 134   funciones -> fmod
Rule 135   trim -> TRIM LPAREN VARIABLE RPAREN
Rule 136   trim -> TRIM LPAREN VARIABLE COMA CADENADOBLE RPAREN
Rule 137   trim -> TRIM LPAREN VARIABLE COMA CADENASIMPLE RPAREN
Rule 138   substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS COMA NUMEROS RPAREN
Rule 139   substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS COMA NUMEROS RPAREN
Rule 140   substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS RPAREN
Rule 141   substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS RPAREN
Rule 142   wordwrap -> WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN RPAREN
Rule 143   sort -> SORT LPAREN VARIABLE RPAREN
Rule 144   sort -> SORT LPAREN VARIABLE COMA FLAG RPAREN
Rule 145   count -> COUNT LPAREN VARIABLE RPAREN
Rule 146   next -> NEXT LPAREN VARIABLE RPAREN
Rule 147   funciones -> getclass
Rule 148   funciones -> is_a
Rule 149   getclass -> GETCLASS LPAREN VARIABLE RPAREN
Rule 150   is_a -> IS_A LPAREN VARIABLE COMA CADENADOBLE RPAREN

Terminals, with rules where they appear

AND                  : 59
ANDAND               : 58
ARRAY                : 105
BOOLEAN              : 68 77 79 142
CADENADOBLE          : 66 70 70 71 76 77 78 136 139 141 142 150
CADENASIMPLE         : 65 71 110 110 137
CEIL                 : 92 93 94 95
COMA                 : 70 71 74 76 77 79 80 84 85 86 87 96 100 101 109 110 110 110 122 124 136 137 138 138 139 139 140 141 142 142 142 144 150
COUNT                : 145
DECIMAL              : 64 82 83 84 85 86 87 88 89 90 92 93
DISTINTO             : 49
DIVISION             : 41
ECHO                 : 20 21
ELSE                 : 31
ELSEIF               : 29 30
EXPONENCIACION       : 43
FEOF                 : 73
FGETS                : 74 75
FLAG                 : 144
FLOOR                : 88 89 90 91
FMOD                 : 96
FOPEN                : 70 71
FOR                  : 11
FPASSTHRU            : 72
GETCLASS             : 149
IDENTICO             : 48
IF                   : 26 27 28
IGUAL                : 32 33 35 119
IGUAL_IGUAL          : 47
IS_A                 : 150
LCORC                : 106
LIST                 : 97
LPAREN               : 11 12 17 22 23 26 27 28 29 30 45 46 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 104 105 107 108 109 110 122 123 124 135 136 137 138 139 140 141 142 143 144 145 146 149 150
L_LLAVE              : 11 12 26 27 28 29 30 31
MAS                  : 38
MAX                  : 104
MAYOROIGUAL          : 53
MAYORQUE             : 51
MENOROIGUAL          : 52
MENORQUE             : 50
MENOS                : 39 83 85 86 86 87 89 92
MIN                  : 107
MODULO               : 42
NEXT                 : 146
NL2BR                : 76 77 78 79 80 81
NO                   : 46
NUMBER_FORMAT        : 108 109 110
NUMEROS              : 63 74 84 85 86 87 90 95 109 110 122 122 124 124 138 138 139 139 140 141 142
OBJECT               : 17
OR                   : 60
OROR                 : 61
POSTDECREMENTO       : 16
POSTINCREMENTO       : 14
POTENCIA             : 124
PREDECREMENTO        : 15
PREINCREMENTO        : 13
PRINT                : 22 23 24 25
PRODUCTO             : 40 90 95
PUNTOCOMA            : 11 20 21 22 23 32 33 34 35
RAND                 : 122 123
RCORC                : 106
ROUND                : 82 83 84 85 86 87
RPAREN               : 11 12 17 22 23 26 27 28 29 30 45 46 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 104 105 107 108 109 110 122 123 124 135 136 137 138 139 140 141 142 143 144 145 146 149 150
R_LLAVE              : 11 12 26 27 28 29 30 31
SORT                 : 143 144
SUBSTR               : 138 139 140 141
TRIM                 : 135 136 137
VARIABLE             : 32 33 35 67 72 73 74 75 76 79 80 80 81 91 94 95 96 96 108 109 110 119 135 136 137 138 140 142 143 144 145 146 149 150
WHILE                : 12
WORDWRAP             : 142
XOR                  : 57
error                : 

Nonterminals, with rules where they appear

anado                : 55
arrays               : 102 121
asignacion           : 1 6 11
ceil                 : 132
comparacion          : 54 55
comparaciones        : 11 12 26 27 28 29 30 55
condicion            : 56
condiciones          : 44 45 46
count                : 128
element              : 99 101
elements             : 97 100 101 104 105 106 107
else                 : 27 28
elseif               : 28 30
expresion            : 32 36 69
factor               : 20 22 24 33 47 47 48 48 49 49 50 50 51 51 52 52 53 53 62 98 100
feof                 : 116
fgets                : 117
floor                : 130
fmod                 : 134
fopen                : 114
for                  : 4 9
fpassthru            : 115
funciones            : 21 23 25 35
getclass             : 147
if                   : 3 8
imprimir             : 18
incremento_decremento : 11 34
is_a                 : 148
lista                : 103 120
max                  : 125
metodos              : 2 7
min                  : 126
next                 : 119
nl2br                : 118
number_format        : 129
object               : 19
operadores           : 36
rand                 : 133
round                : 131
sentencias           : 1 2 3 4 5 11 12 26 27 28 29 30 31 0
sort                 : 127
substr               : 112
term                 : 17 36 37
trim                 : 111
while                : 5 10
wordwrap             : 113

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . sentencias asignacion
    (2) sentencias -> . sentencias metodos
    (3) sentencias -> . sentencias if
    (4) sentencias -> . sentencias for
    (5) sentencias -> . sentencias while
    (6) sentencias -> . asignacion
    (7) sentencias -> . metodos
    (8) sentencias -> . if
    (9) sentencias -> . for
    (10) sentencias -> . while
    (32) asignacion -> . VARIABLE IGUAL expresion PUNTOCOMA
    (33) asignacion -> . VARIABLE IGUAL factor PUNTOCOMA
    (34) asignacion -> . incremento_decremento PUNTOCOMA
    (35) asignacion -> . VARIABLE IGUAL funciones PUNTOCOMA
    (18) metodos -> . imprimir
    (19) metodos -> . object
    (26) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (27) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else
    (28) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else
    (11) for -> . FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE
    (12) while -> . WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (13) incremento_decremento -> . PREINCREMENTO
    (14) incremento_decremento -> . POSTINCREMENTO
    (15) incremento_decremento -> . PREDECREMENTO
    (16) incremento_decremento -> . POSTDECREMENTO
    (20) imprimir -> . ECHO factor PUNTOCOMA
    (21) imprimir -> . ECHO funciones PUNTOCOMA
    (22) imprimir -> . PRINT LPAREN factor RPAREN PUNTOCOMA
    (23) imprimir -> . PRINT LPAREN funciones RPAREN PUNTOCOMA
    (24) imprimir -> . PRINT factor
    (25) imprimir -> . PRINT funciones
    (17) object -> . LPAREN OBJECT RPAREN term

    VARIABLE        shift and go to state 7
    IF              shift and go to state 11
    FOR             shift and go to state 13
    WHILE           shift and go to state 14
    PREINCREMENTO   shift and go to state 15
    POSTINCREMENTO  shift and go to state 16
    PREDECREMENTO   shift and go to state 17
    POSTDECREMENTO  shift and go to state 18
    ECHO            shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 12

    sentencias                     shift and go to state 1
    asignacion                     shift and go to state 2
    metodos                        shift and go to state 3
    if                             shift and go to state 4
    for                            shift and go to state 5
    while                          shift and go to state 6
    incremento_decremento          shift and go to state 8
    imprimir                       shift and go to state 9
    object                         shift and go to state 10

state 1

    (0) S' -> sentencias .
    (1) sentencias -> sentencias . asignacion
    (2) sentencias -> sentencias . metodos
    (3) sentencias -> sentencias . if
    (4) sentencias -> sentencias . for
    (5) sentencias -> sentencias . while
    (32) asignacion -> . VARIABLE IGUAL expresion PUNTOCOMA
    (33) asignacion -> . VARIABLE IGUAL factor PUNTOCOMA
    (34) asignacion -> . incremento_decremento PUNTOCOMA
    (35) asignacion -> . VARIABLE IGUAL funciones PUNTOCOMA
    (18) metodos -> . imprimir
    (19) metodos -> . object
    (26) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (27) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else
    (28) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else
    (11) for -> . FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE
    (12) while -> . WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (13) incremento_decremento -> . PREINCREMENTO
    (14) incremento_decremento -> . POSTINCREMENTO
    (15) incremento_decremento -> . PREDECREMENTO
    (16) incremento_decremento -> . POSTDECREMENTO
    (20) imprimir -> . ECHO factor PUNTOCOMA
    (21) imprimir -> . ECHO funciones PUNTOCOMA
    (22) imprimir -> . PRINT LPAREN factor RPAREN PUNTOCOMA
    (23) imprimir -> . PRINT LPAREN funciones RPAREN PUNTOCOMA
    (24) imprimir -> . PRINT factor
    (25) imprimir -> . PRINT funciones
    (17) object -> . LPAREN OBJECT RPAREN term

    VARIABLE        shift and go to state 7
    IF              shift and go to state 11
    FOR             shift and go to state 13
    WHILE           shift and go to state 14
    PREINCREMENTO   shift and go to state 15
    POSTINCREMENTO  shift and go to state 16
    PREDECREMENTO   shift and go to state 17
    POSTDECREMENTO  shift and go to state 18
    ECHO            shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 12

    asignacion                     shift and go to state 21
    metodos                        shift and go to state 22
    if                             shift and go to state 23
    for                            shift and go to state 24
    while                          shift and go to state 25
    incremento_decremento          shift and go to state 8
    imprimir                       shift and go to state 9
    object                         shift and go to state 10

state 2

    (6) sentencias -> asignacion .

    VARIABLE        reduce using rule 6 (sentencias -> asignacion .)
    IF              reduce using rule 6 (sentencias -> asignacion .)
    FOR             reduce using rule 6 (sentencias -> asignacion .)
    WHILE           reduce using rule 6 (sentencias -> asignacion .)
    PREINCREMENTO   reduce using rule 6 (sentencias -> asignacion .)
    POSTINCREMENTO  reduce using rule 6 (sentencias -> asignacion .)
    PREDECREMENTO   reduce using rule 6 (sentencias -> asignacion .)
    POSTDECREMENTO  reduce using rule 6 (sentencias -> asignacion .)
    ECHO            reduce using rule 6 (sentencias -> asignacion .)
    PRINT           reduce using rule 6 (sentencias -> asignacion .)
    LPAREN          reduce using rule 6 (sentencias -> asignacion .)
    $end            reduce using rule 6 (sentencias -> asignacion .)
    R_LLAVE         reduce using rule 6 (sentencias -> asignacion .)


state 3

    (7) sentencias -> metodos .

    VARIABLE        reduce using rule 7 (sentencias -> metodos .)
    IF              reduce using rule 7 (sentencias -> metodos .)
    FOR             reduce using rule 7 (sentencias -> metodos .)
    WHILE           reduce using rule 7 (sentencias -> metodos .)
    PREINCREMENTO   reduce using rule 7 (sentencias -> metodos .)
    POSTINCREMENTO  reduce using rule 7 (sentencias -> metodos .)
    PREDECREMENTO   reduce using rule 7 (sentencias -> metodos .)
    POSTDECREMENTO  reduce using rule 7 (sentencias -> metodos .)
    ECHO            reduce using rule 7 (sentencias -> metodos .)
    PRINT           reduce using rule 7 (sentencias -> metodos .)
    LPAREN          reduce using rule 7 (sentencias -> metodos .)
    $end            reduce using rule 7 (sentencias -> metodos .)
    R_LLAVE         reduce using rule 7 (sentencias -> metodos .)


state 4

    (8) sentencias -> if .

    VARIABLE        reduce using rule 8 (sentencias -> if .)
    IF              reduce using rule 8 (sentencias -> if .)
    FOR             reduce using rule 8 (sentencias -> if .)
    WHILE           reduce using rule 8 (sentencias -> if .)
    PREINCREMENTO   reduce using rule 8 (sentencias -> if .)
    POSTINCREMENTO  reduce using rule 8 (sentencias -> if .)
    PREDECREMENTO   reduce using rule 8 (sentencias -> if .)
    POSTDECREMENTO  reduce using rule 8 (sentencias -> if .)
    ECHO            reduce using rule 8 (sentencias -> if .)
    PRINT           reduce using rule 8 (sentencias -> if .)
    LPAREN          reduce using rule 8 (sentencias -> if .)
    $end            reduce using rule 8 (sentencias -> if .)
    R_LLAVE         reduce using rule 8 (sentencias -> if .)


state 5

    (9) sentencias -> for .

    VARIABLE        reduce using rule 9 (sentencias -> for .)
    IF              reduce using rule 9 (sentencias -> for .)
    FOR             reduce using rule 9 (sentencias -> for .)
    WHILE           reduce using rule 9 (sentencias -> for .)
    PREINCREMENTO   reduce using rule 9 (sentencias -> for .)
    POSTINCREMENTO  reduce using rule 9 (sentencias -> for .)
    PREDECREMENTO   reduce using rule 9 (sentencias -> for .)
    POSTDECREMENTO  reduce using rule 9 (sentencias -> for .)
    ECHO            reduce using rule 9 (sentencias -> for .)
    PRINT           reduce using rule 9 (sentencias -> for .)
    LPAREN          reduce using rule 9 (sentencias -> for .)
    $end            reduce using rule 9 (sentencias -> for .)
    R_LLAVE         reduce using rule 9 (sentencias -> for .)


state 6

    (10) sentencias -> while .

    VARIABLE        reduce using rule 10 (sentencias -> while .)
    IF              reduce using rule 10 (sentencias -> while .)
    FOR             reduce using rule 10 (sentencias -> while .)
    WHILE           reduce using rule 10 (sentencias -> while .)
    PREINCREMENTO   reduce using rule 10 (sentencias -> while .)
    POSTINCREMENTO  reduce using rule 10 (sentencias -> while .)
    PREDECREMENTO   reduce using rule 10 (sentencias -> while .)
    POSTDECREMENTO  reduce using rule 10 (sentencias -> while .)
    ECHO            reduce using rule 10 (sentencias -> while .)
    PRINT           reduce using rule 10 (sentencias -> while .)
    LPAREN          reduce using rule 10 (sentencias -> while .)
    $end            reduce using rule 10 (sentencias -> while .)
    R_LLAVE         reduce using rule 10 (sentencias -> while .)


state 7

    (32) asignacion -> VARIABLE . IGUAL expresion PUNTOCOMA
    (33) asignacion -> VARIABLE . IGUAL factor PUNTOCOMA
    (35) asignacion -> VARIABLE . IGUAL funciones PUNTOCOMA

    IGUAL           shift and go to state 26


state 8

    (34) asignacion -> incremento_decremento . PUNTOCOMA

    PUNTOCOMA       shift and go to state 27


state 9

    (18) metodos -> imprimir .

    VARIABLE        reduce using rule 18 (metodos -> imprimir .)
    IF              reduce using rule 18 (metodos -> imprimir .)
    FOR             reduce using rule 18 (metodos -> imprimir .)
    WHILE           reduce using rule 18 (metodos -> imprimir .)
    PREINCREMENTO   reduce using rule 18 (metodos -> imprimir .)
    POSTINCREMENTO  reduce using rule 18 (metodos -> imprimir .)
    PREDECREMENTO   reduce using rule 18 (metodos -> imprimir .)
    POSTDECREMENTO  reduce using rule 18 (metodos -> imprimir .)
    ECHO            reduce using rule 18 (metodos -> imprimir .)
    PRINT           reduce using rule 18 (metodos -> imprimir .)
    LPAREN          reduce using rule 18 (metodos -> imprimir .)
    $end            reduce using rule 18 (metodos -> imprimir .)
    R_LLAVE         reduce using rule 18 (metodos -> imprimir .)


state 10

    (19) metodos -> object .

    VARIABLE        reduce using rule 19 (metodos -> object .)
    IF              reduce using rule 19 (metodos -> object .)
    FOR             reduce using rule 19 (metodos -> object .)
    WHILE           reduce using rule 19 (metodos -> object .)
    PREINCREMENTO   reduce using rule 19 (metodos -> object .)
    POSTINCREMENTO  reduce using rule 19 (metodos -> object .)
    PREDECREMENTO   reduce using rule 19 (metodos -> object .)
    POSTDECREMENTO  reduce using rule 19 (metodos -> object .)
    ECHO            reduce using rule 19 (metodos -> object .)
    PRINT           reduce using rule 19 (metodos -> object .)
    LPAREN          reduce using rule 19 (metodos -> object .)
    $end            reduce using rule 19 (metodos -> object .)
    R_LLAVE         reduce using rule 19 (metodos -> object .)


state 11

    (26) if -> IF . LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (27) if -> IF . LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else
    (28) if -> IF . LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else

    LPAREN          shift and go to state 28


state 12

    (17) object -> LPAREN . OBJECT RPAREN term

    OBJECT          shift and go to state 29


state 13

    (11) for -> FOR . LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE

    LPAREN          shift and go to state 30


state 14

    (12) while -> WHILE . LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE

    LPAREN          shift and go to state 31


state 15

    (13) incremento_decremento -> PREINCREMENTO .

    PUNTOCOMA       reduce using rule 13 (incremento_decremento -> PREINCREMENTO .)
    RPAREN          reduce using rule 13 (incremento_decremento -> PREINCREMENTO .)


state 16

    (14) incremento_decremento -> POSTINCREMENTO .

    PUNTOCOMA       reduce using rule 14 (incremento_decremento -> POSTINCREMENTO .)
    RPAREN          reduce using rule 14 (incremento_decremento -> POSTINCREMENTO .)


state 17

    (15) incremento_decremento -> PREDECREMENTO .

    PUNTOCOMA       reduce using rule 15 (incremento_decremento -> PREDECREMENTO .)
    RPAREN          reduce using rule 15 (incremento_decremento -> PREDECREMENTO .)


state 18

    (16) incremento_decremento -> POSTDECREMENTO .

    PUNTOCOMA       reduce using rule 16 (incremento_decremento -> POSTDECREMENTO .)
    RPAREN          reduce using rule 16 (incremento_decremento -> POSTDECREMENTO .)


state 19

    (20) imprimir -> ECHO . factor PUNTOCOMA
    (21) imprimir -> ECHO . funciones PUNTOCOMA
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN
    (111) funciones -> . trim
    (112) funciones -> . substr
    (113) funciones -> . wordwrap
    (114) funciones -> . fopen
    (115) funciones -> . fpassthru
    (116) funciones -> . feof
    (117) funciones -> . fgets
    (118) funciones -> . nl2br
    (119) funciones -> . VARIABLE IGUAL next
    (120) funciones -> . lista
    (121) funciones -> . arrays
    (124) funciones -> . POTENCIA LPAREN NUMEROS COMA NUMEROS RPAREN
    (125) funciones -> . max
    (126) funciones -> . min
    (127) funciones -> . sort
    (128) funciones -> . count
    (129) funciones -> . number_format
    (130) funciones -> . floor
    (131) funciones -> . round
    (132) funciones -> . ceil
    (133) funciones -> . rand
    (134) funciones -> . fmod
    (147) funciones -> . getclass
    (148) funciones -> . is_a
    (135) trim -> . TRIM LPAREN VARIABLE RPAREN
    (136) trim -> . TRIM LPAREN VARIABLE COMA CADENADOBLE RPAREN
    (137) trim -> . TRIM LPAREN VARIABLE COMA CADENASIMPLE RPAREN
    (138) substr -> . SUBSTR LPAREN VARIABLE COMA NUMEROS COMA NUMEROS RPAREN
    (139) substr -> . SUBSTR LPAREN CADENADOBLE COMA NUMEROS COMA NUMEROS RPAREN
    (140) substr -> . SUBSTR LPAREN VARIABLE COMA NUMEROS RPAREN
    (141) substr -> . SUBSTR LPAREN CADENADOBLE COMA NUMEROS RPAREN
    (142) wordwrap -> . WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN RPAREN
    (70) fopen -> . FOPEN LPAREN CADENADOBLE COMA CADENADOBLE RPAREN
    (71) fopen -> . FOPEN LPAREN CADENASIMPLE COMA CADENADOBLE RPAREN
    (72) fpassthru -> . FPASSTHRU LPAREN VARIABLE RPAREN
    (73) feof -> . FEOF LPAREN VARIABLE RPAREN
    (74) fgets -> . FGETS LPAREN VARIABLE COMA NUMEROS RPAREN
    (75) fgets -> . FGETS LPAREN VARIABLE RPAREN
    (76) nl2br -> . NL2BR LPAREN CADENADOBLE COMA VARIABLE RPAREN
    (77) nl2br -> . NL2BR LPAREN CADENADOBLE COMA BOOLEAN RPAREN
    (78) nl2br -> . NL2BR LPAREN CADENADOBLE RPAREN
    (79) nl2br -> . NL2BR LPAREN VARIABLE COMA BOOLEAN RPAREN
    (80) nl2br -> . NL2BR LPAREN VARIABLE COMA VARIABLE RPAREN
    (81) nl2br -> . NL2BR LPAREN VARIABLE RPAREN
    (97) lista -> . LIST LPAREN elements RPAREN
    (105) arrays -> . ARRAY LPAREN elements RPAREN
    (106) arrays -> . LCORC elements RCORC
    (104) max -> . MAX LPAREN elements RPAREN
    (107) min -> . MIN LPAREN elements RPAREN
    (143) sort -> . SORT LPAREN VARIABLE RPAREN
    (144) sort -> . SORT LPAREN VARIABLE COMA FLAG RPAREN
    (145) count -> . COUNT LPAREN VARIABLE RPAREN
    (108) number_format -> . NUMBER_FORMAT LPAREN VARIABLE RPAREN
    (109) number_format -> . NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS RPAREN
    (110) number_format -> . NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPAREN
    (88) floor -> . FLOOR LPAREN DECIMAL RPAREN
    (89) floor -> . FLOOR LPAREN MENOS DECIMAL RPAREN
    (90) floor -> . FLOOR LPAREN DECIMAL PRODUCTO NUMEROS RPAREN
    (91) floor -> . FLOOR LPAREN VARIABLE RPAREN
    (82) round -> . ROUND LPAREN DECIMAL RPAREN
    (83) round -> . ROUND LPAREN MENOS DECIMAL RPAREN
    (84) round -> . ROUND LPAREN DECIMAL COMA NUMEROS RPAREN
    (85) round -> . ROUND LPAREN DECIMAL COMA MENOS NUMEROS RPAREN
    (86) round -> . ROUND LPAREN MENOS DECIMAL COMA MENOS NUMEROS RPAREN
    (87) round -> . ROUND LPAREN MENOS DECIMAL COMA NUMEROS RPAREN
    (92) ceil -> . CEIL LPAREN MENOS DECIMAL RPAREN
    (93) ceil -> . CEIL LPAREN DECIMAL RPAREN
    (94) ceil -> . CEIL LPAREN VARIABLE RPAREN
    (95) ceil -> . CEIL LPAREN VARIABLE PRODUCTO NUMEROS RPAREN
    (122) rand -> . RAND LPAREN NUMEROS COMA NUMEROS RPAREN
    (123) rand -> . RAND LPAREN RPAREN
    (96) fmod -> . FMOD LPAREN VARIABLE COMA VARIABLE RPAREN
    (149) getclass -> . GETCLASS LPAREN VARIABLE RPAREN
    (150) is_a -> . IS_A LPAREN VARIABLE COMA CADENADOBLE RPAREN

    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 40
    POTENCIA        shift and go to state 51
    TRIM            shift and go to state 64
    SUBSTR          shift and go to state 65
    WORDWRAP        shift and go to state 66
    FOPEN           shift and go to state 67
    FPASSTHRU       shift and go to state 68
    FEOF            shift and go to state 69
    FGETS           shift and go to state 70
    NL2BR           shift and go to state 71
    LIST            shift and go to state 72
    ARRAY           shift and go to state 73
    LCORC           shift and go to state 74
    MAX             shift and go to state 75
    MIN             shift and go to state 76
    SORT            shift and go to state 77
    COUNT           shift and go to state 78
    NUMBER_FORMAT   shift and go to state 79
    FLOOR           shift and go to state 80
    ROUND           shift and go to state 81
    CEIL            shift and go to state 82
    RAND            shift and go to state 83
    FMOD            shift and go to state 84
    GETCLASS        shift and go to state 85
    IS_A            shift and go to state 86

    factor                         shift and go to state 32
    funciones                      shift and go to state 33
    trim                           shift and go to state 41
    substr                         shift and go to state 42
    wordwrap                       shift and go to state 43
    fopen                          shift and go to state 44
    fpassthru                      shift and go to state 45
    feof                           shift and go to state 46
    fgets                          shift and go to state 47
    nl2br                          shift and go to state 48
    lista                          shift and go to state 49
    arrays                         shift and go to state 50
    max                            shift and go to state 52
    min                            shift and go to state 53
    sort                           shift and go to state 54
    count                          shift and go to state 55
    number_format                  shift and go to state 56
    floor                          shift and go to state 57
    round                          shift and go to state 58
    ceil                           shift and go to state 59
    rand                           shift and go to state 60
    fmod                           shift and go to state 61
    getclass                       shift and go to state 62
    is_a                           shift and go to state 63

state 20

    (22) imprimir -> PRINT . LPAREN factor RPAREN PUNTOCOMA
    (23) imprimir -> PRINT . LPAREN funciones RPAREN PUNTOCOMA
    (24) imprimir -> PRINT . factor
    (25) imprimir -> PRINT . funciones
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN
    (111) funciones -> . trim
    (112) funciones -> . substr
    (113) funciones -> . wordwrap
    (114) funciones -> . fopen
    (115) funciones -> . fpassthru
    (116) funciones -> . feof
    (117) funciones -> . fgets
    (118) funciones -> . nl2br
    (119) funciones -> . VARIABLE IGUAL next
    (120) funciones -> . lista
    (121) funciones -> . arrays
    (124) funciones -> . POTENCIA LPAREN NUMEROS COMA NUMEROS RPAREN
    (125) funciones -> . max
    (126) funciones -> . min
    (127) funciones -> . sort
    (128) funciones -> . count
    (129) funciones -> . number_format
    (130) funciones -> . floor
    (131) funciones -> . round
    (132) funciones -> . ceil
    (133) funciones -> . rand
    (134) funciones -> . fmod
    (147) funciones -> . getclass
    (148) funciones -> . is_a
    (135) trim -> . TRIM LPAREN VARIABLE RPAREN
    (136) trim -> . TRIM LPAREN VARIABLE COMA CADENADOBLE RPAREN
    (137) trim -> . TRIM LPAREN VARIABLE COMA CADENASIMPLE RPAREN
    (138) substr -> . SUBSTR LPAREN VARIABLE COMA NUMEROS COMA NUMEROS RPAREN
    (139) substr -> . SUBSTR LPAREN CADENADOBLE COMA NUMEROS COMA NUMEROS RPAREN
    (140) substr -> . SUBSTR LPAREN VARIABLE COMA NUMEROS RPAREN
    (141) substr -> . SUBSTR LPAREN CADENADOBLE COMA NUMEROS RPAREN
    (142) wordwrap -> . WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN RPAREN
    (70) fopen -> . FOPEN LPAREN CADENADOBLE COMA CADENADOBLE RPAREN
    (71) fopen -> . FOPEN LPAREN CADENASIMPLE COMA CADENADOBLE RPAREN
    (72) fpassthru -> . FPASSTHRU LPAREN VARIABLE RPAREN
    (73) feof -> . FEOF LPAREN VARIABLE RPAREN
    (74) fgets -> . FGETS LPAREN VARIABLE COMA NUMEROS RPAREN
    (75) fgets -> . FGETS LPAREN VARIABLE RPAREN
    (76) nl2br -> . NL2BR LPAREN CADENADOBLE COMA VARIABLE RPAREN
    (77) nl2br -> . NL2BR LPAREN CADENADOBLE COMA BOOLEAN RPAREN
    (78) nl2br -> . NL2BR LPAREN CADENADOBLE RPAREN
    (79) nl2br -> . NL2BR LPAREN VARIABLE COMA BOOLEAN RPAREN
    (80) nl2br -> . NL2BR LPAREN VARIABLE COMA VARIABLE RPAREN
    (81) nl2br -> . NL2BR LPAREN VARIABLE RPAREN
    (97) lista -> . LIST LPAREN elements RPAREN
    (105) arrays -> . ARRAY LPAREN elements RPAREN
    (106) arrays -> . LCORC elements RCORC
    (104) max -> . MAX LPAREN elements RPAREN
    (107) min -> . MIN LPAREN elements RPAREN
    (143) sort -> . SORT LPAREN VARIABLE RPAREN
    (144) sort -> . SORT LPAREN VARIABLE COMA FLAG RPAREN
    (145) count -> . COUNT LPAREN VARIABLE RPAREN
    (108) number_format -> . NUMBER_FORMAT LPAREN VARIABLE RPAREN
    (109) number_format -> . NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS RPAREN
    (110) number_format -> . NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPAREN
    (88) floor -> . FLOOR LPAREN DECIMAL RPAREN
    (89) floor -> . FLOOR LPAREN MENOS DECIMAL RPAREN
    (90) floor -> . FLOOR LPAREN DECIMAL PRODUCTO NUMEROS RPAREN
    (91) floor -> . FLOOR LPAREN VARIABLE RPAREN
    (82) round -> . ROUND LPAREN DECIMAL RPAREN
    (83) round -> . ROUND LPAREN MENOS DECIMAL RPAREN
    (84) round -> . ROUND LPAREN DECIMAL COMA NUMEROS RPAREN
    (85) round -> . ROUND LPAREN DECIMAL COMA MENOS NUMEROS RPAREN
    (86) round -> . ROUND LPAREN MENOS DECIMAL COMA MENOS NUMEROS RPAREN
    (87) round -> . ROUND LPAREN MENOS DECIMAL COMA NUMEROS RPAREN
    (92) ceil -> . CEIL LPAREN MENOS DECIMAL RPAREN
    (93) ceil -> . CEIL LPAREN DECIMAL RPAREN
    (94) ceil -> . CEIL LPAREN VARIABLE RPAREN
    (95) ceil -> . CEIL LPAREN VARIABLE PRODUCTO NUMEROS RPAREN
    (122) rand -> . RAND LPAREN NUMEROS COMA NUMEROS RPAREN
    (123) rand -> . RAND LPAREN RPAREN
    (96) fmod -> . FMOD LPAREN VARIABLE COMA VARIABLE RPAREN
    (149) getclass -> . GETCLASS LPAREN VARIABLE RPAREN
    (150) is_a -> . IS_A LPAREN VARIABLE COMA CADENADOBLE RPAREN

    LPAREN          shift and go to state 87
    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 38
    BOOLEAN         shift and go to state 39
    POTENCIA        shift and go to state 51
    TRIM            shift and go to state 64
    SUBSTR          shift and go to state 65
    WORDWRAP        shift and go to state 66
    FOPEN           shift and go to state 67
    FPASSTHRU       shift and go to state 68
    FEOF            shift and go to state 69
    FGETS           shift and go to state 70
    NL2BR           shift and go to state 71
    LIST            shift and go to state 72
    ARRAY           shift and go to state 73
    LCORC           shift and go to state 74
    MAX             shift and go to state 75
    MIN             shift and go to state 76
    SORT            shift and go to state 77
    COUNT           shift and go to state 78
    NUMBER_FORMAT   shift and go to state 79
    FLOOR           shift and go to state 80
    ROUND           shift and go to state 81
    CEIL            shift and go to state 82
    RAND            shift and go to state 83
    FMOD            shift and go to state 84
    GETCLASS        shift and go to state 85
    IS_A            shift and go to state 86

    factor                         shift and go to state 88
    funciones                      shift and go to state 89
    trim                           shift and go to state 41
    substr                         shift and go to state 42
    wordwrap                       shift and go to state 43
    fopen                          shift and go to state 44
    fpassthru                      shift and go to state 45
    feof                           shift and go to state 46
    fgets                          shift and go to state 47
    nl2br                          shift and go to state 48
    lista                          shift and go to state 49
    arrays                         shift and go to state 50
    max                            shift and go to state 52
    min                            shift and go to state 53
    sort                           shift and go to state 54
    count                          shift and go to state 55
    number_format                  shift and go to state 56
    floor                          shift and go to state 57
    round                          shift and go to state 58
    ceil                           shift and go to state 59
    rand                           shift and go to state 60
    fmod                           shift and go to state 61
    getclass                       shift and go to state 62
    is_a                           shift and go to state 63

state 21

    (1) sentencias -> sentencias asignacion .

    VARIABLE        reduce using rule 1 (sentencias -> sentencias asignacion .)
    IF              reduce using rule 1 (sentencias -> sentencias asignacion .)
    FOR             reduce using rule 1 (sentencias -> sentencias asignacion .)
    WHILE           reduce using rule 1 (sentencias -> sentencias asignacion .)
    PREINCREMENTO   reduce using rule 1 (sentencias -> sentencias asignacion .)
    POSTINCREMENTO  reduce using rule 1 (sentencias -> sentencias asignacion .)
    PREDECREMENTO   reduce using rule 1 (sentencias -> sentencias asignacion .)
    POSTDECREMENTO  reduce using rule 1 (sentencias -> sentencias asignacion .)
    ECHO            reduce using rule 1 (sentencias -> sentencias asignacion .)
    PRINT           reduce using rule 1 (sentencias -> sentencias asignacion .)
    LPAREN          reduce using rule 1 (sentencias -> sentencias asignacion .)
    $end            reduce using rule 1 (sentencias -> sentencias asignacion .)
    R_LLAVE         reduce using rule 1 (sentencias -> sentencias asignacion .)


state 22

    (2) sentencias -> sentencias metodos .

    VARIABLE        reduce using rule 2 (sentencias -> sentencias metodos .)
    IF              reduce using rule 2 (sentencias -> sentencias metodos .)
    FOR             reduce using rule 2 (sentencias -> sentencias metodos .)
    WHILE           reduce using rule 2 (sentencias -> sentencias metodos .)
    PREINCREMENTO   reduce using rule 2 (sentencias -> sentencias metodos .)
    POSTINCREMENTO  reduce using rule 2 (sentencias -> sentencias metodos .)
    PREDECREMENTO   reduce using rule 2 (sentencias -> sentencias metodos .)
    POSTDECREMENTO  reduce using rule 2 (sentencias -> sentencias metodos .)
    ECHO            reduce using rule 2 (sentencias -> sentencias metodos .)
    PRINT           reduce using rule 2 (sentencias -> sentencias metodos .)
    LPAREN          reduce using rule 2 (sentencias -> sentencias metodos .)
    $end            reduce using rule 2 (sentencias -> sentencias metodos .)
    R_LLAVE         reduce using rule 2 (sentencias -> sentencias metodos .)


state 23

    (3) sentencias -> sentencias if .

    VARIABLE        reduce using rule 3 (sentencias -> sentencias if .)
    IF              reduce using rule 3 (sentencias -> sentencias if .)
    FOR             reduce using rule 3 (sentencias -> sentencias if .)
    WHILE           reduce using rule 3 (sentencias -> sentencias if .)
    PREINCREMENTO   reduce using rule 3 (sentencias -> sentencias if .)
    POSTINCREMENTO  reduce using rule 3 (sentencias -> sentencias if .)
    PREDECREMENTO   reduce using rule 3 (sentencias -> sentencias if .)
    POSTDECREMENTO  reduce using rule 3 (sentencias -> sentencias if .)
    ECHO            reduce using rule 3 (sentencias -> sentencias if .)
    PRINT           reduce using rule 3 (sentencias -> sentencias if .)
    LPAREN          reduce using rule 3 (sentencias -> sentencias if .)
    $end            reduce using rule 3 (sentencias -> sentencias if .)
    R_LLAVE         reduce using rule 3 (sentencias -> sentencias if .)


state 24

    (4) sentencias -> sentencias for .

    VARIABLE        reduce using rule 4 (sentencias -> sentencias for .)
    IF              reduce using rule 4 (sentencias -> sentencias for .)
    FOR             reduce using rule 4 (sentencias -> sentencias for .)
    WHILE           reduce using rule 4 (sentencias -> sentencias for .)
    PREINCREMENTO   reduce using rule 4 (sentencias -> sentencias for .)
    POSTINCREMENTO  reduce using rule 4 (sentencias -> sentencias for .)
    PREDECREMENTO   reduce using rule 4 (sentencias -> sentencias for .)
    POSTDECREMENTO  reduce using rule 4 (sentencias -> sentencias for .)
    ECHO            reduce using rule 4 (sentencias -> sentencias for .)
    PRINT           reduce using rule 4 (sentencias -> sentencias for .)
    LPAREN          reduce using rule 4 (sentencias -> sentencias for .)
    $end            reduce using rule 4 (sentencias -> sentencias for .)
    R_LLAVE         reduce using rule 4 (sentencias -> sentencias for .)


state 25

    (5) sentencias -> sentencias while .

    VARIABLE        reduce using rule 5 (sentencias -> sentencias while .)
    IF              reduce using rule 5 (sentencias -> sentencias while .)
    FOR             reduce using rule 5 (sentencias -> sentencias while .)
    WHILE           reduce using rule 5 (sentencias -> sentencias while .)
    PREINCREMENTO   reduce using rule 5 (sentencias -> sentencias while .)
    POSTINCREMENTO  reduce using rule 5 (sentencias -> sentencias while .)
    PREDECREMENTO   reduce using rule 5 (sentencias -> sentencias while .)
    POSTDECREMENTO  reduce using rule 5 (sentencias -> sentencias while .)
    ECHO            reduce using rule 5 (sentencias -> sentencias while .)
    PRINT           reduce using rule 5 (sentencias -> sentencias while .)
    LPAREN          reduce using rule 5 (sentencias -> sentencias while .)
    $end            reduce using rule 5 (sentencias -> sentencias while .)
    R_LLAVE         reduce using rule 5 (sentencias -> sentencias while .)


state 26

    (32) asignacion -> VARIABLE IGUAL . expresion PUNTOCOMA
    (33) asignacion -> VARIABLE IGUAL . factor PUNTOCOMA
    (35) asignacion -> VARIABLE IGUAL . funciones PUNTOCOMA
    (36) expresion -> . expresion operadores term
    (37) expresion -> . term
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN
    (111) funciones -> . trim
    (112) funciones -> . substr
    (113) funciones -> . wordwrap
    (114) funciones -> . fopen
    (115) funciones -> . fpassthru
    (116) funciones -> . feof
    (117) funciones -> . fgets
    (118) funciones -> . nl2br
    (119) funciones -> . VARIABLE IGUAL next
    (120) funciones -> . lista
    (121) funciones -> . arrays
    (124) funciones -> . POTENCIA LPAREN NUMEROS COMA NUMEROS RPAREN
    (125) funciones -> . max
    (126) funciones -> . min
    (127) funciones -> . sort
    (128) funciones -> . count
    (129) funciones -> . number_format
    (130) funciones -> . floor
    (131) funciones -> . round
    (132) funciones -> . ceil
    (133) funciones -> . rand
    (134) funciones -> . fmod
    (147) funciones -> . getclass
    (148) funciones -> . is_a
    (62) term -> . factor
    (135) trim -> . TRIM LPAREN VARIABLE RPAREN
    (136) trim -> . TRIM LPAREN VARIABLE COMA CADENADOBLE RPAREN
    (137) trim -> . TRIM LPAREN VARIABLE COMA CADENASIMPLE RPAREN
    (138) substr -> . SUBSTR LPAREN VARIABLE COMA NUMEROS COMA NUMEROS RPAREN
    (139) substr -> . SUBSTR LPAREN CADENADOBLE COMA NUMEROS COMA NUMEROS RPAREN
    (140) substr -> . SUBSTR LPAREN VARIABLE COMA NUMEROS RPAREN
    (141) substr -> . SUBSTR LPAREN CADENADOBLE COMA NUMEROS RPAREN
    (142) wordwrap -> . WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN RPAREN
    (70) fopen -> . FOPEN LPAREN CADENADOBLE COMA CADENADOBLE RPAREN
    (71) fopen -> . FOPEN LPAREN CADENASIMPLE COMA CADENADOBLE RPAREN
    (72) fpassthru -> . FPASSTHRU LPAREN VARIABLE RPAREN
    (73) feof -> . FEOF LPAREN VARIABLE RPAREN
    (74) fgets -> . FGETS LPAREN VARIABLE COMA NUMEROS RPAREN
    (75) fgets -> . FGETS LPAREN VARIABLE RPAREN
    (76) nl2br -> . NL2BR LPAREN CADENADOBLE COMA VARIABLE RPAREN
    (77) nl2br -> . NL2BR LPAREN CADENADOBLE COMA BOOLEAN RPAREN
    (78) nl2br -> . NL2BR LPAREN CADENADOBLE RPAREN
    (79) nl2br -> . NL2BR LPAREN VARIABLE COMA BOOLEAN RPAREN
    (80) nl2br -> . NL2BR LPAREN VARIABLE COMA VARIABLE RPAREN
    (81) nl2br -> . NL2BR LPAREN VARIABLE RPAREN
    (97) lista -> . LIST LPAREN elements RPAREN
    (105) arrays -> . ARRAY LPAREN elements RPAREN
    (106) arrays -> . LCORC elements RCORC
    (104) max -> . MAX LPAREN elements RPAREN
    (107) min -> . MIN LPAREN elements RPAREN
    (143) sort -> . SORT LPAREN VARIABLE RPAREN
    (144) sort -> . SORT LPAREN VARIABLE COMA FLAG RPAREN
    (145) count -> . COUNT LPAREN VARIABLE RPAREN
    (108) number_format -> . NUMBER_FORMAT LPAREN VARIABLE RPAREN
    (109) number_format -> . NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS RPAREN
    (110) number_format -> . NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPAREN
    (88) floor -> . FLOOR LPAREN DECIMAL RPAREN
    (89) floor -> . FLOOR LPAREN MENOS DECIMAL RPAREN
    (90) floor -> . FLOOR LPAREN DECIMAL PRODUCTO NUMEROS RPAREN
    (91) floor -> . FLOOR LPAREN VARIABLE RPAREN
    (82) round -> . ROUND LPAREN DECIMAL RPAREN
    (83) round -> . ROUND LPAREN MENOS DECIMAL RPAREN
    (84) round -> . ROUND LPAREN DECIMAL COMA NUMEROS RPAREN
    (85) round -> . ROUND LPAREN DECIMAL COMA MENOS NUMEROS RPAREN
    (86) round -> . ROUND LPAREN MENOS DECIMAL COMA MENOS NUMEROS RPAREN
    (87) round -> . ROUND LPAREN MENOS DECIMAL COMA NUMEROS RPAREN
    (92) ceil -> . CEIL LPAREN MENOS DECIMAL RPAREN
    (93) ceil -> . CEIL LPAREN DECIMAL RPAREN
    (94) ceil -> . CEIL LPAREN VARIABLE RPAREN
    (95) ceil -> . CEIL LPAREN VARIABLE PRODUCTO NUMEROS RPAREN
    (122) rand -> . RAND LPAREN NUMEROS COMA NUMEROS RPAREN
    (123) rand -> . RAND LPAREN RPAREN
    (96) fmod -> . FMOD LPAREN VARIABLE COMA VARIABLE RPAREN
    (149) getclass -> . GETCLASS LPAREN VARIABLE RPAREN
    (150) is_a -> . IS_A LPAREN VARIABLE COMA CADENADOBLE RPAREN

    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 40
    POTENCIA        shift and go to state 51
    TRIM            shift and go to state 64
    SUBSTR          shift and go to state 65
    WORDWRAP        shift and go to state 66
    FOPEN           shift and go to state 67
    FPASSTHRU       shift and go to state 68
    FEOF            shift and go to state 69
    FGETS           shift and go to state 70
    NL2BR           shift and go to state 71
    LIST            shift and go to state 72
    ARRAY           shift and go to state 73
    LCORC           shift and go to state 74
    MAX             shift and go to state 75
    MIN             shift and go to state 76
    SORT            shift and go to state 77
    COUNT           shift and go to state 78
    NUMBER_FORMAT   shift and go to state 79
    FLOOR           shift and go to state 80
    ROUND           shift and go to state 81
    CEIL            shift and go to state 82
    RAND            shift and go to state 83
    FMOD            shift and go to state 84
    GETCLASS        shift and go to state 85
    IS_A            shift and go to state 86

    expresion                      shift and go to state 90
    factor                         shift and go to state 91
    funciones                      shift and go to state 92
    term                           shift and go to state 93
    trim                           shift and go to state 41
    substr                         shift and go to state 42
    wordwrap                       shift and go to state 43
    fopen                          shift and go to state 44
    fpassthru                      shift and go to state 45
    feof                           shift and go to state 46
    fgets                          shift and go to state 47
    nl2br                          shift and go to state 48
    lista                          shift and go to state 49
    arrays                         shift and go to state 50
    max                            shift and go to state 52
    min                            shift and go to state 53
    sort                           shift and go to state 54
    count                          shift and go to state 55
    number_format                  shift and go to state 56
    floor                          shift and go to state 57
    round                          shift and go to state 58
    ceil                           shift and go to state 59
    rand                           shift and go to state 60
    fmod                           shift and go to state 61
    getclass                       shift and go to state 62
    is_a                           shift and go to state 63

state 27

    (34) asignacion -> incremento_decremento PUNTOCOMA .

    VARIABLE        reduce using rule 34 (asignacion -> incremento_decremento PUNTOCOMA .)
    IF              reduce using rule 34 (asignacion -> incremento_decremento PUNTOCOMA .)
    FOR             reduce using rule 34 (asignacion -> incremento_decremento PUNTOCOMA .)
    WHILE           reduce using rule 34 (asignacion -> incremento_decremento PUNTOCOMA .)
    PREINCREMENTO   reduce using rule 34 (asignacion -> incremento_decremento PUNTOCOMA .)
    POSTINCREMENTO  reduce using rule 34 (asignacion -> incremento_decremento PUNTOCOMA .)
    PREDECREMENTO   reduce using rule 34 (asignacion -> incremento_decremento PUNTOCOMA .)
    POSTDECREMENTO  reduce using rule 34 (asignacion -> incremento_decremento PUNTOCOMA .)
    ECHO            reduce using rule 34 (asignacion -> incremento_decremento PUNTOCOMA .)
    PRINT           reduce using rule 34 (asignacion -> incremento_decremento PUNTOCOMA .)
    LPAREN          reduce using rule 34 (asignacion -> incremento_decremento PUNTOCOMA .)
    $end            reduce using rule 34 (asignacion -> incremento_decremento PUNTOCOMA .)
    NO              reduce using rule 34 (asignacion -> incremento_decremento PUNTOCOMA .)
    NUMEROS         reduce using rule 34 (asignacion -> incremento_decremento PUNTOCOMA .)
    DECIMAL         reduce using rule 34 (asignacion -> incremento_decremento PUNTOCOMA .)
    CADENASIMPLE    reduce using rule 34 (asignacion -> incremento_decremento PUNTOCOMA .)
    CADENADOBLE     reduce using rule 34 (asignacion -> incremento_decremento PUNTOCOMA .)
    BOOLEAN         reduce using rule 34 (asignacion -> incremento_decremento PUNTOCOMA .)
    R_LLAVE         reduce using rule 34 (asignacion -> incremento_decremento PUNTOCOMA .)


state 28

    (26) if -> IF LPAREN . comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (27) if -> IF LPAREN . comparaciones RPAREN L_LLAVE sentencias R_LLAVE else
    (28) if -> IF LPAREN . comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else
    (54) comparaciones -> . comparacion
    (55) comparaciones -> . comparaciones anado comparacion
    (44) comparacion -> . condiciones
    (45) comparacion -> . LPAREN condiciones RPAREN
    (46) comparacion -> . NO LPAREN condiciones RPAREN
    (47) condiciones -> . factor IGUAL_IGUAL factor
    (48) condiciones -> . factor IDENTICO factor
    (49) condiciones -> . factor DISTINTO factor
    (50) condiciones -> . factor MENORQUE factor
    (51) condiciones -> . factor MAYORQUE factor
    (52) condiciones -> . factor MENOROIGUAL factor
    (53) condiciones -> . factor MAYOROIGUAL factor
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN

    LPAREN          shift and go to state 94
    NO              shift and go to state 98
    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 100
    BOOLEAN         shift and go to state 39

    comparaciones                  shift and go to state 95
    comparacion                    shift and go to state 96
    condiciones                    shift and go to state 97
    factor                         shift and go to state 99

state 29

    (17) object -> LPAREN OBJECT . RPAREN term

    RPAREN          shift and go to state 101


state 30

    (11) for -> FOR LPAREN . asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE
    (32) asignacion -> . VARIABLE IGUAL expresion PUNTOCOMA
    (33) asignacion -> . VARIABLE IGUAL factor PUNTOCOMA
    (34) asignacion -> . incremento_decremento PUNTOCOMA
    (35) asignacion -> . VARIABLE IGUAL funciones PUNTOCOMA
    (13) incremento_decremento -> . PREINCREMENTO
    (14) incremento_decremento -> . POSTINCREMENTO
    (15) incremento_decremento -> . PREDECREMENTO
    (16) incremento_decremento -> . POSTDECREMENTO

    VARIABLE        shift and go to state 7
    PREINCREMENTO   shift and go to state 15
    POSTINCREMENTO  shift and go to state 16
    PREDECREMENTO   shift and go to state 17
    POSTDECREMENTO  shift and go to state 18

    asignacion                     shift and go to state 102
    incremento_decremento          shift and go to state 8

state 31

    (12) while -> WHILE LPAREN . comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (54) comparaciones -> . comparacion
    (55) comparaciones -> . comparaciones anado comparacion
    (44) comparacion -> . condiciones
    (45) comparacion -> . LPAREN condiciones RPAREN
    (46) comparacion -> . NO LPAREN condiciones RPAREN
    (47) condiciones -> . factor IGUAL_IGUAL factor
    (48) condiciones -> . factor IDENTICO factor
    (49) condiciones -> . factor DISTINTO factor
    (50) condiciones -> . factor MENORQUE factor
    (51) condiciones -> . factor MAYORQUE factor
    (52) condiciones -> . factor MENOROIGUAL factor
    (53) condiciones -> . factor MAYOROIGUAL factor
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN

    LPAREN          shift and go to state 94
    NO              shift and go to state 98
    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 100
    BOOLEAN         shift and go to state 39

    comparaciones                  shift and go to state 103
    comparacion                    shift and go to state 96
    condiciones                    shift and go to state 97
    factor                         shift and go to state 99

state 32

    (20) imprimir -> ECHO factor . PUNTOCOMA

    PUNTOCOMA       shift and go to state 104


state 33

    (21) imprimir -> ECHO funciones . PUNTOCOMA

    PUNTOCOMA       shift and go to state 105


state 34

    (63) factor -> NUMEROS .

    PUNTOCOMA       reduce using rule 63 (factor -> NUMEROS .)
    VARIABLE        reduce using rule 63 (factor -> NUMEROS .)
    IF              reduce using rule 63 (factor -> NUMEROS .)
    FOR             reduce using rule 63 (factor -> NUMEROS .)
    WHILE           reduce using rule 63 (factor -> NUMEROS .)
    PREINCREMENTO   reduce using rule 63 (factor -> NUMEROS .)
    POSTINCREMENTO  reduce using rule 63 (factor -> NUMEROS .)
    PREDECREMENTO   reduce using rule 63 (factor -> NUMEROS .)
    POSTDECREMENTO  reduce using rule 63 (factor -> NUMEROS .)
    ECHO            reduce using rule 63 (factor -> NUMEROS .)
    PRINT           reduce using rule 63 (factor -> NUMEROS .)
    LPAREN          reduce using rule 63 (factor -> NUMEROS .)
    $end            reduce using rule 63 (factor -> NUMEROS .)
    R_LLAVE         reduce using rule 63 (factor -> NUMEROS .)
    MAS             reduce using rule 63 (factor -> NUMEROS .)
    MENOS           reduce using rule 63 (factor -> NUMEROS .)
    PRODUCTO        reduce using rule 63 (factor -> NUMEROS .)
    DIVISION        reduce using rule 63 (factor -> NUMEROS .)
    MODULO          reduce using rule 63 (factor -> NUMEROS .)
    EXPONENCIACION  reduce using rule 63 (factor -> NUMEROS .)
    IGUAL_IGUAL     reduce using rule 63 (factor -> NUMEROS .)
    IDENTICO        reduce using rule 63 (factor -> NUMEROS .)
    DISTINTO        reduce using rule 63 (factor -> NUMEROS .)
    MENORQUE        reduce using rule 63 (factor -> NUMEROS .)
    MAYORQUE        reduce using rule 63 (factor -> NUMEROS .)
    MENOROIGUAL     reduce using rule 63 (factor -> NUMEROS .)
    MAYOROIGUAL     reduce using rule 63 (factor -> NUMEROS .)
    RPAREN          reduce using rule 63 (factor -> NUMEROS .)
    RCORC           reduce using rule 63 (factor -> NUMEROS .)
    COMA            reduce using rule 63 (factor -> NUMEROS .)
    XOR             reduce using rule 63 (factor -> NUMEROS .)
    ANDAND          reduce using rule 63 (factor -> NUMEROS .)
    AND             reduce using rule 63 (factor -> NUMEROS .)
    OR              reduce using rule 63 (factor -> NUMEROS .)
    OROR            reduce using rule 63 (factor -> NUMEROS .)


state 35

    (64) factor -> DECIMAL .

    PUNTOCOMA       reduce using rule 64 (factor -> DECIMAL .)
    VARIABLE        reduce using rule 64 (factor -> DECIMAL .)
    IF              reduce using rule 64 (factor -> DECIMAL .)
    FOR             reduce using rule 64 (factor -> DECIMAL .)
    WHILE           reduce using rule 64 (factor -> DECIMAL .)
    PREINCREMENTO   reduce using rule 64 (factor -> DECIMAL .)
    POSTINCREMENTO  reduce using rule 64 (factor -> DECIMAL .)
    PREDECREMENTO   reduce using rule 64 (factor -> DECIMAL .)
    POSTDECREMENTO  reduce using rule 64 (factor -> DECIMAL .)
    ECHO            reduce using rule 64 (factor -> DECIMAL .)
    PRINT           reduce using rule 64 (factor -> DECIMAL .)
    LPAREN          reduce using rule 64 (factor -> DECIMAL .)
    $end            reduce using rule 64 (factor -> DECIMAL .)
    R_LLAVE         reduce using rule 64 (factor -> DECIMAL .)
    MAS             reduce using rule 64 (factor -> DECIMAL .)
    MENOS           reduce using rule 64 (factor -> DECIMAL .)
    PRODUCTO        reduce using rule 64 (factor -> DECIMAL .)
    DIVISION        reduce using rule 64 (factor -> DECIMAL .)
    MODULO          reduce using rule 64 (factor -> DECIMAL .)
    EXPONENCIACION  reduce using rule 64 (factor -> DECIMAL .)
    IGUAL_IGUAL     reduce using rule 64 (factor -> DECIMAL .)
    IDENTICO        reduce using rule 64 (factor -> DECIMAL .)
    DISTINTO        reduce using rule 64 (factor -> DECIMAL .)
    MENORQUE        reduce using rule 64 (factor -> DECIMAL .)
    MAYORQUE        reduce using rule 64 (factor -> DECIMAL .)
    MENOROIGUAL     reduce using rule 64 (factor -> DECIMAL .)
    MAYOROIGUAL     reduce using rule 64 (factor -> DECIMAL .)
    RPAREN          reduce using rule 64 (factor -> DECIMAL .)
    RCORC           reduce using rule 64 (factor -> DECIMAL .)
    COMA            reduce using rule 64 (factor -> DECIMAL .)
    XOR             reduce using rule 64 (factor -> DECIMAL .)
    ANDAND          reduce using rule 64 (factor -> DECIMAL .)
    AND             reduce using rule 64 (factor -> DECIMAL .)
    OR              reduce using rule 64 (factor -> DECIMAL .)
    OROR            reduce using rule 64 (factor -> DECIMAL .)


state 36

    (65) factor -> CADENASIMPLE .

    PUNTOCOMA       reduce using rule 65 (factor -> CADENASIMPLE .)
    VARIABLE        reduce using rule 65 (factor -> CADENASIMPLE .)
    IF              reduce using rule 65 (factor -> CADENASIMPLE .)
    FOR             reduce using rule 65 (factor -> CADENASIMPLE .)
    WHILE           reduce using rule 65 (factor -> CADENASIMPLE .)
    PREINCREMENTO   reduce using rule 65 (factor -> CADENASIMPLE .)
    POSTINCREMENTO  reduce using rule 65 (factor -> CADENASIMPLE .)
    PREDECREMENTO   reduce using rule 65 (factor -> CADENASIMPLE .)
    POSTDECREMENTO  reduce using rule 65 (factor -> CADENASIMPLE .)
    ECHO            reduce using rule 65 (factor -> CADENASIMPLE .)
    PRINT           reduce using rule 65 (factor -> CADENASIMPLE .)
    LPAREN          reduce using rule 65 (factor -> CADENASIMPLE .)
    $end            reduce using rule 65 (factor -> CADENASIMPLE .)
    R_LLAVE         reduce using rule 65 (factor -> CADENASIMPLE .)
    MAS             reduce using rule 65 (factor -> CADENASIMPLE .)
    MENOS           reduce using rule 65 (factor -> CADENASIMPLE .)
    PRODUCTO        reduce using rule 65 (factor -> CADENASIMPLE .)
    DIVISION        reduce using rule 65 (factor -> CADENASIMPLE .)
    MODULO          reduce using rule 65 (factor -> CADENASIMPLE .)
    EXPONENCIACION  reduce using rule 65 (factor -> CADENASIMPLE .)
    IGUAL_IGUAL     reduce using rule 65 (factor -> CADENASIMPLE .)
    IDENTICO        reduce using rule 65 (factor -> CADENASIMPLE .)
    DISTINTO        reduce using rule 65 (factor -> CADENASIMPLE .)
    MENORQUE        reduce using rule 65 (factor -> CADENASIMPLE .)
    MAYORQUE        reduce using rule 65 (factor -> CADENASIMPLE .)
    MENOROIGUAL     reduce using rule 65 (factor -> CADENASIMPLE .)
    MAYOROIGUAL     reduce using rule 65 (factor -> CADENASIMPLE .)
    RPAREN          reduce using rule 65 (factor -> CADENASIMPLE .)
    RCORC           reduce using rule 65 (factor -> CADENASIMPLE .)
    COMA            reduce using rule 65 (factor -> CADENASIMPLE .)
    XOR             reduce using rule 65 (factor -> CADENASIMPLE .)
    ANDAND          reduce using rule 65 (factor -> CADENASIMPLE .)
    AND             reduce using rule 65 (factor -> CADENASIMPLE .)
    OR              reduce using rule 65 (factor -> CADENASIMPLE .)
    OROR            reduce using rule 65 (factor -> CADENASIMPLE .)


state 37

    (66) factor -> CADENADOBLE .

    PUNTOCOMA       reduce using rule 66 (factor -> CADENADOBLE .)
    VARIABLE        reduce using rule 66 (factor -> CADENADOBLE .)
    IF              reduce using rule 66 (factor -> CADENADOBLE .)
    FOR             reduce using rule 66 (factor -> CADENADOBLE .)
    WHILE           reduce using rule 66 (factor -> CADENADOBLE .)
    PREINCREMENTO   reduce using rule 66 (factor -> CADENADOBLE .)
    POSTINCREMENTO  reduce using rule 66 (factor -> CADENADOBLE .)
    PREDECREMENTO   reduce using rule 66 (factor -> CADENADOBLE .)
    POSTDECREMENTO  reduce using rule 66 (factor -> CADENADOBLE .)
    ECHO            reduce using rule 66 (factor -> CADENADOBLE .)
    PRINT           reduce using rule 66 (factor -> CADENADOBLE .)
    LPAREN          reduce using rule 66 (factor -> CADENADOBLE .)
    $end            reduce using rule 66 (factor -> CADENADOBLE .)
    R_LLAVE         reduce using rule 66 (factor -> CADENADOBLE .)
    MAS             reduce using rule 66 (factor -> CADENADOBLE .)
    MENOS           reduce using rule 66 (factor -> CADENADOBLE .)
    PRODUCTO        reduce using rule 66 (factor -> CADENADOBLE .)
    DIVISION        reduce using rule 66 (factor -> CADENADOBLE .)
    MODULO          reduce using rule 66 (factor -> CADENADOBLE .)
    EXPONENCIACION  reduce using rule 66 (factor -> CADENADOBLE .)
    IGUAL_IGUAL     reduce using rule 66 (factor -> CADENADOBLE .)
    IDENTICO        reduce using rule 66 (factor -> CADENADOBLE .)
    DISTINTO        reduce using rule 66 (factor -> CADENADOBLE .)
    MENORQUE        reduce using rule 66 (factor -> CADENADOBLE .)
    MAYORQUE        reduce using rule 66 (factor -> CADENADOBLE .)
    MENOROIGUAL     reduce using rule 66 (factor -> CADENADOBLE .)
    MAYOROIGUAL     reduce using rule 66 (factor -> CADENADOBLE .)
    RPAREN          reduce using rule 66 (factor -> CADENADOBLE .)
    RCORC           reduce using rule 66 (factor -> CADENADOBLE .)
    COMA            reduce using rule 66 (factor -> CADENADOBLE .)
    XOR             reduce using rule 66 (factor -> CADENADOBLE .)
    ANDAND          reduce using rule 66 (factor -> CADENADOBLE .)
    AND             reduce using rule 66 (factor -> CADENADOBLE .)
    OR              reduce using rule 66 (factor -> CADENADOBLE .)
    OROR            reduce using rule 66 (factor -> CADENADOBLE .)


state 38

    (67) factor -> VARIABLE .
    (119) funciones -> VARIABLE . IGUAL next

    PUNTOCOMA       reduce using rule 67 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 67 (factor -> VARIABLE .)
    IF              reduce using rule 67 (factor -> VARIABLE .)
    FOR             reduce using rule 67 (factor -> VARIABLE .)
    WHILE           reduce using rule 67 (factor -> VARIABLE .)
    PREINCREMENTO   reduce using rule 67 (factor -> VARIABLE .)
    POSTINCREMENTO  reduce using rule 67 (factor -> VARIABLE .)
    PREDECREMENTO   reduce using rule 67 (factor -> VARIABLE .)
    POSTDECREMENTO  reduce using rule 67 (factor -> VARIABLE .)
    ECHO            reduce using rule 67 (factor -> VARIABLE .)
    PRINT           reduce using rule 67 (factor -> VARIABLE .)
    LPAREN          reduce using rule 67 (factor -> VARIABLE .)
    $end            reduce using rule 67 (factor -> VARIABLE .)
    R_LLAVE         reduce using rule 67 (factor -> VARIABLE .)
    MAS             reduce using rule 67 (factor -> VARIABLE .)
    MENOS           reduce using rule 67 (factor -> VARIABLE .)
    PRODUCTO        reduce using rule 67 (factor -> VARIABLE .)
    DIVISION        reduce using rule 67 (factor -> VARIABLE .)
    MODULO          reduce using rule 67 (factor -> VARIABLE .)
    EXPONENCIACION  reduce using rule 67 (factor -> VARIABLE .)
    RPAREN          reduce using rule 67 (factor -> VARIABLE .)
    IGUAL           shift and go to state 106


state 39

    (68) factor -> BOOLEAN .

    PUNTOCOMA       reduce using rule 68 (factor -> BOOLEAN .)
    VARIABLE        reduce using rule 68 (factor -> BOOLEAN .)
    IF              reduce using rule 68 (factor -> BOOLEAN .)
    FOR             reduce using rule 68 (factor -> BOOLEAN .)
    WHILE           reduce using rule 68 (factor -> BOOLEAN .)
    PREINCREMENTO   reduce using rule 68 (factor -> BOOLEAN .)
    POSTINCREMENTO  reduce using rule 68 (factor -> BOOLEAN .)
    PREDECREMENTO   reduce using rule 68 (factor -> BOOLEAN .)
    POSTDECREMENTO  reduce using rule 68 (factor -> BOOLEAN .)
    ECHO            reduce using rule 68 (factor -> BOOLEAN .)
    PRINT           reduce using rule 68 (factor -> BOOLEAN .)
    LPAREN          reduce using rule 68 (factor -> BOOLEAN .)
    $end            reduce using rule 68 (factor -> BOOLEAN .)
    R_LLAVE         reduce using rule 68 (factor -> BOOLEAN .)
    MAS             reduce using rule 68 (factor -> BOOLEAN .)
    MENOS           reduce using rule 68 (factor -> BOOLEAN .)
    PRODUCTO        reduce using rule 68 (factor -> BOOLEAN .)
    DIVISION        reduce using rule 68 (factor -> BOOLEAN .)
    MODULO          reduce using rule 68 (factor -> BOOLEAN .)
    EXPONENCIACION  reduce using rule 68 (factor -> BOOLEAN .)
    IGUAL_IGUAL     reduce using rule 68 (factor -> BOOLEAN .)
    IDENTICO        reduce using rule 68 (factor -> BOOLEAN .)
    DISTINTO        reduce using rule 68 (factor -> BOOLEAN .)
    MENORQUE        reduce using rule 68 (factor -> BOOLEAN .)
    MAYORQUE        reduce using rule 68 (factor -> BOOLEAN .)
    MENOROIGUAL     reduce using rule 68 (factor -> BOOLEAN .)
    MAYOROIGUAL     reduce using rule 68 (factor -> BOOLEAN .)
    RPAREN          reduce using rule 68 (factor -> BOOLEAN .)
    RCORC           reduce using rule 68 (factor -> BOOLEAN .)
    COMA            reduce using rule 68 (factor -> BOOLEAN .)
    XOR             reduce using rule 68 (factor -> BOOLEAN .)
    ANDAND          reduce using rule 68 (factor -> BOOLEAN .)
    AND             reduce using rule 68 (factor -> BOOLEAN .)
    OR              reduce using rule 68 (factor -> BOOLEAN .)
    OROR            reduce using rule 68 (factor -> BOOLEAN .)


state 40

    (69) factor -> LPAREN . expresion RPAREN
    (36) expresion -> . expresion operadores term
    (37) expresion -> . term
    (62) term -> . factor
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN

    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 100
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 40

    expresion                      shift and go to state 107
    term                           shift and go to state 93
    factor                         shift and go to state 108

state 41

    (111) funciones -> trim .

    PUNTOCOMA       reduce using rule 111 (funciones -> trim .)
    VARIABLE        reduce using rule 111 (funciones -> trim .)
    IF              reduce using rule 111 (funciones -> trim .)
    FOR             reduce using rule 111 (funciones -> trim .)
    WHILE           reduce using rule 111 (funciones -> trim .)
    PREINCREMENTO   reduce using rule 111 (funciones -> trim .)
    POSTINCREMENTO  reduce using rule 111 (funciones -> trim .)
    PREDECREMENTO   reduce using rule 111 (funciones -> trim .)
    POSTDECREMENTO  reduce using rule 111 (funciones -> trim .)
    ECHO            reduce using rule 111 (funciones -> trim .)
    PRINT           reduce using rule 111 (funciones -> trim .)
    LPAREN          reduce using rule 111 (funciones -> trim .)
    $end            reduce using rule 111 (funciones -> trim .)
    R_LLAVE         reduce using rule 111 (funciones -> trim .)
    RPAREN          reduce using rule 111 (funciones -> trim .)


state 42

    (112) funciones -> substr .

    PUNTOCOMA       reduce using rule 112 (funciones -> substr .)
    VARIABLE        reduce using rule 112 (funciones -> substr .)
    IF              reduce using rule 112 (funciones -> substr .)
    FOR             reduce using rule 112 (funciones -> substr .)
    WHILE           reduce using rule 112 (funciones -> substr .)
    PREINCREMENTO   reduce using rule 112 (funciones -> substr .)
    POSTINCREMENTO  reduce using rule 112 (funciones -> substr .)
    PREDECREMENTO   reduce using rule 112 (funciones -> substr .)
    POSTDECREMENTO  reduce using rule 112 (funciones -> substr .)
    ECHO            reduce using rule 112 (funciones -> substr .)
    PRINT           reduce using rule 112 (funciones -> substr .)
    LPAREN          reduce using rule 112 (funciones -> substr .)
    $end            reduce using rule 112 (funciones -> substr .)
    R_LLAVE         reduce using rule 112 (funciones -> substr .)
    RPAREN          reduce using rule 112 (funciones -> substr .)


state 43

    (113) funciones -> wordwrap .

    PUNTOCOMA       reduce using rule 113 (funciones -> wordwrap .)
    VARIABLE        reduce using rule 113 (funciones -> wordwrap .)
    IF              reduce using rule 113 (funciones -> wordwrap .)
    FOR             reduce using rule 113 (funciones -> wordwrap .)
    WHILE           reduce using rule 113 (funciones -> wordwrap .)
    PREINCREMENTO   reduce using rule 113 (funciones -> wordwrap .)
    POSTINCREMENTO  reduce using rule 113 (funciones -> wordwrap .)
    PREDECREMENTO   reduce using rule 113 (funciones -> wordwrap .)
    POSTDECREMENTO  reduce using rule 113 (funciones -> wordwrap .)
    ECHO            reduce using rule 113 (funciones -> wordwrap .)
    PRINT           reduce using rule 113 (funciones -> wordwrap .)
    LPAREN          reduce using rule 113 (funciones -> wordwrap .)
    $end            reduce using rule 113 (funciones -> wordwrap .)
    R_LLAVE         reduce using rule 113 (funciones -> wordwrap .)
    RPAREN          reduce using rule 113 (funciones -> wordwrap .)


state 44

    (114) funciones -> fopen .

    PUNTOCOMA       reduce using rule 114 (funciones -> fopen .)
    VARIABLE        reduce using rule 114 (funciones -> fopen .)
    IF              reduce using rule 114 (funciones -> fopen .)
    FOR             reduce using rule 114 (funciones -> fopen .)
    WHILE           reduce using rule 114 (funciones -> fopen .)
    PREINCREMENTO   reduce using rule 114 (funciones -> fopen .)
    POSTINCREMENTO  reduce using rule 114 (funciones -> fopen .)
    PREDECREMENTO   reduce using rule 114 (funciones -> fopen .)
    POSTDECREMENTO  reduce using rule 114 (funciones -> fopen .)
    ECHO            reduce using rule 114 (funciones -> fopen .)
    PRINT           reduce using rule 114 (funciones -> fopen .)
    LPAREN          reduce using rule 114 (funciones -> fopen .)
    $end            reduce using rule 114 (funciones -> fopen .)
    R_LLAVE         reduce using rule 114 (funciones -> fopen .)
    RPAREN          reduce using rule 114 (funciones -> fopen .)


state 45

    (115) funciones -> fpassthru .

    PUNTOCOMA       reduce using rule 115 (funciones -> fpassthru .)
    VARIABLE        reduce using rule 115 (funciones -> fpassthru .)
    IF              reduce using rule 115 (funciones -> fpassthru .)
    FOR             reduce using rule 115 (funciones -> fpassthru .)
    WHILE           reduce using rule 115 (funciones -> fpassthru .)
    PREINCREMENTO   reduce using rule 115 (funciones -> fpassthru .)
    POSTINCREMENTO  reduce using rule 115 (funciones -> fpassthru .)
    PREDECREMENTO   reduce using rule 115 (funciones -> fpassthru .)
    POSTDECREMENTO  reduce using rule 115 (funciones -> fpassthru .)
    ECHO            reduce using rule 115 (funciones -> fpassthru .)
    PRINT           reduce using rule 115 (funciones -> fpassthru .)
    LPAREN          reduce using rule 115 (funciones -> fpassthru .)
    $end            reduce using rule 115 (funciones -> fpassthru .)
    R_LLAVE         reduce using rule 115 (funciones -> fpassthru .)
    RPAREN          reduce using rule 115 (funciones -> fpassthru .)


state 46

    (116) funciones -> feof .

    PUNTOCOMA       reduce using rule 116 (funciones -> feof .)
    VARIABLE        reduce using rule 116 (funciones -> feof .)
    IF              reduce using rule 116 (funciones -> feof .)
    FOR             reduce using rule 116 (funciones -> feof .)
    WHILE           reduce using rule 116 (funciones -> feof .)
    PREINCREMENTO   reduce using rule 116 (funciones -> feof .)
    POSTINCREMENTO  reduce using rule 116 (funciones -> feof .)
    PREDECREMENTO   reduce using rule 116 (funciones -> feof .)
    POSTDECREMENTO  reduce using rule 116 (funciones -> feof .)
    ECHO            reduce using rule 116 (funciones -> feof .)
    PRINT           reduce using rule 116 (funciones -> feof .)
    LPAREN          reduce using rule 116 (funciones -> feof .)
    $end            reduce using rule 116 (funciones -> feof .)
    R_LLAVE         reduce using rule 116 (funciones -> feof .)
    RPAREN          reduce using rule 116 (funciones -> feof .)


state 47

    (117) funciones -> fgets .

    PUNTOCOMA       reduce using rule 117 (funciones -> fgets .)
    VARIABLE        reduce using rule 117 (funciones -> fgets .)
    IF              reduce using rule 117 (funciones -> fgets .)
    FOR             reduce using rule 117 (funciones -> fgets .)
    WHILE           reduce using rule 117 (funciones -> fgets .)
    PREINCREMENTO   reduce using rule 117 (funciones -> fgets .)
    POSTINCREMENTO  reduce using rule 117 (funciones -> fgets .)
    PREDECREMENTO   reduce using rule 117 (funciones -> fgets .)
    POSTDECREMENTO  reduce using rule 117 (funciones -> fgets .)
    ECHO            reduce using rule 117 (funciones -> fgets .)
    PRINT           reduce using rule 117 (funciones -> fgets .)
    LPAREN          reduce using rule 117 (funciones -> fgets .)
    $end            reduce using rule 117 (funciones -> fgets .)
    R_LLAVE         reduce using rule 117 (funciones -> fgets .)
    RPAREN          reduce using rule 117 (funciones -> fgets .)


state 48

    (118) funciones -> nl2br .

    PUNTOCOMA       reduce using rule 118 (funciones -> nl2br .)
    VARIABLE        reduce using rule 118 (funciones -> nl2br .)
    IF              reduce using rule 118 (funciones -> nl2br .)
    FOR             reduce using rule 118 (funciones -> nl2br .)
    WHILE           reduce using rule 118 (funciones -> nl2br .)
    PREINCREMENTO   reduce using rule 118 (funciones -> nl2br .)
    POSTINCREMENTO  reduce using rule 118 (funciones -> nl2br .)
    PREDECREMENTO   reduce using rule 118 (funciones -> nl2br .)
    POSTDECREMENTO  reduce using rule 118 (funciones -> nl2br .)
    ECHO            reduce using rule 118 (funciones -> nl2br .)
    PRINT           reduce using rule 118 (funciones -> nl2br .)
    LPAREN          reduce using rule 118 (funciones -> nl2br .)
    $end            reduce using rule 118 (funciones -> nl2br .)
    R_LLAVE         reduce using rule 118 (funciones -> nl2br .)
    RPAREN          reduce using rule 118 (funciones -> nl2br .)


state 49

    (120) funciones -> lista .

    PUNTOCOMA       reduce using rule 120 (funciones -> lista .)
    VARIABLE        reduce using rule 120 (funciones -> lista .)
    IF              reduce using rule 120 (funciones -> lista .)
    FOR             reduce using rule 120 (funciones -> lista .)
    WHILE           reduce using rule 120 (funciones -> lista .)
    PREINCREMENTO   reduce using rule 120 (funciones -> lista .)
    POSTINCREMENTO  reduce using rule 120 (funciones -> lista .)
    PREDECREMENTO   reduce using rule 120 (funciones -> lista .)
    POSTDECREMENTO  reduce using rule 120 (funciones -> lista .)
    ECHO            reduce using rule 120 (funciones -> lista .)
    PRINT           reduce using rule 120 (funciones -> lista .)
    LPAREN          reduce using rule 120 (funciones -> lista .)
    $end            reduce using rule 120 (funciones -> lista .)
    R_LLAVE         reduce using rule 120 (funciones -> lista .)
    RPAREN          reduce using rule 120 (funciones -> lista .)


state 50

    (121) funciones -> arrays .

    PUNTOCOMA       reduce using rule 121 (funciones -> arrays .)
    VARIABLE        reduce using rule 121 (funciones -> arrays .)
    IF              reduce using rule 121 (funciones -> arrays .)
    FOR             reduce using rule 121 (funciones -> arrays .)
    WHILE           reduce using rule 121 (funciones -> arrays .)
    PREINCREMENTO   reduce using rule 121 (funciones -> arrays .)
    POSTINCREMENTO  reduce using rule 121 (funciones -> arrays .)
    PREDECREMENTO   reduce using rule 121 (funciones -> arrays .)
    POSTDECREMENTO  reduce using rule 121 (funciones -> arrays .)
    ECHO            reduce using rule 121 (funciones -> arrays .)
    PRINT           reduce using rule 121 (funciones -> arrays .)
    LPAREN          reduce using rule 121 (funciones -> arrays .)
    $end            reduce using rule 121 (funciones -> arrays .)
    R_LLAVE         reduce using rule 121 (funciones -> arrays .)
    RPAREN          reduce using rule 121 (funciones -> arrays .)


state 51

    (124) funciones -> POTENCIA . LPAREN NUMEROS COMA NUMEROS RPAREN

    LPAREN          shift and go to state 109


state 52

    (125) funciones -> max .

    PUNTOCOMA       reduce using rule 125 (funciones -> max .)
    VARIABLE        reduce using rule 125 (funciones -> max .)
    IF              reduce using rule 125 (funciones -> max .)
    FOR             reduce using rule 125 (funciones -> max .)
    WHILE           reduce using rule 125 (funciones -> max .)
    PREINCREMENTO   reduce using rule 125 (funciones -> max .)
    POSTINCREMENTO  reduce using rule 125 (funciones -> max .)
    PREDECREMENTO   reduce using rule 125 (funciones -> max .)
    POSTDECREMENTO  reduce using rule 125 (funciones -> max .)
    ECHO            reduce using rule 125 (funciones -> max .)
    PRINT           reduce using rule 125 (funciones -> max .)
    LPAREN          reduce using rule 125 (funciones -> max .)
    $end            reduce using rule 125 (funciones -> max .)
    R_LLAVE         reduce using rule 125 (funciones -> max .)
    RPAREN          reduce using rule 125 (funciones -> max .)


state 53

    (126) funciones -> min .

    PUNTOCOMA       reduce using rule 126 (funciones -> min .)
    VARIABLE        reduce using rule 126 (funciones -> min .)
    IF              reduce using rule 126 (funciones -> min .)
    FOR             reduce using rule 126 (funciones -> min .)
    WHILE           reduce using rule 126 (funciones -> min .)
    PREINCREMENTO   reduce using rule 126 (funciones -> min .)
    POSTINCREMENTO  reduce using rule 126 (funciones -> min .)
    PREDECREMENTO   reduce using rule 126 (funciones -> min .)
    POSTDECREMENTO  reduce using rule 126 (funciones -> min .)
    ECHO            reduce using rule 126 (funciones -> min .)
    PRINT           reduce using rule 126 (funciones -> min .)
    LPAREN          reduce using rule 126 (funciones -> min .)
    $end            reduce using rule 126 (funciones -> min .)
    R_LLAVE         reduce using rule 126 (funciones -> min .)
    RPAREN          reduce using rule 126 (funciones -> min .)


state 54

    (127) funciones -> sort .

    PUNTOCOMA       reduce using rule 127 (funciones -> sort .)
    VARIABLE        reduce using rule 127 (funciones -> sort .)
    IF              reduce using rule 127 (funciones -> sort .)
    FOR             reduce using rule 127 (funciones -> sort .)
    WHILE           reduce using rule 127 (funciones -> sort .)
    PREINCREMENTO   reduce using rule 127 (funciones -> sort .)
    POSTINCREMENTO  reduce using rule 127 (funciones -> sort .)
    PREDECREMENTO   reduce using rule 127 (funciones -> sort .)
    POSTDECREMENTO  reduce using rule 127 (funciones -> sort .)
    ECHO            reduce using rule 127 (funciones -> sort .)
    PRINT           reduce using rule 127 (funciones -> sort .)
    LPAREN          reduce using rule 127 (funciones -> sort .)
    $end            reduce using rule 127 (funciones -> sort .)
    R_LLAVE         reduce using rule 127 (funciones -> sort .)
    RPAREN          reduce using rule 127 (funciones -> sort .)


state 55

    (128) funciones -> count .

    PUNTOCOMA       reduce using rule 128 (funciones -> count .)
    VARIABLE        reduce using rule 128 (funciones -> count .)
    IF              reduce using rule 128 (funciones -> count .)
    FOR             reduce using rule 128 (funciones -> count .)
    WHILE           reduce using rule 128 (funciones -> count .)
    PREINCREMENTO   reduce using rule 128 (funciones -> count .)
    POSTINCREMENTO  reduce using rule 128 (funciones -> count .)
    PREDECREMENTO   reduce using rule 128 (funciones -> count .)
    POSTDECREMENTO  reduce using rule 128 (funciones -> count .)
    ECHO            reduce using rule 128 (funciones -> count .)
    PRINT           reduce using rule 128 (funciones -> count .)
    LPAREN          reduce using rule 128 (funciones -> count .)
    $end            reduce using rule 128 (funciones -> count .)
    R_LLAVE         reduce using rule 128 (funciones -> count .)
    RPAREN          reduce using rule 128 (funciones -> count .)


state 56

    (129) funciones -> number_format .

    PUNTOCOMA       reduce using rule 129 (funciones -> number_format .)
    VARIABLE        reduce using rule 129 (funciones -> number_format .)
    IF              reduce using rule 129 (funciones -> number_format .)
    FOR             reduce using rule 129 (funciones -> number_format .)
    WHILE           reduce using rule 129 (funciones -> number_format .)
    PREINCREMENTO   reduce using rule 129 (funciones -> number_format .)
    POSTINCREMENTO  reduce using rule 129 (funciones -> number_format .)
    PREDECREMENTO   reduce using rule 129 (funciones -> number_format .)
    POSTDECREMENTO  reduce using rule 129 (funciones -> number_format .)
    ECHO            reduce using rule 129 (funciones -> number_format .)
    PRINT           reduce using rule 129 (funciones -> number_format .)
    LPAREN          reduce using rule 129 (funciones -> number_format .)
    $end            reduce using rule 129 (funciones -> number_format .)
    R_LLAVE         reduce using rule 129 (funciones -> number_format .)
    RPAREN          reduce using rule 129 (funciones -> number_format .)


state 57

    (130) funciones -> floor .

    PUNTOCOMA       reduce using rule 130 (funciones -> floor .)
    VARIABLE        reduce using rule 130 (funciones -> floor .)
    IF              reduce using rule 130 (funciones -> floor .)
    FOR             reduce using rule 130 (funciones -> floor .)
    WHILE           reduce using rule 130 (funciones -> floor .)
    PREINCREMENTO   reduce using rule 130 (funciones -> floor .)
    POSTINCREMENTO  reduce using rule 130 (funciones -> floor .)
    PREDECREMENTO   reduce using rule 130 (funciones -> floor .)
    POSTDECREMENTO  reduce using rule 130 (funciones -> floor .)
    ECHO            reduce using rule 130 (funciones -> floor .)
    PRINT           reduce using rule 130 (funciones -> floor .)
    LPAREN          reduce using rule 130 (funciones -> floor .)
    $end            reduce using rule 130 (funciones -> floor .)
    R_LLAVE         reduce using rule 130 (funciones -> floor .)
    RPAREN          reduce using rule 130 (funciones -> floor .)


state 58

    (131) funciones -> round .

    PUNTOCOMA       reduce using rule 131 (funciones -> round .)
    VARIABLE        reduce using rule 131 (funciones -> round .)
    IF              reduce using rule 131 (funciones -> round .)
    FOR             reduce using rule 131 (funciones -> round .)
    WHILE           reduce using rule 131 (funciones -> round .)
    PREINCREMENTO   reduce using rule 131 (funciones -> round .)
    POSTINCREMENTO  reduce using rule 131 (funciones -> round .)
    PREDECREMENTO   reduce using rule 131 (funciones -> round .)
    POSTDECREMENTO  reduce using rule 131 (funciones -> round .)
    ECHO            reduce using rule 131 (funciones -> round .)
    PRINT           reduce using rule 131 (funciones -> round .)
    LPAREN          reduce using rule 131 (funciones -> round .)
    $end            reduce using rule 131 (funciones -> round .)
    R_LLAVE         reduce using rule 131 (funciones -> round .)
    RPAREN          reduce using rule 131 (funciones -> round .)


state 59

    (132) funciones -> ceil .

    PUNTOCOMA       reduce using rule 132 (funciones -> ceil .)
    VARIABLE        reduce using rule 132 (funciones -> ceil .)
    IF              reduce using rule 132 (funciones -> ceil .)
    FOR             reduce using rule 132 (funciones -> ceil .)
    WHILE           reduce using rule 132 (funciones -> ceil .)
    PREINCREMENTO   reduce using rule 132 (funciones -> ceil .)
    POSTINCREMENTO  reduce using rule 132 (funciones -> ceil .)
    PREDECREMENTO   reduce using rule 132 (funciones -> ceil .)
    POSTDECREMENTO  reduce using rule 132 (funciones -> ceil .)
    ECHO            reduce using rule 132 (funciones -> ceil .)
    PRINT           reduce using rule 132 (funciones -> ceil .)
    LPAREN          reduce using rule 132 (funciones -> ceil .)
    $end            reduce using rule 132 (funciones -> ceil .)
    R_LLAVE         reduce using rule 132 (funciones -> ceil .)
    RPAREN          reduce using rule 132 (funciones -> ceil .)


state 60

    (133) funciones -> rand .

    PUNTOCOMA       reduce using rule 133 (funciones -> rand .)
    VARIABLE        reduce using rule 133 (funciones -> rand .)
    IF              reduce using rule 133 (funciones -> rand .)
    FOR             reduce using rule 133 (funciones -> rand .)
    WHILE           reduce using rule 133 (funciones -> rand .)
    PREINCREMENTO   reduce using rule 133 (funciones -> rand .)
    POSTINCREMENTO  reduce using rule 133 (funciones -> rand .)
    PREDECREMENTO   reduce using rule 133 (funciones -> rand .)
    POSTDECREMENTO  reduce using rule 133 (funciones -> rand .)
    ECHO            reduce using rule 133 (funciones -> rand .)
    PRINT           reduce using rule 133 (funciones -> rand .)
    LPAREN          reduce using rule 133 (funciones -> rand .)
    $end            reduce using rule 133 (funciones -> rand .)
    R_LLAVE         reduce using rule 133 (funciones -> rand .)
    RPAREN          reduce using rule 133 (funciones -> rand .)


state 61

    (134) funciones -> fmod .

    PUNTOCOMA       reduce using rule 134 (funciones -> fmod .)
    VARIABLE        reduce using rule 134 (funciones -> fmod .)
    IF              reduce using rule 134 (funciones -> fmod .)
    FOR             reduce using rule 134 (funciones -> fmod .)
    WHILE           reduce using rule 134 (funciones -> fmod .)
    PREINCREMENTO   reduce using rule 134 (funciones -> fmod .)
    POSTINCREMENTO  reduce using rule 134 (funciones -> fmod .)
    PREDECREMENTO   reduce using rule 134 (funciones -> fmod .)
    POSTDECREMENTO  reduce using rule 134 (funciones -> fmod .)
    ECHO            reduce using rule 134 (funciones -> fmod .)
    PRINT           reduce using rule 134 (funciones -> fmod .)
    LPAREN          reduce using rule 134 (funciones -> fmod .)
    $end            reduce using rule 134 (funciones -> fmod .)
    R_LLAVE         reduce using rule 134 (funciones -> fmod .)
    RPAREN          reduce using rule 134 (funciones -> fmod .)


state 62

    (147) funciones -> getclass .

    PUNTOCOMA       reduce using rule 147 (funciones -> getclass .)
    VARIABLE        reduce using rule 147 (funciones -> getclass .)
    IF              reduce using rule 147 (funciones -> getclass .)
    FOR             reduce using rule 147 (funciones -> getclass .)
    WHILE           reduce using rule 147 (funciones -> getclass .)
    PREINCREMENTO   reduce using rule 147 (funciones -> getclass .)
    POSTINCREMENTO  reduce using rule 147 (funciones -> getclass .)
    PREDECREMENTO   reduce using rule 147 (funciones -> getclass .)
    POSTDECREMENTO  reduce using rule 147 (funciones -> getclass .)
    ECHO            reduce using rule 147 (funciones -> getclass .)
    PRINT           reduce using rule 147 (funciones -> getclass .)
    LPAREN          reduce using rule 147 (funciones -> getclass .)
    $end            reduce using rule 147 (funciones -> getclass .)
    R_LLAVE         reduce using rule 147 (funciones -> getclass .)
    RPAREN          reduce using rule 147 (funciones -> getclass .)


state 63

    (148) funciones -> is_a .

    PUNTOCOMA       reduce using rule 148 (funciones -> is_a .)
    VARIABLE        reduce using rule 148 (funciones -> is_a .)
    IF              reduce using rule 148 (funciones -> is_a .)
    FOR             reduce using rule 148 (funciones -> is_a .)
    WHILE           reduce using rule 148 (funciones -> is_a .)
    PREINCREMENTO   reduce using rule 148 (funciones -> is_a .)
    POSTINCREMENTO  reduce using rule 148 (funciones -> is_a .)
    PREDECREMENTO   reduce using rule 148 (funciones -> is_a .)
    POSTDECREMENTO  reduce using rule 148 (funciones -> is_a .)
    ECHO            reduce using rule 148 (funciones -> is_a .)
    PRINT           reduce using rule 148 (funciones -> is_a .)
    LPAREN          reduce using rule 148 (funciones -> is_a .)
    $end            reduce using rule 148 (funciones -> is_a .)
    R_LLAVE         reduce using rule 148 (funciones -> is_a .)
    RPAREN          reduce using rule 148 (funciones -> is_a .)


state 64

    (135) trim -> TRIM . LPAREN VARIABLE RPAREN
    (136) trim -> TRIM . LPAREN VARIABLE COMA CADENADOBLE RPAREN
    (137) trim -> TRIM . LPAREN VARIABLE COMA CADENASIMPLE RPAREN

    LPAREN          shift and go to state 110


state 65

    (138) substr -> SUBSTR . LPAREN VARIABLE COMA NUMEROS COMA NUMEROS RPAREN
    (139) substr -> SUBSTR . LPAREN CADENADOBLE COMA NUMEROS COMA NUMEROS RPAREN
    (140) substr -> SUBSTR . LPAREN VARIABLE COMA NUMEROS RPAREN
    (141) substr -> SUBSTR . LPAREN CADENADOBLE COMA NUMEROS RPAREN

    LPAREN          shift and go to state 111


state 66

    (142) wordwrap -> WORDWRAP . LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN RPAREN

    LPAREN          shift and go to state 112


state 67

    (70) fopen -> FOPEN . LPAREN CADENADOBLE COMA CADENADOBLE RPAREN
    (71) fopen -> FOPEN . LPAREN CADENASIMPLE COMA CADENADOBLE RPAREN

    LPAREN          shift and go to state 113


state 68

    (72) fpassthru -> FPASSTHRU . LPAREN VARIABLE RPAREN

    LPAREN          shift and go to state 114


state 69

    (73) feof -> FEOF . LPAREN VARIABLE RPAREN

    LPAREN          shift and go to state 115


state 70

    (74) fgets -> FGETS . LPAREN VARIABLE COMA NUMEROS RPAREN
    (75) fgets -> FGETS . LPAREN VARIABLE RPAREN

    LPAREN          shift and go to state 116


state 71

    (76) nl2br -> NL2BR . LPAREN CADENADOBLE COMA VARIABLE RPAREN
    (77) nl2br -> NL2BR . LPAREN CADENADOBLE COMA BOOLEAN RPAREN
    (78) nl2br -> NL2BR . LPAREN CADENADOBLE RPAREN
    (79) nl2br -> NL2BR . LPAREN VARIABLE COMA BOOLEAN RPAREN
    (80) nl2br -> NL2BR . LPAREN VARIABLE COMA VARIABLE RPAREN
    (81) nl2br -> NL2BR . LPAREN VARIABLE RPAREN

    LPAREN          shift and go to state 117


state 72

    (97) lista -> LIST . LPAREN elements RPAREN

    LPAREN          shift and go to state 118


state 73

    (105) arrays -> ARRAY . LPAREN elements RPAREN

    LPAREN          shift and go to state 119


state 74

    (106) arrays -> LCORC . elements RCORC
    (98) elements -> . factor
    (99) elements -> . element
    (100) elements -> . elements COMA factor
    (101) elements -> . elements COMA element
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN
    (102) element -> . arrays
    (103) element -> . lista
    (105) arrays -> . ARRAY LPAREN elements RPAREN
    (106) arrays -> . LCORC elements RCORC
    (97) lista -> . LIST LPAREN elements RPAREN

    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 100
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 40
    ARRAY           shift and go to state 73
    LCORC           shift and go to state 74
    LIST            shift and go to state 72

    elements                       shift and go to state 120
    factor                         shift and go to state 121
    element                        shift and go to state 122
    arrays                         shift and go to state 123
    lista                          shift and go to state 124

state 75

    (104) max -> MAX . LPAREN elements RPAREN

    LPAREN          shift and go to state 125


state 76

    (107) min -> MIN . LPAREN elements RPAREN

    LPAREN          shift and go to state 126


state 77

    (143) sort -> SORT . LPAREN VARIABLE RPAREN
    (144) sort -> SORT . LPAREN VARIABLE COMA FLAG RPAREN

    LPAREN          shift and go to state 127


state 78

    (145) count -> COUNT . LPAREN VARIABLE RPAREN

    LPAREN          shift and go to state 128


state 79

    (108) number_format -> NUMBER_FORMAT . LPAREN VARIABLE RPAREN
    (109) number_format -> NUMBER_FORMAT . LPAREN VARIABLE COMA NUMEROS RPAREN
    (110) number_format -> NUMBER_FORMAT . LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPAREN

    LPAREN          shift and go to state 129


state 80

    (88) floor -> FLOOR . LPAREN DECIMAL RPAREN
    (89) floor -> FLOOR . LPAREN MENOS DECIMAL RPAREN
    (90) floor -> FLOOR . LPAREN DECIMAL PRODUCTO NUMEROS RPAREN
    (91) floor -> FLOOR . LPAREN VARIABLE RPAREN

    LPAREN          shift and go to state 130


state 81

    (82) round -> ROUND . LPAREN DECIMAL RPAREN
    (83) round -> ROUND . LPAREN MENOS DECIMAL RPAREN
    (84) round -> ROUND . LPAREN DECIMAL COMA NUMEROS RPAREN
    (85) round -> ROUND . LPAREN DECIMAL COMA MENOS NUMEROS RPAREN
    (86) round -> ROUND . LPAREN MENOS DECIMAL COMA MENOS NUMEROS RPAREN
    (87) round -> ROUND . LPAREN MENOS DECIMAL COMA NUMEROS RPAREN

    LPAREN          shift and go to state 131


state 82

    (92) ceil -> CEIL . LPAREN MENOS DECIMAL RPAREN
    (93) ceil -> CEIL . LPAREN DECIMAL RPAREN
    (94) ceil -> CEIL . LPAREN VARIABLE RPAREN
    (95) ceil -> CEIL . LPAREN VARIABLE PRODUCTO NUMEROS RPAREN

    LPAREN          shift and go to state 132


state 83

    (122) rand -> RAND . LPAREN NUMEROS COMA NUMEROS RPAREN
    (123) rand -> RAND . LPAREN RPAREN

    LPAREN          shift and go to state 133


state 84

    (96) fmod -> FMOD . LPAREN VARIABLE COMA VARIABLE RPAREN

    LPAREN          shift and go to state 134


state 85

    (149) getclass -> GETCLASS . LPAREN VARIABLE RPAREN

    LPAREN          shift and go to state 135


state 86

    (150) is_a -> IS_A . LPAREN VARIABLE COMA CADENADOBLE RPAREN

    LPAREN          shift and go to state 136


state 87

    (22) imprimir -> PRINT LPAREN . factor RPAREN PUNTOCOMA
    (23) imprimir -> PRINT LPAREN . funciones RPAREN PUNTOCOMA
    (69) factor -> LPAREN . expresion RPAREN
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN
    (111) funciones -> . trim
    (112) funciones -> . substr
    (113) funciones -> . wordwrap
    (114) funciones -> . fopen
    (115) funciones -> . fpassthru
    (116) funciones -> . feof
    (117) funciones -> . fgets
    (118) funciones -> . nl2br
    (119) funciones -> . VARIABLE IGUAL next
    (120) funciones -> . lista
    (121) funciones -> . arrays
    (124) funciones -> . POTENCIA LPAREN NUMEROS COMA NUMEROS RPAREN
    (125) funciones -> . max
    (126) funciones -> . min
    (127) funciones -> . sort
    (128) funciones -> . count
    (129) funciones -> . number_format
    (130) funciones -> . floor
    (131) funciones -> . round
    (132) funciones -> . ceil
    (133) funciones -> . rand
    (134) funciones -> . fmod
    (147) funciones -> . getclass
    (148) funciones -> . is_a
    (36) expresion -> . expresion operadores term
    (37) expresion -> . term
    (135) trim -> . TRIM LPAREN VARIABLE RPAREN
    (136) trim -> . TRIM LPAREN VARIABLE COMA CADENADOBLE RPAREN
    (137) trim -> . TRIM LPAREN VARIABLE COMA CADENASIMPLE RPAREN
    (138) substr -> . SUBSTR LPAREN VARIABLE COMA NUMEROS COMA NUMEROS RPAREN
    (139) substr -> . SUBSTR LPAREN CADENADOBLE COMA NUMEROS COMA NUMEROS RPAREN
    (140) substr -> . SUBSTR LPAREN VARIABLE COMA NUMEROS RPAREN
    (141) substr -> . SUBSTR LPAREN CADENADOBLE COMA NUMEROS RPAREN
    (142) wordwrap -> . WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN RPAREN
    (70) fopen -> . FOPEN LPAREN CADENADOBLE COMA CADENADOBLE RPAREN
    (71) fopen -> . FOPEN LPAREN CADENASIMPLE COMA CADENADOBLE RPAREN
    (72) fpassthru -> . FPASSTHRU LPAREN VARIABLE RPAREN
    (73) feof -> . FEOF LPAREN VARIABLE RPAREN
    (74) fgets -> . FGETS LPAREN VARIABLE COMA NUMEROS RPAREN
    (75) fgets -> . FGETS LPAREN VARIABLE RPAREN
    (76) nl2br -> . NL2BR LPAREN CADENADOBLE COMA VARIABLE RPAREN
    (77) nl2br -> . NL2BR LPAREN CADENADOBLE COMA BOOLEAN RPAREN
    (78) nl2br -> . NL2BR LPAREN CADENADOBLE RPAREN
    (79) nl2br -> . NL2BR LPAREN VARIABLE COMA BOOLEAN RPAREN
    (80) nl2br -> . NL2BR LPAREN VARIABLE COMA VARIABLE RPAREN
    (81) nl2br -> . NL2BR LPAREN VARIABLE RPAREN
    (97) lista -> . LIST LPAREN elements RPAREN
    (105) arrays -> . ARRAY LPAREN elements RPAREN
    (106) arrays -> . LCORC elements RCORC
    (104) max -> . MAX LPAREN elements RPAREN
    (107) min -> . MIN LPAREN elements RPAREN
    (143) sort -> . SORT LPAREN VARIABLE RPAREN
    (144) sort -> . SORT LPAREN VARIABLE COMA FLAG RPAREN
    (145) count -> . COUNT LPAREN VARIABLE RPAREN
    (108) number_format -> . NUMBER_FORMAT LPAREN VARIABLE RPAREN
    (109) number_format -> . NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS RPAREN
    (110) number_format -> . NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPAREN
    (88) floor -> . FLOOR LPAREN DECIMAL RPAREN
    (89) floor -> . FLOOR LPAREN MENOS DECIMAL RPAREN
    (90) floor -> . FLOOR LPAREN DECIMAL PRODUCTO NUMEROS RPAREN
    (91) floor -> . FLOOR LPAREN VARIABLE RPAREN
    (82) round -> . ROUND LPAREN DECIMAL RPAREN
    (83) round -> . ROUND LPAREN MENOS DECIMAL RPAREN
    (84) round -> . ROUND LPAREN DECIMAL COMA NUMEROS RPAREN
    (85) round -> . ROUND LPAREN DECIMAL COMA MENOS NUMEROS RPAREN
    (86) round -> . ROUND LPAREN MENOS DECIMAL COMA MENOS NUMEROS RPAREN
    (87) round -> . ROUND LPAREN MENOS DECIMAL COMA NUMEROS RPAREN
    (92) ceil -> . CEIL LPAREN MENOS DECIMAL RPAREN
    (93) ceil -> . CEIL LPAREN DECIMAL RPAREN
    (94) ceil -> . CEIL LPAREN VARIABLE RPAREN
    (95) ceil -> . CEIL LPAREN VARIABLE PRODUCTO NUMEROS RPAREN
    (122) rand -> . RAND LPAREN NUMEROS COMA NUMEROS RPAREN
    (123) rand -> . RAND LPAREN RPAREN
    (96) fmod -> . FMOD LPAREN VARIABLE COMA VARIABLE RPAREN
    (149) getclass -> . GETCLASS LPAREN VARIABLE RPAREN
    (150) is_a -> . IS_A LPAREN VARIABLE COMA CADENADOBLE RPAREN
    (62) term -> . factor

    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 38
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 40
    POTENCIA        shift and go to state 51
    TRIM            shift and go to state 64
    SUBSTR          shift and go to state 65
    WORDWRAP        shift and go to state 66
    FOPEN           shift and go to state 67
    FPASSTHRU       shift and go to state 68
    FEOF            shift and go to state 69
    FGETS           shift and go to state 70
    NL2BR           shift and go to state 71
    LIST            shift and go to state 72
    ARRAY           shift and go to state 73
    LCORC           shift and go to state 74
    MAX             shift and go to state 75
    MIN             shift and go to state 76
    SORT            shift and go to state 77
    COUNT           shift and go to state 78
    NUMBER_FORMAT   shift and go to state 79
    FLOOR           shift and go to state 80
    ROUND           shift and go to state 81
    CEIL            shift and go to state 82
    RAND            shift and go to state 83
    FMOD            shift and go to state 84
    GETCLASS        shift and go to state 85
    IS_A            shift and go to state 86

    factor                         shift and go to state 137
    funciones                      shift and go to state 138
    expresion                      shift and go to state 107
    trim                           shift and go to state 41
    substr                         shift and go to state 42
    wordwrap                       shift and go to state 43
    fopen                          shift and go to state 44
    fpassthru                      shift and go to state 45
    feof                           shift and go to state 46
    fgets                          shift and go to state 47
    nl2br                          shift and go to state 48
    lista                          shift and go to state 49
    arrays                         shift and go to state 50
    max                            shift and go to state 52
    min                            shift and go to state 53
    sort                           shift and go to state 54
    count                          shift and go to state 55
    number_format                  shift and go to state 56
    floor                          shift and go to state 57
    round                          shift and go to state 58
    ceil                           shift and go to state 59
    rand                           shift and go to state 60
    fmod                           shift and go to state 61
    getclass                       shift and go to state 62
    is_a                           shift and go to state 63
    term                           shift and go to state 93

state 88

    (24) imprimir -> PRINT factor .

    VARIABLE        reduce using rule 24 (imprimir -> PRINT factor .)
    IF              reduce using rule 24 (imprimir -> PRINT factor .)
    FOR             reduce using rule 24 (imprimir -> PRINT factor .)
    WHILE           reduce using rule 24 (imprimir -> PRINT factor .)
    PREINCREMENTO   reduce using rule 24 (imprimir -> PRINT factor .)
    POSTINCREMENTO  reduce using rule 24 (imprimir -> PRINT factor .)
    PREDECREMENTO   reduce using rule 24 (imprimir -> PRINT factor .)
    POSTDECREMENTO  reduce using rule 24 (imprimir -> PRINT factor .)
    ECHO            reduce using rule 24 (imprimir -> PRINT factor .)
    PRINT           reduce using rule 24 (imprimir -> PRINT factor .)
    LPAREN          reduce using rule 24 (imprimir -> PRINT factor .)
    $end            reduce using rule 24 (imprimir -> PRINT factor .)
    R_LLAVE         reduce using rule 24 (imprimir -> PRINT factor .)


state 89

    (25) imprimir -> PRINT funciones .

    VARIABLE        reduce using rule 25 (imprimir -> PRINT funciones .)
    IF              reduce using rule 25 (imprimir -> PRINT funciones .)
    FOR             reduce using rule 25 (imprimir -> PRINT funciones .)
    WHILE           reduce using rule 25 (imprimir -> PRINT funciones .)
    PREINCREMENTO   reduce using rule 25 (imprimir -> PRINT funciones .)
    POSTINCREMENTO  reduce using rule 25 (imprimir -> PRINT funciones .)
    PREDECREMENTO   reduce using rule 25 (imprimir -> PRINT funciones .)
    POSTDECREMENTO  reduce using rule 25 (imprimir -> PRINT funciones .)
    ECHO            reduce using rule 25 (imprimir -> PRINT funciones .)
    PRINT           reduce using rule 25 (imprimir -> PRINT funciones .)
    LPAREN          reduce using rule 25 (imprimir -> PRINT funciones .)
    $end            reduce using rule 25 (imprimir -> PRINT funciones .)
    R_LLAVE         reduce using rule 25 (imprimir -> PRINT funciones .)


state 90

    (32) asignacion -> VARIABLE IGUAL expresion . PUNTOCOMA
    (36) expresion -> expresion . operadores term
    (38) operadores -> . MAS
    (39) operadores -> . MENOS
    (40) operadores -> . PRODUCTO
    (41) operadores -> . DIVISION
    (42) operadores -> . MODULO
    (43) operadores -> . EXPONENCIACION

    PUNTOCOMA       shift and go to state 139
    MAS             shift and go to state 141
    MENOS           shift and go to state 142
    PRODUCTO        shift and go to state 143
    DIVISION        shift and go to state 144
    MODULO          shift and go to state 145
    EXPONENCIACION  shift and go to state 146

    operadores                     shift and go to state 140

state 91

    (33) asignacion -> VARIABLE IGUAL factor . PUNTOCOMA
    (62) term -> factor .

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
    PUNTOCOMA       shift and go to state 147
    MAS             reduce using rule 62 (term -> factor .)
    MENOS           reduce using rule 62 (term -> factor .)
    PRODUCTO        reduce using rule 62 (term -> factor .)
    DIVISION        reduce using rule 62 (term -> factor .)
    MODULO          reduce using rule 62 (term -> factor .)
    EXPONENCIACION  reduce using rule 62 (term -> factor .)

  ! PUNTOCOMA       [ reduce using rule 62 (term -> factor .) ]


state 92

    (35) asignacion -> VARIABLE IGUAL funciones . PUNTOCOMA

    PUNTOCOMA       shift and go to state 148


state 93

    (37) expresion -> term .

    PUNTOCOMA       reduce using rule 37 (expresion -> term .)
    MAS             reduce using rule 37 (expresion -> term .)
    MENOS           reduce using rule 37 (expresion -> term .)
    PRODUCTO        reduce using rule 37 (expresion -> term .)
    DIVISION        reduce using rule 37 (expresion -> term .)
    MODULO          reduce using rule 37 (expresion -> term .)
    EXPONENCIACION  reduce using rule 37 (expresion -> term .)
    RPAREN          reduce using rule 37 (expresion -> term .)


state 94

    (45) comparacion -> LPAREN . condiciones RPAREN
    (69) factor -> LPAREN . expresion RPAREN
    (47) condiciones -> . factor IGUAL_IGUAL factor
    (48) condiciones -> . factor IDENTICO factor
    (49) condiciones -> . factor DISTINTO factor
    (50) condiciones -> . factor MENORQUE factor
    (51) condiciones -> . factor MAYORQUE factor
    (52) condiciones -> . factor MENOROIGUAL factor
    (53) condiciones -> . factor MAYOROIGUAL factor
    (36) expresion -> . expresion operadores term
    (37) expresion -> . term
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN
    (62) term -> . factor

    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 100
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 40

    condiciones                    shift and go to state 149
    expresion                      shift and go to state 107
    factor                         shift and go to state 150
    term                           shift and go to state 93

state 95

    (26) if -> IF LPAREN comparaciones . RPAREN L_LLAVE sentencias R_LLAVE
    (27) if -> IF LPAREN comparaciones . RPAREN L_LLAVE sentencias R_LLAVE else
    (28) if -> IF LPAREN comparaciones . RPAREN L_LLAVE sentencias R_LLAVE elseif else
    (55) comparaciones -> comparaciones . anado comparacion
    (56) anado -> . condicion
    (57) condicion -> . XOR
    (58) condicion -> . ANDAND
    (59) condicion -> . AND
    (60) condicion -> . OR
    (61) condicion -> . OROR

    RPAREN          shift and go to state 151
    XOR             shift and go to state 154
    ANDAND          shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    OROR            shift and go to state 158

    anado                          shift and go to state 152
    condicion                      shift and go to state 153

state 96

    (54) comparaciones -> comparacion .

    RPAREN          reduce using rule 54 (comparaciones -> comparacion .)
    XOR             reduce using rule 54 (comparaciones -> comparacion .)
    ANDAND          reduce using rule 54 (comparaciones -> comparacion .)
    AND             reduce using rule 54 (comparaciones -> comparacion .)
    OR              reduce using rule 54 (comparaciones -> comparacion .)
    OROR            reduce using rule 54 (comparaciones -> comparacion .)
    PUNTOCOMA       reduce using rule 54 (comparaciones -> comparacion .)


state 97

    (44) comparacion -> condiciones .

    RPAREN          reduce using rule 44 (comparacion -> condiciones .)
    XOR             reduce using rule 44 (comparacion -> condiciones .)
    ANDAND          reduce using rule 44 (comparacion -> condiciones .)
    AND             reduce using rule 44 (comparacion -> condiciones .)
    OR              reduce using rule 44 (comparacion -> condiciones .)
    OROR            reduce using rule 44 (comparacion -> condiciones .)
    PUNTOCOMA       reduce using rule 44 (comparacion -> condiciones .)


state 98

    (46) comparacion -> NO . LPAREN condiciones RPAREN

    LPAREN          shift and go to state 159


state 99

    (47) condiciones -> factor . IGUAL_IGUAL factor
    (48) condiciones -> factor . IDENTICO factor
    (49) condiciones -> factor . DISTINTO factor
    (50) condiciones -> factor . MENORQUE factor
    (51) condiciones -> factor . MAYORQUE factor
    (52) condiciones -> factor . MENOROIGUAL factor
    (53) condiciones -> factor . MAYOROIGUAL factor

    IGUAL_IGUAL     shift and go to state 160
    IDENTICO        shift and go to state 161
    DISTINTO        shift and go to state 162
    MENORQUE        shift and go to state 163
    MAYORQUE        shift and go to state 164
    MENOROIGUAL     shift and go to state 165
    MAYOROIGUAL     shift and go to state 166


state 100

    (67) factor -> VARIABLE .

    IGUAL_IGUAL     reduce using rule 67 (factor -> VARIABLE .)
    IDENTICO        reduce using rule 67 (factor -> VARIABLE .)
    DISTINTO        reduce using rule 67 (factor -> VARIABLE .)
    MENORQUE        reduce using rule 67 (factor -> VARIABLE .)
    MAYORQUE        reduce using rule 67 (factor -> VARIABLE .)
    MENOROIGUAL     reduce using rule 67 (factor -> VARIABLE .)
    MAYOROIGUAL     reduce using rule 67 (factor -> VARIABLE .)
    RPAREN          reduce using rule 67 (factor -> VARIABLE .)
    MAS             reduce using rule 67 (factor -> VARIABLE .)
    MENOS           reduce using rule 67 (factor -> VARIABLE .)
    PRODUCTO        reduce using rule 67 (factor -> VARIABLE .)
    DIVISION        reduce using rule 67 (factor -> VARIABLE .)
    MODULO          reduce using rule 67 (factor -> VARIABLE .)
    EXPONENCIACION  reduce using rule 67 (factor -> VARIABLE .)
    RCORC           reduce using rule 67 (factor -> VARIABLE .)
    COMA            reduce using rule 67 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 67 (factor -> VARIABLE .)
    IF              reduce using rule 67 (factor -> VARIABLE .)
    FOR             reduce using rule 67 (factor -> VARIABLE .)
    WHILE           reduce using rule 67 (factor -> VARIABLE .)
    PREINCREMENTO   reduce using rule 67 (factor -> VARIABLE .)
    POSTINCREMENTO  reduce using rule 67 (factor -> VARIABLE .)
    PREDECREMENTO   reduce using rule 67 (factor -> VARIABLE .)
    POSTDECREMENTO  reduce using rule 67 (factor -> VARIABLE .)
    ECHO            reduce using rule 67 (factor -> VARIABLE .)
    PRINT           reduce using rule 67 (factor -> VARIABLE .)
    LPAREN          reduce using rule 67 (factor -> VARIABLE .)
    $end            reduce using rule 67 (factor -> VARIABLE .)
    R_LLAVE         reduce using rule 67 (factor -> VARIABLE .)
    PUNTOCOMA       reduce using rule 67 (factor -> VARIABLE .)
    XOR             reduce using rule 67 (factor -> VARIABLE .)
    ANDAND          reduce using rule 67 (factor -> VARIABLE .)
    AND             reduce using rule 67 (factor -> VARIABLE .)
    OR              reduce using rule 67 (factor -> VARIABLE .)
    OROR            reduce using rule 67 (factor -> VARIABLE .)


state 101

    (17) object -> LPAREN OBJECT RPAREN . term
    (62) term -> . factor
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN

    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 100
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 40

    term                           shift and go to state 167
    factor                         shift and go to state 108

state 102

    (11) for -> FOR LPAREN asignacion . comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE
    (54) comparaciones -> . comparacion
    (55) comparaciones -> . comparaciones anado comparacion
    (44) comparacion -> . condiciones
    (45) comparacion -> . LPAREN condiciones RPAREN
    (46) comparacion -> . NO LPAREN condiciones RPAREN
    (47) condiciones -> . factor IGUAL_IGUAL factor
    (48) condiciones -> . factor IDENTICO factor
    (49) condiciones -> . factor DISTINTO factor
    (50) condiciones -> . factor MENORQUE factor
    (51) condiciones -> . factor MAYORQUE factor
    (52) condiciones -> . factor MENOROIGUAL factor
    (53) condiciones -> . factor MAYOROIGUAL factor
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN

    LPAREN          shift and go to state 94
    NO              shift and go to state 98
    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 100
    BOOLEAN         shift and go to state 39

    comparaciones                  shift and go to state 168
    comparacion                    shift and go to state 96
    condiciones                    shift and go to state 97
    factor                         shift and go to state 99

state 103

    (12) while -> WHILE LPAREN comparaciones . RPAREN L_LLAVE sentencias R_LLAVE
    (55) comparaciones -> comparaciones . anado comparacion
    (56) anado -> . condicion
    (57) condicion -> . XOR
    (58) condicion -> . ANDAND
    (59) condicion -> . AND
    (60) condicion -> . OR
    (61) condicion -> . OROR

    RPAREN          shift and go to state 169
    XOR             shift and go to state 154
    ANDAND          shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    OROR            shift and go to state 158

    anado                          shift and go to state 152
    condicion                      shift and go to state 153

state 104

    (20) imprimir -> ECHO factor PUNTOCOMA .

    VARIABLE        reduce using rule 20 (imprimir -> ECHO factor PUNTOCOMA .)
    IF              reduce using rule 20 (imprimir -> ECHO factor PUNTOCOMA .)
    FOR             reduce using rule 20 (imprimir -> ECHO factor PUNTOCOMA .)
    WHILE           reduce using rule 20 (imprimir -> ECHO factor PUNTOCOMA .)
    PREINCREMENTO   reduce using rule 20 (imprimir -> ECHO factor PUNTOCOMA .)
    POSTINCREMENTO  reduce using rule 20 (imprimir -> ECHO factor PUNTOCOMA .)
    PREDECREMENTO   reduce using rule 20 (imprimir -> ECHO factor PUNTOCOMA .)
    POSTDECREMENTO  reduce using rule 20 (imprimir -> ECHO factor PUNTOCOMA .)
    ECHO            reduce using rule 20 (imprimir -> ECHO factor PUNTOCOMA .)
    PRINT           reduce using rule 20 (imprimir -> ECHO factor PUNTOCOMA .)
    LPAREN          reduce using rule 20 (imprimir -> ECHO factor PUNTOCOMA .)
    $end            reduce using rule 20 (imprimir -> ECHO factor PUNTOCOMA .)
    R_LLAVE         reduce using rule 20 (imprimir -> ECHO factor PUNTOCOMA .)


state 105

    (21) imprimir -> ECHO funciones PUNTOCOMA .

    VARIABLE        reduce using rule 21 (imprimir -> ECHO funciones PUNTOCOMA .)
    IF              reduce using rule 21 (imprimir -> ECHO funciones PUNTOCOMA .)
    FOR             reduce using rule 21 (imprimir -> ECHO funciones PUNTOCOMA .)
    WHILE           reduce using rule 21 (imprimir -> ECHO funciones PUNTOCOMA .)
    PREINCREMENTO   reduce using rule 21 (imprimir -> ECHO funciones PUNTOCOMA .)
    POSTINCREMENTO  reduce using rule 21 (imprimir -> ECHO funciones PUNTOCOMA .)
    PREDECREMENTO   reduce using rule 21 (imprimir -> ECHO funciones PUNTOCOMA .)
    POSTDECREMENTO  reduce using rule 21 (imprimir -> ECHO funciones PUNTOCOMA .)
    ECHO            reduce using rule 21 (imprimir -> ECHO funciones PUNTOCOMA .)
    PRINT           reduce using rule 21 (imprimir -> ECHO funciones PUNTOCOMA .)
    LPAREN          reduce using rule 21 (imprimir -> ECHO funciones PUNTOCOMA .)
    $end            reduce using rule 21 (imprimir -> ECHO funciones PUNTOCOMA .)
    R_LLAVE         reduce using rule 21 (imprimir -> ECHO funciones PUNTOCOMA .)


state 106

    (119) funciones -> VARIABLE IGUAL . next
    (146) next -> . NEXT LPAREN VARIABLE RPAREN

    NEXT            shift and go to state 171

    next                           shift and go to state 170

state 107

    (69) factor -> LPAREN expresion . RPAREN
    (36) expresion -> expresion . operadores term
    (38) operadores -> . MAS
    (39) operadores -> . MENOS
    (40) operadores -> . PRODUCTO
    (41) operadores -> . DIVISION
    (42) operadores -> . MODULO
    (43) operadores -> . EXPONENCIACION

    RPAREN          shift and go to state 172
    MAS             shift and go to state 141
    MENOS           shift and go to state 142
    PRODUCTO        shift and go to state 143
    DIVISION        shift and go to state 144
    MODULO          shift and go to state 145
    EXPONENCIACION  shift and go to state 146

    operadores                     shift and go to state 140

state 108

    (62) term -> factor .

    RPAREN          reduce using rule 62 (term -> factor .)
    MAS             reduce using rule 62 (term -> factor .)
    MENOS           reduce using rule 62 (term -> factor .)
    PRODUCTO        reduce using rule 62 (term -> factor .)
    DIVISION        reduce using rule 62 (term -> factor .)
    MODULO          reduce using rule 62 (term -> factor .)
    EXPONENCIACION  reduce using rule 62 (term -> factor .)
    VARIABLE        reduce using rule 62 (term -> factor .)
    IF              reduce using rule 62 (term -> factor .)
    FOR             reduce using rule 62 (term -> factor .)
    WHILE           reduce using rule 62 (term -> factor .)
    PREINCREMENTO   reduce using rule 62 (term -> factor .)
    POSTINCREMENTO  reduce using rule 62 (term -> factor .)
    PREDECREMENTO   reduce using rule 62 (term -> factor .)
    POSTDECREMENTO  reduce using rule 62 (term -> factor .)
    ECHO            reduce using rule 62 (term -> factor .)
    PRINT           reduce using rule 62 (term -> factor .)
    LPAREN          reduce using rule 62 (term -> factor .)
    $end            reduce using rule 62 (term -> factor .)
    R_LLAVE         reduce using rule 62 (term -> factor .)
    PUNTOCOMA       reduce using rule 62 (term -> factor .)


state 109

    (124) funciones -> POTENCIA LPAREN . NUMEROS COMA NUMEROS RPAREN

    NUMEROS         shift and go to state 173


state 110

    (135) trim -> TRIM LPAREN . VARIABLE RPAREN
    (136) trim -> TRIM LPAREN . VARIABLE COMA CADENADOBLE RPAREN
    (137) trim -> TRIM LPAREN . VARIABLE COMA CADENASIMPLE RPAREN

    VARIABLE        shift and go to state 174


state 111

    (138) substr -> SUBSTR LPAREN . VARIABLE COMA NUMEROS COMA NUMEROS RPAREN
    (139) substr -> SUBSTR LPAREN . CADENADOBLE COMA NUMEROS COMA NUMEROS RPAREN
    (140) substr -> SUBSTR LPAREN . VARIABLE COMA NUMEROS RPAREN
    (141) substr -> SUBSTR LPAREN . CADENADOBLE COMA NUMEROS RPAREN

    VARIABLE        shift and go to state 175
    CADENADOBLE     shift and go to state 176


state 112

    (142) wordwrap -> WORDWRAP LPAREN . VARIABLE COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN RPAREN

    VARIABLE        shift and go to state 177


state 113

    (70) fopen -> FOPEN LPAREN . CADENADOBLE COMA CADENADOBLE RPAREN
    (71) fopen -> FOPEN LPAREN . CADENASIMPLE COMA CADENADOBLE RPAREN

    CADENADOBLE     shift and go to state 178
    CADENASIMPLE    shift and go to state 179


state 114

    (72) fpassthru -> FPASSTHRU LPAREN . VARIABLE RPAREN

    VARIABLE        shift and go to state 180


state 115

    (73) feof -> FEOF LPAREN . VARIABLE RPAREN

    VARIABLE        shift and go to state 181


state 116

    (74) fgets -> FGETS LPAREN . VARIABLE COMA NUMEROS RPAREN
    (75) fgets -> FGETS LPAREN . VARIABLE RPAREN

    VARIABLE        shift and go to state 182


state 117

    (76) nl2br -> NL2BR LPAREN . CADENADOBLE COMA VARIABLE RPAREN
    (77) nl2br -> NL2BR LPAREN . CADENADOBLE COMA BOOLEAN RPAREN
    (78) nl2br -> NL2BR LPAREN . CADENADOBLE RPAREN
    (79) nl2br -> NL2BR LPAREN . VARIABLE COMA BOOLEAN RPAREN
    (80) nl2br -> NL2BR LPAREN . VARIABLE COMA VARIABLE RPAREN
    (81) nl2br -> NL2BR LPAREN . VARIABLE RPAREN

    CADENADOBLE     shift and go to state 183
    VARIABLE        shift and go to state 184


state 118

    (97) lista -> LIST LPAREN . elements RPAREN
    (98) elements -> . factor
    (99) elements -> . element
    (100) elements -> . elements COMA factor
    (101) elements -> . elements COMA element
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN
    (102) element -> . arrays
    (103) element -> . lista
    (105) arrays -> . ARRAY LPAREN elements RPAREN
    (106) arrays -> . LCORC elements RCORC
    (97) lista -> . LIST LPAREN elements RPAREN

    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 100
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 40
    ARRAY           shift and go to state 73
    LCORC           shift and go to state 74
    LIST            shift and go to state 72

    elements                       shift and go to state 185
    factor                         shift and go to state 121
    element                        shift and go to state 122
    arrays                         shift and go to state 123
    lista                          shift and go to state 124

state 119

    (105) arrays -> ARRAY LPAREN . elements RPAREN
    (98) elements -> . factor
    (99) elements -> . element
    (100) elements -> . elements COMA factor
    (101) elements -> . elements COMA element
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN
    (102) element -> . arrays
    (103) element -> . lista
    (105) arrays -> . ARRAY LPAREN elements RPAREN
    (106) arrays -> . LCORC elements RCORC
    (97) lista -> . LIST LPAREN elements RPAREN

    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 100
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 40
    ARRAY           shift and go to state 73
    LCORC           shift and go to state 74
    LIST            shift and go to state 72

    elements                       shift and go to state 186
    factor                         shift and go to state 121
    element                        shift and go to state 122
    arrays                         shift and go to state 123
    lista                          shift and go to state 124

state 120

    (106) arrays -> LCORC elements . RCORC
    (100) elements -> elements . COMA factor
    (101) elements -> elements . COMA element

    RCORC           shift and go to state 187
    COMA            shift and go to state 188


state 121

    (98) elements -> factor .

    RCORC           reduce using rule 98 (elements -> factor .)
    COMA            reduce using rule 98 (elements -> factor .)
    RPAREN          reduce using rule 98 (elements -> factor .)


state 122

    (99) elements -> element .

    RCORC           reduce using rule 99 (elements -> element .)
    COMA            reduce using rule 99 (elements -> element .)
    RPAREN          reduce using rule 99 (elements -> element .)


state 123

    (102) element -> arrays .

    RCORC           reduce using rule 102 (element -> arrays .)
    COMA            reduce using rule 102 (element -> arrays .)
    RPAREN          reduce using rule 102 (element -> arrays .)


state 124

    (103) element -> lista .

    RCORC           reduce using rule 103 (element -> lista .)
    COMA            reduce using rule 103 (element -> lista .)
    RPAREN          reduce using rule 103 (element -> lista .)


state 125

    (104) max -> MAX LPAREN . elements RPAREN
    (98) elements -> . factor
    (99) elements -> . element
    (100) elements -> . elements COMA factor
    (101) elements -> . elements COMA element
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN
    (102) element -> . arrays
    (103) element -> . lista
    (105) arrays -> . ARRAY LPAREN elements RPAREN
    (106) arrays -> . LCORC elements RCORC
    (97) lista -> . LIST LPAREN elements RPAREN

    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 100
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 40
    ARRAY           shift and go to state 73
    LCORC           shift and go to state 74
    LIST            shift and go to state 72

    elements                       shift and go to state 189
    factor                         shift and go to state 121
    element                        shift and go to state 122
    arrays                         shift and go to state 123
    lista                          shift and go to state 124

state 126

    (107) min -> MIN LPAREN . elements RPAREN
    (98) elements -> . factor
    (99) elements -> . element
    (100) elements -> . elements COMA factor
    (101) elements -> . elements COMA element
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN
    (102) element -> . arrays
    (103) element -> . lista
    (105) arrays -> . ARRAY LPAREN elements RPAREN
    (106) arrays -> . LCORC elements RCORC
    (97) lista -> . LIST LPAREN elements RPAREN

    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 100
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 40
    ARRAY           shift and go to state 73
    LCORC           shift and go to state 74
    LIST            shift and go to state 72

    elements                       shift and go to state 190
    factor                         shift and go to state 121
    element                        shift and go to state 122
    arrays                         shift and go to state 123
    lista                          shift and go to state 124

state 127

    (143) sort -> SORT LPAREN . VARIABLE RPAREN
    (144) sort -> SORT LPAREN . VARIABLE COMA FLAG RPAREN

    VARIABLE        shift and go to state 191


state 128

    (145) count -> COUNT LPAREN . VARIABLE RPAREN

    VARIABLE        shift and go to state 192


state 129

    (108) number_format -> NUMBER_FORMAT LPAREN . VARIABLE RPAREN
    (109) number_format -> NUMBER_FORMAT LPAREN . VARIABLE COMA NUMEROS RPAREN
    (110) number_format -> NUMBER_FORMAT LPAREN . VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPAREN

    VARIABLE        shift and go to state 193


state 130

    (88) floor -> FLOOR LPAREN . DECIMAL RPAREN
    (89) floor -> FLOOR LPAREN . MENOS DECIMAL RPAREN
    (90) floor -> FLOOR LPAREN . DECIMAL PRODUCTO NUMEROS RPAREN
    (91) floor -> FLOOR LPAREN . VARIABLE RPAREN

    DECIMAL         shift and go to state 194
    MENOS           shift and go to state 195
    VARIABLE        shift and go to state 196


state 131

    (82) round -> ROUND LPAREN . DECIMAL RPAREN
    (83) round -> ROUND LPAREN . MENOS DECIMAL RPAREN
    (84) round -> ROUND LPAREN . DECIMAL COMA NUMEROS RPAREN
    (85) round -> ROUND LPAREN . DECIMAL COMA MENOS NUMEROS RPAREN
    (86) round -> ROUND LPAREN . MENOS DECIMAL COMA MENOS NUMEROS RPAREN
    (87) round -> ROUND LPAREN . MENOS DECIMAL COMA NUMEROS RPAREN

    DECIMAL         shift and go to state 197
    MENOS           shift and go to state 198


state 132

    (92) ceil -> CEIL LPAREN . MENOS DECIMAL RPAREN
    (93) ceil -> CEIL LPAREN . DECIMAL RPAREN
    (94) ceil -> CEIL LPAREN . VARIABLE RPAREN
    (95) ceil -> CEIL LPAREN . VARIABLE PRODUCTO NUMEROS RPAREN

    MENOS           shift and go to state 199
    DECIMAL         shift and go to state 200
    VARIABLE        shift and go to state 201


state 133

    (122) rand -> RAND LPAREN . NUMEROS COMA NUMEROS RPAREN
    (123) rand -> RAND LPAREN . RPAREN

    NUMEROS         shift and go to state 202
    RPAREN          shift and go to state 203


state 134

    (96) fmod -> FMOD LPAREN . VARIABLE COMA VARIABLE RPAREN

    VARIABLE        shift and go to state 204


state 135

    (149) getclass -> GETCLASS LPAREN . VARIABLE RPAREN

    VARIABLE        shift and go to state 205


state 136

    (150) is_a -> IS_A LPAREN . VARIABLE COMA CADENADOBLE RPAREN

    VARIABLE        shift and go to state 206


state 137

    (22) imprimir -> PRINT LPAREN factor . RPAREN PUNTOCOMA
    (62) term -> factor .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 207
    MAS             reduce using rule 62 (term -> factor .)
    MENOS           reduce using rule 62 (term -> factor .)
    PRODUCTO        reduce using rule 62 (term -> factor .)
    DIVISION        reduce using rule 62 (term -> factor .)
    MODULO          reduce using rule 62 (term -> factor .)
    EXPONENCIACION  reduce using rule 62 (term -> factor .)

  ! RPAREN          [ reduce using rule 62 (term -> factor .) ]


state 138

    (23) imprimir -> PRINT LPAREN funciones . RPAREN PUNTOCOMA

    RPAREN          shift and go to state 208


state 139

    (32) asignacion -> VARIABLE IGUAL expresion PUNTOCOMA .

    VARIABLE        reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion PUNTOCOMA .)
    IF              reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion PUNTOCOMA .)
    FOR             reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion PUNTOCOMA .)
    WHILE           reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion PUNTOCOMA .)
    PREINCREMENTO   reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion PUNTOCOMA .)
    POSTINCREMENTO  reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion PUNTOCOMA .)
    PREDECREMENTO   reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion PUNTOCOMA .)
    POSTDECREMENTO  reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion PUNTOCOMA .)
    ECHO            reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion PUNTOCOMA .)
    PRINT           reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion PUNTOCOMA .)
    LPAREN          reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion PUNTOCOMA .)
    $end            reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion PUNTOCOMA .)
    NO              reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion PUNTOCOMA .)
    NUMEROS         reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion PUNTOCOMA .)
    DECIMAL         reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion PUNTOCOMA .)
    CADENASIMPLE    reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion PUNTOCOMA .)
    CADENADOBLE     reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion PUNTOCOMA .)
    BOOLEAN         reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion PUNTOCOMA .)
    R_LLAVE         reduce using rule 32 (asignacion -> VARIABLE IGUAL expresion PUNTOCOMA .)


state 140

    (36) expresion -> expresion operadores . term
    (62) term -> . factor
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN

    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 100
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 40

    term                           shift and go to state 209
    factor                         shift and go to state 108

state 141

    (38) operadores -> MAS .

    NUMEROS         reduce using rule 38 (operadores -> MAS .)
    DECIMAL         reduce using rule 38 (operadores -> MAS .)
    CADENASIMPLE    reduce using rule 38 (operadores -> MAS .)
    CADENADOBLE     reduce using rule 38 (operadores -> MAS .)
    VARIABLE        reduce using rule 38 (operadores -> MAS .)
    BOOLEAN         reduce using rule 38 (operadores -> MAS .)
    LPAREN          reduce using rule 38 (operadores -> MAS .)


state 142

    (39) operadores -> MENOS .

    NUMEROS         reduce using rule 39 (operadores -> MENOS .)
    DECIMAL         reduce using rule 39 (operadores -> MENOS .)
    CADENASIMPLE    reduce using rule 39 (operadores -> MENOS .)
    CADENADOBLE     reduce using rule 39 (operadores -> MENOS .)
    VARIABLE        reduce using rule 39 (operadores -> MENOS .)
    BOOLEAN         reduce using rule 39 (operadores -> MENOS .)
    LPAREN          reduce using rule 39 (operadores -> MENOS .)


state 143

    (40) operadores -> PRODUCTO .

    NUMEROS         reduce using rule 40 (operadores -> PRODUCTO .)
    DECIMAL         reduce using rule 40 (operadores -> PRODUCTO .)
    CADENASIMPLE    reduce using rule 40 (operadores -> PRODUCTO .)
    CADENADOBLE     reduce using rule 40 (operadores -> PRODUCTO .)
    VARIABLE        reduce using rule 40 (operadores -> PRODUCTO .)
    BOOLEAN         reduce using rule 40 (operadores -> PRODUCTO .)
    LPAREN          reduce using rule 40 (operadores -> PRODUCTO .)


state 144

    (41) operadores -> DIVISION .

    NUMEROS         reduce using rule 41 (operadores -> DIVISION .)
    DECIMAL         reduce using rule 41 (operadores -> DIVISION .)
    CADENASIMPLE    reduce using rule 41 (operadores -> DIVISION .)
    CADENADOBLE     reduce using rule 41 (operadores -> DIVISION .)
    VARIABLE        reduce using rule 41 (operadores -> DIVISION .)
    BOOLEAN         reduce using rule 41 (operadores -> DIVISION .)
    LPAREN          reduce using rule 41 (operadores -> DIVISION .)


state 145

    (42) operadores -> MODULO .

    NUMEROS         reduce using rule 42 (operadores -> MODULO .)
    DECIMAL         reduce using rule 42 (operadores -> MODULO .)
    CADENASIMPLE    reduce using rule 42 (operadores -> MODULO .)
    CADENADOBLE     reduce using rule 42 (operadores -> MODULO .)
    VARIABLE        reduce using rule 42 (operadores -> MODULO .)
    BOOLEAN         reduce using rule 42 (operadores -> MODULO .)
    LPAREN          reduce using rule 42 (operadores -> MODULO .)


state 146

    (43) operadores -> EXPONENCIACION .

    NUMEROS         reduce using rule 43 (operadores -> EXPONENCIACION .)
    DECIMAL         reduce using rule 43 (operadores -> EXPONENCIACION .)
    CADENASIMPLE    reduce using rule 43 (operadores -> EXPONENCIACION .)
    CADENADOBLE     reduce using rule 43 (operadores -> EXPONENCIACION .)
    VARIABLE        reduce using rule 43 (operadores -> EXPONENCIACION .)
    BOOLEAN         reduce using rule 43 (operadores -> EXPONENCIACION .)
    LPAREN          reduce using rule 43 (operadores -> EXPONENCIACION .)


state 147

    (33) asignacion -> VARIABLE IGUAL factor PUNTOCOMA .

    VARIABLE        reduce using rule 33 (asignacion -> VARIABLE IGUAL factor PUNTOCOMA .)
    IF              reduce using rule 33 (asignacion -> VARIABLE IGUAL factor PUNTOCOMA .)
    FOR             reduce using rule 33 (asignacion -> VARIABLE IGUAL factor PUNTOCOMA .)
    WHILE           reduce using rule 33 (asignacion -> VARIABLE IGUAL factor PUNTOCOMA .)
    PREINCREMENTO   reduce using rule 33 (asignacion -> VARIABLE IGUAL factor PUNTOCOMA .)
    POSTINCREMENTO  reduce using rule 33 (asignacion -> VARIABLE IGUAL factor PUNTOCOMA .)
    PREDECREMENTO   reduce using rule 33 (asignacion -> VARIABLE IGUAL factor PUNTOCOMA .)
    POSTDECREMENTO  reduce using rule 33 (asignacion -> VARIABLE IGUAL factor PUNTOCOMA .)
    ECHO            reduce using rule 33 (asignacion -> VARIABLE IGUAL factor PUNTOCOMA .)
    PRINT           reduce using rule 33 (asignacion -> VARIABLE IGUAL factor PUNTOCOMA .)
    LPAREN          reduce using rule 33 (asignacion -> VARIABLE IGUAL factor PUNTOCOMA .)
    $end            reduce using rule 33 (asignacion -> VARIABLE IGUAL factor PUNTOCOMA .)
    NO              reduce using rule 33 (asignacion -> VARIABLE IGUAL factor PUNTOCOMA .)
    NUMEROS         reduce using rule 33 (asignacion -> VARIABLE IGUAL factor PUNTOCOMA .)
    DECIMAL         reduce using rule 33 (asignacion -> VARIABLE IGUAL factor PUNTOCOMA .)
    CADENASIMPLE    reduce using rule 33 (asignacion -> VARIABLE IGUAL factor PUNTOCOMA .)
    CADENADOBLE     reduce using rule 33 (asignacion -> VARIABLE IGUAL factor PUNTOCOMA .)
    BOOLEAN         reduce using rule 33 (asignacion -> VARIABLE IGUAL factor PUNTOCOMA .)
    R_LLAVE         reduce using rule 33 (asignacion -> VARIABLE IGUAL factor PUNTOCOMA .)


state 148

    (35) asignacion -> VARIABLE IGUAL funciones PUNTOCOMA .

    VARIABLE        reduce using rule 35 (asignacion -> VARIABLE IGUAL funciones PUNTOCOMA .)
    IF              reduce using rule 35 (asignacion -> VARIABLE IGUAL funciones PUNTOCOMA .)
    FOR             reduce using rule 35 (asignacion -> VARIABLE IGUAL funciones PUNTOCOMA .)
    WHILE           reduce using rule 35 (asignacion -> VARIABLE IGUAL funciones PUNTOCOMA .)
    PREINCREMENTO   reduce using rule 35 (asignacion -> VARIABLE IGUAL funciones PUNTOCOMA .)
    POSTINCREMENTO  reduce using rule 35 (asignacion -> VARIABLE IGUAL funciones PUNTOCOMA .)
    PREDECREMENTO   reduce using rule 35 (asignacion -> VARIABLE IGUAL funciones PUNTOCOMA .)
    POSTDECREMENTO  reduce using rule 35 (asignacion -> VARIABLE IGUAL funciones PUNTOCOMA .)
    ECHO            reduce using rule 35 (asignacion -> VARIABLE IGUAL funciones PUNTOCOMA .)
    PRINT           reduce using rule 35 (asignacion -> VARIABLE IGUAL funciones PUNTOCOMA .)
    LPAREN          reduce using rule 35 (asignacion -> VARIABLE IGUAL funciones PUNTOCOMA .)
    $end            reduce using rule 35 (asignacion -> VARIABLE IGUAL funciones PUNTOCOMA .)
    NO              reduce using rule 35 (asignacion -> VARIABLE IGUAL funciones PUNTOCOMA .)
    NUMEROS         reduce using rule 35 (asignacion -> VARIABLE IGUAL funciones PUNTOCOMA .)
    DECIMAL         reduce using rule 35 (asignacion -> VARIABLE IGUAL funciones PUNTOCOMA .)
    CADENASIMPLE    reduce using rule 35 (asignacion -> VARIABLE IGUAL funciones PUNTOCOMA .)
    CADENADOBLE     reduce using rule 35 (asignacion -> VARIABLE IGUAL funciones PUNTOCOMA .)
    BOOLEAN         reduce using rule 35 (asignacion -> VARIABLE IGUAL funciones PUNTOCOMA .)
    R_LLAVE         reduce using rule 35 (asignacion -> VARIABLE IGUAL funciones PUNTOCOMA .)


state 149

    (45) comparacion -> LPAREN condiciones . RPAREN

    RPAREN          shift and go to state 210


state 150

    (47) condiciones -> factor . IGUAL_IGUAL factor
    (48) condiciones -> factor . IDENTICO factor
    (49) condiciones -> factor . DISTINTO factor
    (50) condiciones -> factor . MENORQUE factor
    (51) condiciones -> factor . MAYORQUE factor
    (52) condiciones -> factor . MENOROIGUAL factor
    (53) condiciones -> factor . MAYOROIGUAL factor
    (62) term -> factor .

    IGUAL_IGUAL     shift and go to state 160
    IDENTICO        shift and go to state 161
    DISTINTO        shift and go to state 162
    MENORQUE        shift and go to state 163
    MAYORQUE        shift and go to state 164
    MENOROIGUAL     shift and go to state 165
    MAYOROIGUAL     shift and go to state 166
    RPAREN          reduce using rule 62 (term -> factor .)
    MAS             reduce using rule 62 (term -> factor .)
    MENOS           reduce using rule 62 (term -> factor .)
    PRODUCTO        reduce using rule 62 (term -> factor .)
    DIVISION        reduce using rule 62 (term -> factor .)
    MODULO          reduce using rule 62 (term -> factor .)
    EXPONENCIACION  reduce using rule 62 (term -> factor .)


state 151

    (26) if -> IF LPAREN comparaciones RPAREN . L_LLAVE sentencias R_LLAVE
    (27) if -> IF LPAREN comparaciones RPAREN . L_LLAVE sentencias R_LLAVE else
    (28) if -> IF LPAREN comparaciones RPAREN . L_LLAVE sentencias R_LLAVE elseif else

    L_LLAVE         shift and go to state 211


state 152

    (55) comparaciones -> comparaciones anado . comparacion
    (44) comparacion -> . condiciones
    (45) comparacion -> . LPAREN condiciones RPAREN
    (46) comparacion -> . NO LPAREN condiciones RPAREN
    (47) condiciones -> . factor IGUAL_IGUAL factor
    (48) condiciones -> . factor IDENTICO factor
    (49) condiciones -> . factor DISTINTO factor
    (50) condiciones -> . factor MENORQUE factor
    (51) condiciones -> . factor MAYORQUE factor
    (52) condiciones -> . factor MENOROIGUAL factor
    (53) condiciones -> . factor MAYOROIGUAL factor
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN

    LPAREN          shift and go to state 94
    NO              shift and go to state 98
    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 100
    BOOLEAN         shift and go to state 39

    comparacion                    shift and go to state 212
    condiciones                    shift and go to state 97
    factor                         shift and go to state 99

state 153

    (56) anado -> condicion .

    LPAREN          reduce using rule 56 (anado -> condicion .)
    NO              reduce using rule 56 (anado -> condicion .)
    NUMEROS         reduce using rule 56 (anado -> condicion .)
    DECIMAL         reduce using rule 56 (anado -> condicion .)
    CADENASIMPLE    reduce using rule 56 (anado -> condicion .)
    CADENADOBLE     reduce using rule 56 (anado -> condicion .)
    VARIABLE        reduce using rule 56 (anado -> condicion .)
    BOOLEAN         reduce using rule 56 (anado -> condicion .)


state 154

    (57) condicion -> XOR .

    LPAREN          reduce using rule 57 (condicion -> XOR .)
    NO              reduce using rule 57 (condicion -> XOR .)
    NUMEROS         reduce using rule 57 (condicion -> XOR .)
    DECIMAL         reduce using rule 57 (condicion -> XOR .)
    CADENASIMPLE    reduce using rule 57 (condicion -> XOR .)
    CADENADOBLE     reduce using rule 57 (condicion -> XOR .)
    VARIABLE        reduce using rule 57 (condicion -> XOR .)
    BOOLEAN         reduce using rule 57 (condicion -> XOR .)


state 155

    (58) condicion -> ANDAND .

    LPAREN          reduce using rule 58 (condicion -> ANDAND .)
    NO              reduce using rule 58 (condicion -> ANDAND .)
    NUMEROS         reduce using rule 58 (condicion -> ANDAND .)
    DECIMAL         reduce using rule 58 (condicion -> ANDAND .)
    CADENASIMPLE    reduce using rule 58 (condicion -> ANDAND .)
    CADENADOBLE     reduce using rule 58 (condicion -> ANDAND .)
    VARIABLE        reduce using rule 58 (condicion -> ANDAND .)
    BOOLEAN         reduce using rule 58 (condicion -> ANDAND .)


state 156

    (59) condicion -> AND .

    LPAREN          reduce using rule 59 (condicion -> AND .)
    NO              reduce using rule 59 (condicion -> AND .)
    NUMEROS         reduce using rule 59 (condicion -> AND .)
    DECIMAL         reduce using rule 59 (condicion -> AND .)
    CADENASIMPLE    reduce using rule 59 (condicion -> AND .)
    CADENADOBLE     reduce using rule 59 (condicion -> AND .)
    VARIABLE        reduce using rule 59 (condicion -> AND .)
    BOOLEAN         reduce using rule 59 (condicion -> AND .)


state 157

    (60) condicion -> OR .

    LPAREN          reduce using rule 60 (condicion -> OR .)
    NO              reduce using rule 60 (condicion -> OR .)
    NUMEROS         reduce using rule 60 (condicion -> OR .)
    DECIMAL         reduce using rule 60 (condicion -> OR .)
    CADENASIMPLE    reduce using rule 60 (condicion -> OR .)
    CADENADOBLE     reduce using rule 60 (condicion -> OR .)
    VARIABLE        reduce using rule 60 (condicion -> OR .)
    BOOLEAN         reduce using rule 60 (condicion -> OR .)


state 158

    (61) condicion -> OROR .

    LPAREN          reduce using rule 61 (condicion -> OROR .)
    NO              reduce using rule 61 (condicion -> OROR .)
    NUMEROS         reduce using rule 61 (condicion -> OROR .)
    DECIMAL         reduce using rule 61 (condicion -> OROR .)
    CADENASIMPLE    reduce using rule 61 (condicion -> OROR .)
    CADENADOBLE     reduce using rule 61 (condicion -> OROR .)
    VARIABLE        reduce using rule 61 (condicion -> OROR .)
    BOOLEAN         reduce using rule 61 (condicion -> OROR .)


state 159

    (46) comparacion -> NO LPAREN . condiciones RPAREN
    (47) condiciones -> . factor IGUAL_IGUAL factor
    (48) condiciones -> . factor IDENTICO factor
    (49) condiciones -> . factor DISTINTO factor
    (50) condiciones -> . factor MENORQUE factor
    (51) condiciones -> . factor MAYORQUE factor
    (52) condiciones -> . factor MENOROIGUAL factor
    (53) condiciones -> . factor MAYOROIGUAL factor
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN

    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 100
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 40

    condiciones                    shift and go to state 213
    factor                         shift and go to state 99

state 160

    (47) condiciones -> factor IGUAL_IGUAL . factor
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN

    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 100
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 40

    factor                         shift and go to state 214

state 161

    (48) condiciones -> factor IDENTICO . factor
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN

    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 100
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 40

    factor                         shift and go to state 215

state 162

    (49) condiciones -> factor DISTINTO . factor
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN

    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 100
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 40

    factor                         shift and go to state 216

state 163

    (50) condiciones -> factor MENORQUE . factor
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN

    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 100
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 40

    factor                         shift and go to state 217

state 164

    (51) condiciones -> factor MAYORQUE . factor
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN

    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 100
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 40

    factor                         shift and go to state 218

state 165

    (52) condiciones -> factor MENOROIGUAL . factor
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN

    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 100
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 40

    factor                         shift and go to state 219

state 166

    (53) condiciones -> factor MAYOROIGUAL . factor
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN

    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 100
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 40

    factor                         shift and go to state 220

state 167

    (17) object -> LPAREN OBJECT RPAREN term .

    VARIABLE        reduce using rule 17 (object -> LPAREN OBJECT RPAREN term .)
    IF              reduce using rule 17 (object -> LPAREN OBJECT RPAREN term .)
    FOR             reduce using rule 17 (object -> LPAREN OBJECT RPAREN term .)
    WHILE           reduce using rule 17 (object -> LPAREN OBJECT RPAREN term .)
    PREINCREMENTO   reduce using rule 17 (object -> LPAREN OBJECT RPAREN term .)
    POSTINCREMENTO  reduce using rule 17 (object -> LPAREN OBJECT RPAREN term .)
    PREDECREMENTO   reduce using rule 17 (object -> LPAREN OBJECT RPAREN term .)
    POSTDECREMENTO  reduce using rule 17 (object -> LPAREN OBJECT RPAREN term .)
    ECHO            reduce using rule 17 (object -> LPAREN OBJECT RPAREN term .)
    PRINT           reduce using rule 17 (object -> LPAREN OBJECT RPAREN term .)
    LPAREN          reduce using rule 17 (object -> LPAREN OBJECT RPAREN term .)
    $end            reduce using rule 17 (object -> LPAREN OBJECT RPAREN term .)
    R_LLAVE         reduce using rule 17 (object -> LPAREN OBJECT RPAREN term .)


state 168

    (11) for -> FOR LPAREN asignacion comparaciones . PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE
    (55) comparaciones -> comparaciones . anado comparacion
    (56) anado -> . condicion
    (57) condicion -> . XOR
    (58) condicion -> . ANDAND
    (59) condicion -> . AND
    (60) condicion -> . OR
    (61) condicion -> . OROR

    PUNTOCOMA       shift and go to state 221
    XOR             shift and go to state 154
    ANDAND          shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    OROR            shift and go to state 158

    anado                          shift and go to state 152
    condicion                      shift and go to state 153

state 169

    (12) while -> WHILE LPAREN comparaciones RPAREN . L_LLAVE sentencias R_LLAVE

    L_LLAVE         shift and go to state 222


state 170

    (119) funciones -> VARIABLE IGUAL next .

    PUNTOCOMA       reduce using rule 119 (funciones -> VARIABLE IGUAL next .)
    VARIABLE        reduce using rule 119 (funciones -> VARIABLE IGUAL next .)
    IF              reduce using rule 119 (funciones -> VARIABLE IGUAL next .)
    FOR             reduce using rule 119 (funciones -> VARIABLE IGUAL next .)
    WHILE           reduce using rule 119 (funciones -> VARIABLE IGUAL next .)
    PREINCREMENTO   reduce using rule 119 (funciones -> VARIABLE IGUAL next .)
    POSTINCREMENTO  reduce using rule 119 (funciones -> VARIABLE IGUAL next .)
    PREDECREMENTO   reduce using rule 119 (funciones -> VARIABLE IGUAL next .)
    POSTDECREMENTO  reduce using rule 119 (funciones -> VARIABLE IGUAL next .)
    ECHO            reduce using rule 119 (funciones -> VARIABLE IGUAL next .)
    PRINT           reduce using rule 119 (funciones -> VARIABLE IGUAL next .)
    LPAREN          reduce using rule 119 (funciones -> VARIABLE IGUAL next .)
    $end            reduce using rule 119 (funciones -> VARIABLE IGUAL next .)
    R_LLAVE         reduce using rule 119 (funciones -> VARIABLE IGUAL next .)
    RPAREN          reduce using rule 119 (funciones -> VARIABLE IGUAL next .)


state 171

    (146) next -> NEXT . LPAREN VARIABLE RPAREN

    LPAREN          shift and go to state 223


state 172

    (69) factor -> LPAREN expresion RPAREN .

    PUNTOCOMA       reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    VARIABLE        reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    IF              reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    FOR             reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    WHILE           reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    PREINCREMENTO   reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    POSTINCREMENTO  reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    PREDECREMENTO   reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    POSTDECREMENTO  reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    ECHO            reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    PRINT           reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    LPAREN          reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    $end            reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    R_LLAVE         reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    MAS             reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    MENOS           reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    PRODUCTO        reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    DIVISION        reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    MODULO          reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    EXPONENCIACION  reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    IGUAL_IGUAL     reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    IDENTICO        reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    DISTINTO        reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    MENORQUE        reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    MAYORQUE        reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    MENOROIGUAL     reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    MAYOROIGUAL     reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    RCORC           reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    COMA            reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    XOR             reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    ANDAND          reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    AND             reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    OR              reduce using rule 69 (factor -> LPAREN expresion RPAREN .)
    OROR            reduce using rule 69 (factor -> LPAREN expresion RPAREN .)


state 173

    (124) funciones -> POTENCIA LPAREN NUMEROS . COMA NUMEROS RPAREN

    COMA            shift and go to state 224


state 174

    (135) trim -> TRIM LPAREN VARIABLE . RPAREN
    (136) trim -> TRIM LPAREN VARIABLE . COMA CADENADOBLE RPAREN
    (137) trim -> TRIM LPAREN VARIABLE . COMA CADENASIMPLE RPAREN

    RPAREN          shift and go to state 225
    COMA            shift and go to state 226


state 175

    (138) substr -> SUBSTR LPAREN VARIABLE . COMA NUMEROS COMA NUMEROS RPAREN
    (140) substr -> SUBSTR LPAREN VARIABLE . COMA NUMEROS RPAREN

    COMA            shift and go to state 227


state 176

    (139) substr -> SUBSTR LPAREN CADENADOBLE . COMA NUMEROS COMA NUMEROS RPAREN
    (141) substr -> SUBSTR LPAREN CADENADOBLE . COMA NUMEROS RPAREN

    COMA            shift and go to state 228


state 177

    (142) wordwrap -> WORDWRAP LPAREN VARIABLE . COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN RPAREN

    COMA            shift and go to state 229


state 178

    (70) fopen -> FOPEN LPAREN CADENADOBLE . COMA CADENADOBLE RPAREN

    COMA            shift and go to state 230


state 179

    (71) fopen -> FOPEN LPAREN CADENASIMPLE . COMA CADENADOBLE RPAREN

    COMA            shift and go to state 231


state 180

    (72) fpassthru -> FPASSTHRU LPAREN VARIABLE . RPAREN

    RPAREN          shift and go to state 232


state 181

    (73) feof -> FEOF LPAREN VARIABLE . RPAREN

    RPAREN          shift and go to state 233


state 182

    (74) fgets -> FGETS LPAREN VARIABLE . COMA NUMEROS RPAREN
    (75) fgets -> FGETS LPAREN VARIABLE . RPAREN

    COMA            shift and go to state 234
    RPAREN          shift and go to state 235


state 183

    (76) nl2br -> NL2BR LPAREN CADENADOBLE . COMA VARIABLE RPAREN
    (77) nl2br -> NL2BR LPAREN CADENADOBLE . COMA BOOLEAN RPAREN
    (78) nl2br -> NL2BR LPAREN CADENADOBLE . RPAREN

    COMA            shift and go to state 236
    RPAREN          shift and go to state 237


state 184

    (79) nl2br -> NL2BR LPAREN VARIABLE . COMA BOOLEAN RPAREN
    (80) nl2br -> NL2BR LPAREN VARIABLE . COMA VARIABLE RPAREN
    (81) nl2br -> NL2BR LPAREN VARIABLE . RPAREN

    COMA            shift and go to state 238
    RPAREN          shift and go to state 239


state 185

    (97) lista -> LIST LPAREN elements . RPAREN
    (100) elements -> elements . COMA factor
    (101) elements -> elements . COMA element

    RPAREN          shift and go to state 240
    COMA            shift and go to state 188


state 186

    (105) arrays -> ARRAY LPAREN elements . RPAREN
    (100) elements -> elements . COMA factor
    (101) elements -> elements . COMA element

    RPAREN          shift and go to state 241
    COMA            shift and go to state 188


state 187

    (106) arrays -> LCORC elements RCORC .

    PUNTOCOMA       reduce using rule 106 (arrays -> LCORC elements RCORC .)
    VARIABLE        reduce using rule 106 (arrays -> LCORC elements RCORC .)
    IF              reduce using rule 106 (arrays -> LCORC elements RCORC .)
    FOR             reduce using rule 106 (arrays -> LCORC elements RCORC .)
    WHILE           reduce using rule 106 (arrays -> LCORC elements RCORC .)
    PREINCREMENTO   reduce using rule 106 (arrays -> LCORC elements RCORC .)
    POSTINCREMENTO  reduce using rule 106 (arrays -> LCORC elements RCORC .)
    PREDECREMENTO   reduce using rule 106 (arrays -> LCORC elements RCORC .)
    POSTDECREMENTO  reduce using rule 106 (arrays -> LCORC elements RCORC .)
    ECHO            reduce using rule 106 (arrays -> LCORC elements RCORC .)
    PRINT           reduce using rule 106 (arrays -> LCORC elements RCORC .)
    LPAREN          reduce using rule 106 (arrays -> LCORC elements RCORC .)
    $end            reduce using rule 106 (arrays -> LCORC elements RCORC .)
    R_LLAVE         reduce using rule 106 (arrays -> LCORC elements RCORC .)
    RCORC           reduce using rule 106 (arrays -> LCORC elements RCORC .)
    COMA            reduce using rule 106 (arrays -> LCORC elements RCORC .)
    RPAREN          reduce using rule 106 (arrays -> LCORC elements RCORC .)


state 188

    (100) elements -> elements COMA . factor
    (101) elements -> elements COMA . element
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN
    (102) element -> . arrays
    (103) element -> . lista
    (105) arrays -> . ARRAY LPAREN elements RPAREN
    (106) arrays -> . LCORC elements RCORC
    (97) lista -> . LIST LPAREN elements RPAREN

    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 100
    BOOLEAN         shift and go to state 39
    LPAREN          shift and go to state 40
    ARRAY           shift and go to state 73
    LCORC           shift and go to state 74
    LIST            shift and go to state 72

    factor                         shift and go to state 242
    element                        shift and go to state 243
    arrays                         shift and go to state 123
    lista                          shift and go to state 124

state 189

    (104) max -> MAX LPAREN elements . RPAREN
    (100) elements -> elements . COMA factor
    (101) elements -> elements . COMA element

    RPAREN          shift and go to state 244
    COMA            shift and go to state 188


state 190

    (107) min -> MIN LPAREN elements . RPAREN
    (100) elements -> elements . COMA factor
    (101) elements -> elements . COMA element

    RPAREN          shift and go to state 245
    COMA            shift and go to state 188


state 191

    (143) sort -> SORT LPAREN VARIABLE . RPAREN
    (144) sort -> SORT LPAREN VARIABLE . COMA FLAG RPAREN

    RPAREN          shift and go to state 246
    COMA            shift and go to state 247


state 192

    (145) count -> COUNT LPAREN VARIABLE . RPAREN

    RPAREN          shift and go to state 248


state 193

    (108) number_format -> NUMBER_FORMAT LPAREN VARIABLE . RPAREN
    (109) number_format -> NUMBER_FORMAT LPAREN VARIABLE . COMA NUMEROS RPAREN
    (110) number_format -> NUMBER_FORMAT LPAREN VARIABLE . COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPAREN

    RPAREN          shift and go to state 249
    COMA            shift and go to state 250


state 194

    (88) floor -> FLOOR LPAREN DECIMAL . RPAREN
    (90) floor -> FLOOR LPAREN DECIMAL . PRODUCTO NUMEROS RPAREN

    RPAREN          shift and go to state 251
    PRODUCTO        shift and go to state 252


state 195

    (89) floor -> FLOOR LPAREN MENOS . DECIMAL RPAREN

    DECIMAL         shift and go to state 253


state 196

    (91) floor -> FLOOR LPAREN VARIABLE . RPAREN

    RPAREN          shift and go to state 254


state 197

    (82) round -> ROUND LPAREN DECIMAL . RPAREN
    (84) round -> ROUND LPAREN DECIMAL . COMA NUMEROS RPAREN
    (85) round -> ROUND LPAREN DECIMAL . COMA MENOS NUMEROS RPAREN

    RPAREN          shift and go to state 255
    COMA            shift and go to state 256


state 198

    (83) round -> ROUND LPAREN MENOS . DECIMAL RPAREN
    (86) round -> ROUND LPAREN MENOS . DECIMAL COMA MENOS NUMEROS RPAREN
    (87) round -> ROUND LPAREN MENOS . DECIMAL COMA NUMEROS RPAREN

    DECIMAL         shift and go to state 257


state 199

    (92) ceil -> CEIL LPAREN MENOS . DECIMAL RPAREN

    DECIMAL         shift and go to state 258


state 200

    (93) ceil -> CEIL LPAREN DECIMAL . RPAREN

    RPAREN          shift and go to state 259


state 201

    (94) ceil -> CEIL LPAREN VARIABLE . RPAREN
    (95) ceil -> CEIL LPAREN VARIABLE . PRODUCTO NUMEROS RPAREN

    RPAREN          shift and go to state 260
    PRODUCTO        shift and go to state 261


state 202

    (122) rand -> RAND LPAREN NUMEROS . COMA NUMEROS RPAREN

    COMA            shift and go to state 262


state 203

    (123) rand -> RAND LPAREN RPAREN .

    PUNTOCOMA       reduce using rule 123 (rand -> RAND LPAREN RPAREN .)
    VARIABLE        reduce using rule 123 (rand -> RAND LPAREN RPAREN .)
    IF              reduce using rule 123 (rand -> RAND LPAREN RPAREN .)
    FOR             reduce using rule 123 (rand -> RAND LPAREN RPAREN .)
    WHILE           reduce using rule 123 (rand -> RAND LPAREN RPAREN .)
    PREINCREMENTO   reduce using rule 123 (rand -> RAND LPAREN RPAREN .)
    POSTINCREMENTO  reduce using rule 123 (rand -> RAND LPAREN RPAREN .)
    PREDECREMENTO   reduce using rule 123 (rand -> RAND LPAREN RPAREN .)
    POSTDECREMENTO  reduce using rule 123 (rand -> RAND LPAREN RPAREN .)
    ECHO            reduce using rule 123 (rand -> RAND LPAREN RPAREN .)
    PRINT           reduce using rule 123 (rand -> RAND LPAREN RPAREN .)
    LPAREN          reduce using rule 123 (rand -> RAND LPAREN RPAREN .)
    $end            reduce using rule 123 (rand -> RAND LPAREN RPAREN .)
    R_LLAVE         reduce using rule 123 (rand -> RAND LPAREN RPAREN .)
    RPAREN          reduce using rule 123 (rand -> RAND LPAREN RPAREN .)


state 204

    (96) fmod -> FMOD LPAREN VARIABLE . COMA VARIABLE RPAREN

    COMA            shift and go to state 263


state 205

    (149) getclass -> GETCLASS LPAREN VARIABLE . RPAREN

    RPAREN          shift and go to state 264


state 206

    (150) is_a -> IS_A LPAREN VARIABLE . COMA CADENADOBLE RPAREN

    COMA            shift and go to state 265


state 207

    (22) imprimir -> PRINT LPAREN factor RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 266


state 208

    (23) imprimir -> PRINT LPAREN funciones RPAREN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 267


state 209

    (36) expresion -> expresion operadores term .

    PUNTOCOMA       reduce using rule 36 (expresion -> expresion operadores term .)
    MAS             reduce using rule 36 (expresion -> expresion operadores term .)
    MENOS           reduce using rule 36 (expresion -> expresion operadores term .)
    PRODUCTO        reduce using rule 36 (expresion -> expresion operadores term .)
    DIVISION        reduce using rule 36 (expresion -> expresion operadores term .)
    MODULO          reduce using rule 36 (expresion -> expresion operadores term .)
    EXPONENCIACION  reduce using rule 36 (expresion -> expresion operadores term .)
    RPAREN          reduce using rule 36 (expresion -> expresion operadores term .)


state 210

    (45) comparacion -> LPAREN condiciones RPAREN .

    RPAREN          reduce using rule 45 (comparacion -> LPAREN condiciones RPAREN .)
    XOR             reduce using rule 45 (comparacion -> LPAREN condiciones RPAREN .)
    ANDAND          reduce using rule 45 (comparacion -> LPAREN condiciones RPAREN .)
    AND             reduce using rule 45 (comparacion -> LPAREN condiciones RPAREN .)
    OR              reduce using rule 45 (comparacion -> LPAREN condiciones RPAREN .)
    OROR            reduce using rule 45 (comparacion -> LPAREN condiciones RPAREN .)
    PUNTOCOMA       reduce using rule 45 (comparacion -> LPAREN condiciones RPAREN .)


state 211

    (26) if -> IF LPAREN comparaciones RPAREN L_LLAVE . sentencias R_LLAVE
    (27) if -> IF LPAREN comparaciones RPAREN L_LLAVE . sentencias R_LLAVE else
    (28) if -> IF LPAREN comparaciones RPAREN L_LLAVE . sentencias R_LLAVE elseif else
    (1) sentencias -> . sentencias asignacion
    (2) sentencias -> . sentencias metodos
    (3) sentencias -> . sentencias if
    (4) sentencias -> . sentencias for
    (5) sentencias -> . sentencias while
    (6) sentencias -> . asignacion
    (7) sentencias -> . metodos
    (8) sentencias -> . if
    (9) sentencias -> . for
    (10) sentencias -> . while
    (32) asignacion -> . VARIABLE IGUAL expresion PUNTOCOMA
    (33) asignacion -> . VARIABLE IGUAL factor PUNTOCOMA
    (34) asignacion -> . incremento_decremento PUNTOCOMA
    (35) asignacion -> . VARIABLE IGUAL funciones PUNTOCOMA
    (18) metodos -> . imprimir
    (19) metodos -> . object
    (26) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (27) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else
    (28) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else
    (11) for -> . FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE
    (12) while -> . WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (13) incremento_decremento -> . PREINCREMENTO
    (14) incremento_decremento -> . POSTINCREMENTO
    (15) incremento_decremento -> . PREDECREMENTO
    (16) incremento_decremento -> . POSTDECREMENTO
    (20) imprimir -> . ECHO factor PUNTOCOMA
    (21) imprimir -> . ECHO funciones PUNTOCOMA
    (22) imprimir -> . PRINT LPAREN factor RPAREN PUNTOCOMA
    (23) imprimir -> . PRINT LPAREN funciones RPAREN PUNTOCOMA
    (24) imprimir -> . PRINT factor
    (25) imprimir -> . PRINT funciones
    (17) object -> . LPAREN OBJECT RPAREN term

    VARIABLE        shift and go to state 7
    IF              shift and go to state 11
    FOR             shift and go to state 13
    WHILE           shift and go to state 14
    PREINCREMENTO   shift and go to state 15
    POSTINCREMENTO  shift and go to state 16
    PREDECREMENTO   shift and go to state 17
    POSTDECREMENTO  shift and go to state 18
    ECHO            shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 12

    sentencias                     shift and go to state 268
    asignacion                     shift and go to state 2
    metodos                        shift and go to state 3
    if                             shift and go to state 4
    for                            shift and go to state 5
    while                          shift and go to state 6
    incremento_decremento          shift and go to state 8
    imprimir                       shift and go to state 9
    object                         shift and go to state 10

state 212

    (55) comparaciones -> comparaciones anado comparacion .

    RPAREN          reduce using rule 55 (comparaciones -> comparaciones anado comparacion .)
    XOR             reduce using rule 55 (comparaciones -> comparaciones anado comparacion .)
    ANDAND          reduce using rule 55 (comparaciones -> comparaciones anado comparacion .)
    AND             reduce using rule 55 (comparaciones -> comparaciones anado comparacion .)
    OR              reduce using rule 55 (comparaciones -> comparaciones anado comparacion .)
    OROR            reduce using rule 55 (comparaciones -> comparaciones anado comparacion .)
    PUNTOCOMA       reduce using rule 55 (comparaciones -> comparaciones anado comparacion .)


state 213

    (46) comparacion -> NO LPAREN condiciones . RPAREN

    RPAREN          shift and go to state 269


state 214

    (47) condiciones -> factor IGUAL_IGUAL factor .

    RPAREN          reduce using rule 47 (condiciones -> factor IGUAL_IGUAL factor .)
    XOR             reduce using rule 47 (condiciones -> factor IGUAL_IGUAL factor .)
    ANDAND          reduce using rule 47 (condiciones -> factor IGUAL_IGUAL factor .)
    AND             reduce using rule 47 (condiciones -> factor IGUAL_IGUAL factor .)
    OR              reduce using rule 47 (condiciones -> factor IGUAL_IGUAL factor .)
    OROR            reduce using rule 47 (condiciones -> factor IGUAL_IGUAL factor .)
    PUNTOCOMA       reduce using rule 47 (condiciones -> factor IGUAL_IGUAL factor .)


state 215

    (48) condiciones -> factor IDENTICO factor .

    RPAREN          reduce using rule 48 (condiciones -> factor IDENTICO factor .)
    XOR             reduce using rule 48 (condiciones -> factor IDENTICO factor .)
    ANDAND          reduce using rule 48 (condiciones -> factor IDENTICO factor .)
    AND             reduce using rule 48 (condiciones -> factor IDENTICO factor .)
    OR              reduce using rule 48 (condiciones -> factor IDENTICO factor .)
    OROR            reduce using rule 48 (condiciones -> factor IDENTICO factor .)
    PUNTOCOMA       reduce using rule 48 (condiciones -> factor IDENTICO factor .)


state 216

    (49) condiciones -> factor DISTINTO factor .

    RPAREN          reduce using rule 49 (condiciones -> factor DISTINTO factor .)
    XOR             reduce using rule 49 (condiciones -> factor DISTINTO factor .)
    ANDAND          reduce using rule 49 (condiciones -> factor DISTINTO factor .)
    AND             reduce using rule 49 (condiciones -> factor DISTINTO factor .)
    OR              reduce using rule 49 (condiciones -> factor DISTINTO factor .)
    OROR            reduce using rule 49 (condiciones -> factor DISTINTO factor .)
    PUNTOCOMA       reduce using rule 49 (condiciones -> factor DISTINTO factor .)


state 217

    (50) condiciones -> factor MENORQUE factor .

    RPAREN          reduce using rule 50 (condiciones -> factor MENORQUE factor .)
    XOR             reduce using rule 50 (condiciones -> factor MENORQUE factor .)
    ANDAND          reduce using rule 50 (condiciones -> factor MENORQUE factor .)
    AND             reduce using rule 50 (condiciones -> factor MENORQUE factor .)
    OR              reduce using rule 50 (condiciones -> factor MENORQUE factor .)
    OROR            reduce using rule 50 (condiciones -> factor MENORQUE factor .)
    PUNTOCOMA       reduce using rule 50 (condiciones -> factor MENORQUE factor .)


state 218

    (51) condiciones -> factor MAYORQUE factor .

    RPAREN          reduce using rule 51 (condiciones -> factor MAYORQUE factor .)
    XOR             reduce using rule 51 (condiciones -> factor MAYORQUE factor .)
    ANDAND          reduce using rule 51 (condiciones -> factor MAYORQUE factor .)
    AND             reduce using rule 51 (condiciones -> factor MAYORQUE factor .)
    OR              reduce using rule 51 (condiciones -> factor MAYORQUE factor .)
    OROR            reduce using rule 51 (condiciones -> factor MAYORQUE factor .)
    PUNTOCOMA       reduce using rule 51 (condiciones -> factor MAYORQUE factor .)


state 219

    (52) condiciones -> factor MENOROIGUAL factor .

    RPAREN          reduce using rule 52 (condiciones -> factor MENOROIGUAL factor .)
    XOR             reduce using rule 52 (condiciones -> factor MENOROIGUAL factor .)
    ANDAND          reduce using rule 52 (condiciones -> factor MENOROIGUAL factor .)
    AND             reduce using rule 52 (condiciones -> factor MENOROIGUAL factor .)
    OR              reduce using rule 52 (condiciones -> factor MENOROIGUAL factor .)
    OROR            reduce using rule 52 (condiciones -> factor MENOROIGUAL factor .)
    PUNTOCOMA       reduce using rule 52 (condiciones -> factor MENOROIGUAL factor .)


state 220

    (53) condiciones -> factor MAYOROIGUAL factor .

    RPAREN          reduce using rule 53 (condiciones -> factor MAYOROIGUAL factor .)
    XOR             reduce using rule 53 (condiciones -> factor MAYOROIGUAL factor .)
    ANDAND          reduce using rule 53 (condiciones -> factor MAYOROIGUAL factor .)
    AND             reduce using rule 53 (condiciones -> factor MAYOROIGUAL factor .)
    OR              reduce using rule 53 (condiciones -> factor MAYOROIGUAL factor .)
    OROR            reduce using rule 53 (condiciones -> factor MAYOROIGUAL factor .)
    PUNTOCOMA       reduce using rule 53 (condiciones -> factor MAYOROIGUAL factor .)


state 221

    (11) for -> FOR LPAREN asignacion comparaciones PUNTOCOMA . incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE
    (13) incremento_decremento -> . PREINCREMENTO
    (14) incremento_decremento -> . POSTINCREMENTO
    (15) incremento_decremento -> . PREDECREMENTO
    (16) incremento_decremento -> . POSTDECREMENTO

    PREINCREMENTO   shift and go to state 15
    POSTINCREMENTO  shift and go to state 16
    PREDECREMENTO   shift and go to state 17
    POSTDECREMENTO  shift and go to state 18

    incremento_decremento          shift and go to state 270

state 222

    (12) while -> WHILE LPAREN comparaciones RPAREN L_LLAVE . sentencias R_LLAVE
    (1) sentencias -> . sentencias asignacion
    (2) sentencias -> . sentencias metodos
    (3) sentencias -> . sentencias if
    (4) sentencias -> . sentencias for
    (5) sentencias -> . sentencias while
    (6) sentencias -> . asignacion
    (7) sentencias -> . metodos
    (8) sentencias -> . if
    (9) sentencias -> . for
    (10) sentencias -> . while
    (32) asignacion -> . VARIABLE IGUAL expresion PUNTOCOMA
    (33) asignacion -> . VARIABLE IGUAL factor PUNTOCOMA
    (34) asignacion -> . incremento_decremento PUNTOCOMA
    (35) asignacion -> . VARIABLE IGUAL funciones PUNTOCOMA
    (18) metodos -> . imprimir
    (19) metodos -> . object
    (26) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (27) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else
    (28) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else
    (11) for -> . FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE
    (12) while -> . WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (13) incremento_decremento -> . PREINCREMENTO
    (14) incremento_decremento -> . POSTINCREMENTO
    (15) incremento_decremento -> . PREDECREMENTO
    (16) incremento_decremento -> . POSTDECREMENTO
    (20) imprimir -> . ECHO factor PUNTOCOMA
    (21) imprimir -> . ECHO funciones PUNTOCOMA
    (22) imprimir -> . PRINT LPAREN factor RPAREN PUNTOCOMA
    (23) imprimir -> . PRINT LPAREN funciones RPAREN PUNTOCOMA
    (24) imprimir -> . PRINT factor
    (25) imprimir -> . PRINT funciones
    (17) object -> . LPAREN OBJECT RPAREN term

    VARIABLE        shift and go to state 7
    IF              shift and go to state 11
    FOR             shift and go to state 13
    WHILE           shift and go to state 14
    PREINCREMENTO   shift and go to state 15
    POSTINCREMENTO  shift and go to state 16
    PREDECREMENTO   shift and go to state 17
    POSTDECREMENTO  shift and go to state 18
    ECHO            shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 12

    sentencias                     shift and go to state 271
    asignacion                     shift and go to state 2
    metodos                        shift and go to state 3
    if                             shift and go to state 4
    for                            shift and go to state 5
    while                          shift and go to state 6
    incremento_decremento          shift and go to state 8
    imprimir                       shift and go to state 9
    object                         shift and go to state 10

state 223

    (146) next -> NEXT LPAREN . VARIABLE RPAREN

    VARIABLE        shift and go to state 272


state 224

    (124) funciones -> POTENCIA LPAREN NUMEROS COMA . NUMEROS RPAREN

    NUMEROS         shift and go to state 273


state 225

    (135) trim -> TRIM LPAREN VARIABLE RPAREN .

    PUNTOCOMA       reduce using rule 135 (trim -> TRIM LPAREN VARIABLE RPAREN .)
    VARIABLE        reduce using rule 135 (trim -> TRIM LPAREN VARIABLE RPAREN .)
    IF              reduce using rule 135 (trim -> TRIM LPAREN VARIABLE RPAREN .)
    FOR             reduce using rule 135 (trim -> TRIM LPAREN VARIABLE RPAREN .)
    WHILE           reduce using rule 135 (trim -> TRIM LPAREN VARIABLE RPAREN .)
    PREINCREMENTO   reduce using rule 135 (trim -> TRIM LPAREN VARIABLE RPAREN .)
    POSTINCREMENTO  reduce using rule 135 (trim -> TRIM LPAREN VARIABLE RPAREN .)
    PREDECREMENTO   reduce using rule 135 (trim -> TRIM LPAREN VARIABLE RPAREN .)
    POSTDECREMENTO  reduce using rule 135 (trim -> TRIM LPAREN VARIABLE RPAREN .)
    ECHO            reduce using rule 135 (trim -> TRIM LPAREN VARIABLE RPAREN .)
    PRINT           reduce using rule 135 (trim -> TRIM LPAREN VARIABLE RPAREN .)
    LPAREN          reduce using rule 135 (trim -> TRIM LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 135 (trim -> TRIM LPAREN VARIABLE RPAREN .)
    R_LLAVE         reduce using rule 135 (trim -> TRIM LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 135 (trim -> TRIM LPAREN VARIABLE RPAREN .)


state 226

    (136) trim -> TRIM LPAREN VARIABLE COMA . CADENADOBLE RPAREN
    (137) trim -> TRIM LPAREN VARIABLE COMA . CADENASIMPLE RPAREN

    CADENADOBLE     shift and go to state 274
    CADENASIMPLE    shift and go to state 275


state 227

    (138) substr -> SUBSTR LPAREN VARIABLE COMA . NUMEROS COMA NUMEROS RPAREN
    (140) substr -> SUBSTR LPAREN VARIABLE COMA . NUMEROS RPAREN

    NUMEROS         shift and go to state 276


state 228

    (139) substr -> SUBSTR LPAREN CADENADOBLE COMA . NUMEROS COMA NUMEROS RPAREN
    (141) substr -> SUBSTR LPAREN CADENADOBLE COMA . NUMEROS RPAREN

    NUMEROS         shift and go to state 277


state 229

    (142) wordwrap -> WORDWRAP LPAREN VARIABLE COMA . NUMEROS COMA CADENADOBLE COMA BOOLEAN RPAREN

    NUMEROS         shift and go to state 278


state 230

    (70) fopen -> FOPEN LPAREN CADENADOBLE COMA . CADENADOBLE RPAREN

    CADENADOBLE     shift and go to state 279


state 231

    (71) fopen -> FOPEN LPAREN CADENASIMPLE COMA . CADENADOBLE RPAREN

    CADENADOBLE     shift and go to state 280


state 232

    (72) fpassthru -> FPASSTHRU LPAREN VARIABLE RPAREN .

    PUNTOCOMA       reduce using rule 72 (fpassthru -> FPASSTHRU LPAREN VARIABLE RPAREN .)
    VARIABLE        reduce using rule 72 (fpassthru -> FPASSTHRU LPAREN VARIABLE RPAREN .)
    IF              reduce using rule 72 (fpassthru -> FPASSTHRU LPAREN VARIABLE RPAREN .)
    FOR             reduce using rule 72 (fpassthru -> FPASSTHRU LPAREN VARIABLE RPAREN .)
    WHILE           reduce using rule 72 (fpassthru -> FPASSTHRU LPAREN VARIABLE RPAREN .)
    PREINCREMENTO   reduce using rule 72 (fpassthru -> FPASSTHRU LPAREN VARIABLE RPAREN .)
    POSTINCREMENTO  reduce using rule 72 (fpassthru -> FPASSTHRU LPAREN VARIABLE RPAREN .)
    PREDECREMENTO   reduce using rule 72 (fpassthru -> FPASSTHRU LPAREN VARIABLE RPAREN .)
    POSTDECREMENTO  reduce using rule 72 (fpassthru -> FPASSTHRU LPAREN VARIABLE RPAREN .)
    ECHO            reduce using rule 72 (fpassthru -> FPASSTHRU LPAREN VARIABLE RPAREN .)
    PRINT           reduce using rule 72 (fpassthru -> FPASSTHRU LPAREN VARIABLE RPAREN .)
    LPAREN          reduce using rule 72 (fpassthru -> FPASSTHRU LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 72 (fpassthru -> FPASSTHRU LPAREN VARIABLE RPAREN .)
    R_LLAVE         reduce using rule 72 (fpassthru -> FPASSTHRU LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 72 (fpassthru -> FPASSTHRU LPAREN VARIABLE RPAREN .)


state 233

    (73) feof -> FEOF LPAREN VARIABLE RPAREN .

    PUNTOCOMA       reduce using rule 73 (feof -> FEOF LPAREN VARIABLE RPAREN .)
    VARIABLE        reduce using rule 73 (feof -> FEOF LPAREN VARIABLE RPAREN .)
    IF              reduce using rule 73 (feof -> FEOF LPAREN VARIABLE RPAREN .)
    FOR             reduce using rule 73 (feof -> FEOF LPAREN VARIABLE RPAREN .)
    WHILE           reduce using rule 73 (feof -> FEOF LPAREN VARIABLE RPAREN .)
    PREINCREMENTO   reduce using rule 73 (feof -> FEOF LPAREN VARIABLE RPAREN .)
    POSTINCREMENTO  reduce using rule 73 (feof -> FEOF LPAREN VARIABLE RPAREN .)
    PREDECREMENTO   reduce using rule 73 (feof -> FEOF LPAREN VARIABLE RPAREN .)
    POSTDECREMENTO  reduce using rule 73 (feof -> FEOF LPAREN VARIABLE RPAREN .)
    ECHO            reduce using rule 73 (feof -> FEOF LPAREN VARIABLE RPAREN .)
    PRINT           reduce using rule 73 (feof -> FEOF LPAREN VARIABLE RPAREN .)
    LPAREN          reduce using rule 73 (feof -> FEOF LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 73 (feof -> FEOF LPAREN VARIABLE RPAREN .)
    R_LLAVE         reduce using rule 73 (feof -> FEOF LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 73 (feof -> FEOF LPAREN VARIABLE RPAREN .)


state 234

    (74) fgets -> FGETS LPAREN VARIABLE COMA . NUMEROS RPAREN

    NUMEROS         shift and go to state 281


state 235

    (75) fgets -> FGETS LPAREN VARIABLE RPAREN .

    PUNTOCOMA       reduce using rule 75 (fgets -> FGETS LPAREN VARIABLE RPAREN .)
    VARIABLE        reduce using rule 75 (fgets -> FGETS LPAREN VARIABLE RPAREN .)
    IF              reduce using rule 75 (fgets -> FGETS LPAREN VARIABLE RPAREN .)
    FOR             reduce using rule 75 (fgets -> FGETS LPAREN VARIABLE RPAREN .)
    WHILE           reduce using rule 75 (fgets -> FGETS LPAREN VARIABLE RPAREN .)
    PREINCREMENTO   reduce using rule 75 (fgets -> FGETS LPAREN VARIABLE RPAREN .)
    POSTINCREMENTO  reduce using rule 75 (fgets -> FGETS LPAREN VARIABLE RPAREN .)
    PREDECREMENTO   reduce using rule 75 (fgets -> FGETS LPAREN VARIABLE RPAREN .)
    POSTDECREMENTO  reduce using rule 75 (fgets -> FGETS LPAREN VARIABLE RPAREN .)
    ECHO            reduce using rule 75 (fgets -> FGETS LPAREN VARIABLE RPAREN .)
    PRINT           reduce using rule 75 (fgets -> FGETS LPAREN VARIABLE RPAREN .)
    LPAREN          reduce using rule 75 (fgets -> FGETS LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 75 (fgets -> FGETS LPAREN VARIABLE RPAREN .)
    R_LLAVE         reduce using rule 75 (fgets -> FGETS LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 75 (fgets -> FGETS LPAREN VARIABLE RPAREN .)


state 236

    (76) nl2br -> NL2BR LPAREN CADENADOBLE COMA . VARIABLE RPAREN
    (77) nl2br -> NL2BR LPAREN CADENADOBLE COMA . BOOLEAN RPAREN

    VARIABLE        shift and go to state 282
    BOOLEAN         shift and go to state 283


state 237

    (78) nl2br -> NL2BR LPAREN CADENADOBLE RPAREN .

    PUNTOCOMA       reduce using rule 78 (nl2br -> NL2BR LPAREN CADENADOBLE RPAREN .)
    VARIABLE        reduce using rule 78 (nl2br -> NL2BR LPAREN CADENADOBLE RPAREN .)
    IF              reduce using rule 78 (nl2br -> NL2BR LPAREN CADENADOBLE RPAREN .)
    FOR             reduce using rule 78 (nl2br -> NL2BR LPAREN CADENADOBLE RPAREN .)
    WHILE           reduce using rule 78 (nl2br -> NL2BR LPAREN CADENADOBLE RPAREN .)
    PREINCREMENTO   reduce using rule 78 (nl2br -> NL2BR LPAREN CADENADOBLE RPAREN .)
    POSTINCREMENTO  reduce using rule 78 (nl2br -> NL2BR LPAREN CADENADOBLE RPAREN .)
    PREDECREMENTO   reduce using rule 78 (nl2br -> NL2BR LPAREN CADENADOBLE RPAREN .)
    POSTDECREMENTO  reduce using rule 78 (nl2br -> NL2BR LPAREN CADENADOBLE RPAREN .)
    ECHO            reduce using rule 78 (nl2br -> NL2BR LPAREN CADENADOBLE RPAREN .)
    PRINT           reduce using rule 78 (nl2br -> NL2BR LPAREN CADENADOBLE RPAREN .)
    LPAREN          reduce using rule 78 (nl2br -> NL2BR LPAREN CADENADOBLE RPAREN .)
    $end            reduce using rule 78 (nl2br -> NL2BR LPAREN CADENADOBLE RPAREN .)
    R_LLAVE         reduce using rule 78 (nl2br -> NL2BR LPAREN CADENADOBLE RPAREN .)
    RPAREN          reduce using rule 78 (nl2br -> NL2BR LPAREN CADENADOBLE RPAREN .)


state 238

    (79) nl2br -> NL2BR LPAREN VARIABLE COMA . BOOLEAN RPAREN
    (80) nl2br -> NL2BR LPAREN VARIABLE COMA . VARIABLE RPAREN

    BOOLEAN         shift and go to state 285
    VARIABLE        shift and go to state 284


state 239

    (81) nl2br -> NL2BR LPAREN VARIABLE RPAREN .

    PUNTOCOMA       reduce using rule 81 (nl2br -> NL2BR LPAREN VARIABLE RPAREN .)
    VARIABLE        reduce using rule 81 (nl2br -> NL2BR LPAREN VARIABLE RPAREN .)
    IF              reduce using rule 81 (nl2br -> NL2BR LPAREN VARIABLE RPAREN .)
    FOR             reduce using rule 81 (nl2br -> NL2BR LPAREN VARIABLE RPAREN .)
    WHILE           reduce using rule 81 (nl2br -> NL2BR LPAREN VARIABLE RPAREN .)
    PREINCREMENTO   reduce using rule 81 (nl2br -> NL2BR LPAREN VARIABLE RPAREN .)
    POSTINCREMENTO  reduce using rule 81 (nl2br -> NL2BR LPAREN VARIABLE RPAREN .)
    PREDECREMENTO   reduce using rule 81 (nl2br -> NL2BR LPAREN VARIABLE RPAREN .)
    POSTDECREMENTO  reduce using rule 81 (nl2br -> NL2BR LPAREN VARIABLE RPAREN .)
    ECHO            reduce using rule 81 (nl2br -> NL2BR LPAREN VARIABLE RPAREN .)
    PRINT           reduce using rule 81 (nl2br -> NL2BR LPAREN VARIABLE RPAREN .)
    LPAREN          reduce using rule 81 (nl2br -> NL2BR LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 81 (nl2br -> NL2BR LPAREN VARIABLE RPAREN .)
    R_LLAVE         reduce using rule 81 (nl2br -> NL2BR LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 81 (nl2br -> NL2BR LPAREN VARIABLE RPAREN .)


state 240

    (97) lista -> LIST LPAREN elements RPAREN .

    PUNTOCOMA       reduce using rule 97 (lista -> LIST LPAREN elements RPAREN .)
    VARIABLE        reduce using rule 97 (lista -> LIST LPAREN elements RPAREN .)
    IF              reduce using rule 97 (lista -> LIST LPAREN elements RPAREN .)
    FOR             reduce using rule 97 (lista -> LIST LPAREN elements RPAREN .)
    WHILE           reduce using rule 97 (lista -> LIST LPAREN elements RPAREN .)
    PREINCREMENTO   reduce using rule 97 (lista -> LIST LPAREN elements RPAREN .)
    POSTINCREMENTO  reduce using rule 97 (lista -> LIST LPAREN elements RPAREN .)
    PREDECREMENTO   reduce using rule 97 (lista -> LIST LPAREN elements RPAREN .)
    POSTDECREMENTO  reduce using rule 97 (lista -> LIST LPAREN elements RPAREN .)
    ECHO            reduce using rule 97 (lista -> LIST LPAREN elements RPAREN .)
    PRINT           reduce using rule 97 (lista -> LIST LPAREN elements RPAREN .)
    LPAREN          reduce using rule 97 (lista -> LIST LPAREN elements RPAREN .)
    $end            reduce using rule 97 (lista -> LIST LPAREN elements RPAREN .)
    R_LLAVE         reduce using rule 97 (lista -> LIST LPAREN elements RPAREN .)
    RCORC           reduce using rule 97 (lista -> LIST LPAREN elements RPAREN .)
    COMA            reduce using rule 97 (lista -> LIST LPAREN elements RPAREN .)
    RPAREN          reduce using rule 97 (lista -> LIST LPAREN elements RPAREN .)


state 241

    (105) arrays -> ARRAY LPAREN elements RPAREN .

    PUNTOCOMA       reduce using rule 105 (arrays -> ARRAY LPAREN elements RPAREN .)
    VARIABLE        reduce using rule 105 (arrays -> ARRAY LPAREN elements RPAREN .)
    IF              reduce using rule 105 (arrays -> ARRAY LPAREN elements RPAREN .)
    FOR             reduce using rule 105 (arrays -> ARRAY LPAREN elements RPAREN .)
    WHILE           reduce using rule 105 (arrays -> ARRAY LPAREN elements RPAREN .)
    PREINCREMENTO   reduce using rule 105 (arrays -> ARRAY LPAREN elements RPAREN .)
    POSTINCREMENTO  reduce using rule 105 (arrays -> ARRAY LPAREN elements RPAREN .)
    PREDECREMENTO   reduce using rule 105 (arrays -> ARRAY LPAREN elements RPAREN .)
    POSTDECREMENTO  reduce using rule 105 (arrays -> ARRAY LPAREN elements RPAREN .)
    ECHO            reduce using rule 105 (arrays -> ARRAY LPAREN elements RPAREN .)
    PRINT           reduce using rule 105 (arrays -> ARRAY LPAREN elements RPAREN .)
    LPAREN          reduce using rule 105 (arrays -> ARRAY LPAREN elements RPAREN .)
    $end            reduce using rule 105 (arrays -> ARRAY LPAREN elements RPAREN .)
    R_LLAVE         reduce using rule 105 (arrays -> ARRAY LPAREN elements RPAREN .)
    RCORC           reduce using rule 105 (arrays -> ARRAY LPAREN elements RPAREN .)
    COMA            reduce using rule 105 (arrays -> ARRAY LPAREN elements RPAREN .)
    RPAREN          reduce using rule 105 (arrays -> ARRAY LPAREN elements RPAREN .)


state 242

    (100) elements -> elements COMA factor .

    RCORC           reduce using rule 100 (elements -> elements COMA factor .)
    COMA            reduce using rule 100 (elements -> elements COMA factor .)
    RPAREN          reduce using rule 100 (elements -> elements COMA factor .)


state 243

    (101) elements -> elements COMA element .

    RCORC           reduce using rule 101 (elements -> elements COMA element .)
    COMA            reduce using rule 101 (elements -> elements COMA element .)
    RPAREN          reduce using rule 101 (elements -> elements COMA element .)


state 244

    (104) max -> MAX LPAREN elements RPAREN .

    PUNTOCOMA       reduce using rule 104 (max -> MAX LPAREN elements RPAREN .)
    VARIABLE        reduce using rule 104 (max -> MAX LPAREN elements RPAREN .)
    IF              reduce using rule 104 (max -> MAX LPAREN elements RPAREN .)
    FOR             reduce using rule 104 (max -> MAX LPAREN elements RPAREN .)
    WHILE           reduce using rule 104 (max -> MAX LPAREN elements RPAREN .)
    PREINCREMENTO   reduce using rule 104 (max -> MAX LPAREN elements RPAREN .)
    POSTINCREMENTO  reduce using rule 104 (max -> MAX LPAREN elements RPAREN .)
    PREDECREMENTO   reduce using rule 104 (max -> MAX LPAREN elements RPAREN .)
    POSTDECREMENTO  reduce using rule 104 (max -> MAX LPAREN elements RPAREN .)
    ECHO            reduce using rule 104 (max -> MAX LPAREN elements RPAREN .)
    PRINT           reduce using rule 104 (max -> MAX LPAREN elements RPAREN .)
    LPAREN          reduce using rule 104 (max -> MAX LPAREN elements RPAREN .)
    $end            reduce using rule 104 (max -> MAX LPAREN elements RPAREN .)
    R_LLAVE         reduce using rule 104 (max -> MAX LPAREN elements RPAREN .)
    RPAREN          reduce using rule 104 (max -> MAX LPAREN elements RPAREN .)


state 245

    (107) min -> MIN LPAREN elements RPAREN .

    PUNTOCOMA       reduce using rule 107 (min -> MIN LPAREN elements RPAREN .)
    VARIABLE        reduce using rule 107 (min -> MIN LPAREN elements RPAREN .)
    IF              reduce using rule 107 (min -> MIN LPAREN elements RPAREN .)
    FOR             reduce using rule 107 (min -> MIN LPAREN elements RPAREN .)
    WHILE           reduce using rule 107 (min -> MIN LPAREN elements RPAREN .)
    PREINCREMENTO   reduce using rule 107 (min -> MIN LPAREN elements RPAREN .)
    POSTINCREMENTO  reduce using rule 107 (min -> MIN LPAREN elements RPAREN .)
    PREDECREMENTO   reduce using rule 107 (min -> MIN LPAREN elements RPAREN .)
    POSTDECREMENTO  reduce using rule 107 (min -> MIN LPAREN elements RPAREN .)
    ECHO            reduce using rule 107 (min -> MIN LPAREN elements RPAREN .)
    PRINT           reduce using rule 107 (min -> MIN LPAREN elements RPAREN .)
    LPAREN          reduce using rule 107 (min -> MIN LPAREN elements RPAREN .)
    $end            reduce using rule 107 (min -> MIN LPAREN elements RPAREN .)
    R_LLAVE         reduce using rule 107 (min -> MIN LPAREN elements RPAREN .)
    RPAREN          reduce using rule 107 (min -> MIN LPAREN elements RPAREN .)


state 246

    (143) sort -> SORT LPAREN VARIABLE RPAREN .

    PUNTOCOMA       reduce using rule 143 (sort -> SORT LPAREN VARIABLE RPAREN .)
    VARIABLE        reduce using rule 143 (sort -> SORT LPAREN VARIABLE RPAREN .)
    IF              reduce using rule 143 (sort -> SORT LPAREN VARIABLE RPAREN .)
    FOR             reduce using rule 143 (sort -> SORT LPAREN VARIABLE RPAREN .)
    WHILE           reduce using rule 143 (sort -> SORT LPAREN VARIABLE RPAREN .)
    PREINCREMENTO   reduce using rule 143 (sort -> SORT LPAREN VARIABLE RPAREN .)
    POSTINCREMENTO  reduce using rule 143 (sort -> SORT LPAREN VARIABLE RPAREN .)
    PREDECREMENTO   reduce using rule 143 (sort -> SORT LPAREN VARIABLE RPAREN .)
    POSTDECREMENTO  reduce using rule 143 (sort -> SORT LPAREN VARIABLE RPAREN .)
    ECHO            reduce using rule 143 (sort -> SORT LPAREN VARIABLE RPAREN .)
    PRINT           reduce using rule 143 (sort -> SORT LPAREN VARIABLE RPAREN .)
    LPAREN          reduce using rule 143 (sort -> SORT LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 143 (sort -> SORT LPAREN VARIABLE RPAREN .)
    R_LLAVE         reduce using rule 143 (sort -> SORT LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 143 (sort -> SORT LPAREN VARIABLE RPAREN .)


state 247

    (144) sort -> SORT LPAREN VARIABLE COMA . FLAG RPAREN

    FLAG            shift and go to state 286


state 248

    (145) count -> COUNT LPAREN VARIABLE RPAREN .

    PUNTOCOMA       reduce using rule 145 (count -> COUNT LPAREN VARIABLE RPAREN .)
    VARIABLE        reduce using rule 145 (count -> COUNT LPAREN VARIABLE RPAREN .)
    IF              reduce using rule 145 (count -> COUNT LPAREN VARIABLE RPAREN .)
    FOR             reduce using rule 145 (count -> COUNT LPAREN VARIABLE RPAREN .)
    WHILE           reduce using rule 145 (count -> COUNT LPAREN VARIABLE RPAREN .)
    PREINCREMENTO   reduce using rule 145 (count -> COUNT LPAREN VARIABLE RPAREN .)
    POSTINCREMENTO  reduce using rule 145 (count -> COUNT LPAREN VARIABLE RPAREN .)
    PREDECREMENTO   reduce using rule 145 (count -> COUNT LPAREN VARIABLE RPAREN .)
    POSTDECREMENTO  reduce using rule 145 (count -> COUNT LPAREN VARIABLE RPAREN .)
    ECHO            reduce using rule 145 (count -> COUNT LPAREN VARIABLE RPAREN .)
    PRINT           reduce using rule 145 (count -> COUNT LPAREN VARIABLE RPAREN .)
    LPAREN          reduce using rule 145 (count -> COUNT LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 145 (count -> COUNT LPAREN VARIABLE RPAREN .)
    R_LLAVE         reduce using rule 145 (count -> COUNT LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 145 (count -> COUNT LPAREN VARIABLE RPAREN .)


state 249

    (108) number_format -> NUMBER_FORMAT LPAREN VARIABLE RPAREN .

    PUNTOCOMA       reduce using rule 108 (number_format -> NUMBER_FORMAT LPAREN VARIABLE RPAREN .)
    VARIABLE        reduce using rule 108 (number_format -> NUMBER_FORMAT LPAREN VARIABLE RPAREN .)
    IF              reduce using rule 108 (number_format -> NUMBER_FORMAT LPAREN VARIABLE RPAREN .)
    FOR             reduce using rule 108 (number_format -> NUMBER_FORMAT LPAREN VARIABLE RPAREN .)
    WHILE           reduce using rule 108 (number_format -> NUMBER_FORMAT LPAREN VARIABLE RPAREN .)
    PREINCREMENTO   reduce using rule 108 (number_format -> NUMBER_FORMAT LPAREN VARIABLE RPAREN .)
    POSTINCREMENTO  reduce using rule 108 (number_format -> NUMBER_FORMAT LPAREN VARIABLE RPAREN .)
    PREDECREMENTO   reduce using rule 108 (number_format -> NUMBER_FORMAT LPAREN VARIABLE RPAREN .)
    POSTDECREMENTO  reduce using rule 108 (number_format -> NUMBER_FORMAT LPAREN VARIABLE RPAREN .)
    ECHO            reduce using rule 108 (number_format -> NUMBER_FORMAT LPAREN VARIABLE RPAREN .)
    PRINT           reduce using rule 108 (number_format -> NUMBER_FORMAT LPAREN VARIABLE RPAREN .)
    LPAREN          reduce using rule 108 (number_format -> NUMBER_FORMAT LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 108 (number_format -> NUMBER_FORMAT LPAREN VARIABLE RPAREN .)
    R_LLAVE         reduce using rule 108 (number_format -> NUMBER_FORMAT LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 108 (number_format -> NUMBER_FORMAT LPAREN VARIABLE RPAREN .)


state 250

    (109) number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA . NUMEROS RPAREN
    (110) number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA . NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPAREN

    NUMEROS         shift and go to state 287


state 251

    (88) floor -> FLOOR LPAREN DECIMAL RPAREN .

    PUNTOCOMA       reduce using rule 88 (floor -> FLOOR LPAREN DECIMAL RPAREN .)
    VARIABLE        reduce using rule 88 (floor -> FLOOR LPAREN DECIMAL RPAREN .)
    IF              reduce using rule 88 (floor -> FLOOR LPAREN DECIMAL RPAREN .)
    FOR             reduce using rule 88 (floor -> FLOOR LPAREN DECIMAL RPAREN .)
    WHILE           reduce using rule 88 (floor -> FLOOR LPAREN DECIMAL RPAREN .)
    PREINCREMENTO   reduce using rule 88 (floor -> FLOOR LPAREN DECIMAL RPAREN .)
    POSTINCREMENTO  reduce using rule 88 (floor -> FLOOR LPAREN DECIMAL RPAREN .)
    PREDECREMENTO   reduce using rule 88 (floor -> FLOOR LPAREN DECIMAL RPAREN .)
    POSTDECREMENTO  reduce using rule 88 (floor -> FLOOR LPAREN DECIMAL RPAREN .)
    ECHO            reduce using rule 88 (floor -> FLOOR LPAREN DECIMAL RPAREN .)
    PRINT           reduce using rule 88 (floor -> FLOOR LPAREN DECIMAL RPAREN .)
    LPAREN          reduce using rule 88 (floor -> FLOOR LPAREN DECIMAL RPAREN .)
    $end            reduce using rule 88 (floor -> FLOOR LPAREN DECIMAL RPAREN .)
    R_LLAVE         reduce using rule 88 (floor -> FLOOR LPAREN DECIMAL RPAREN .)
    RPAREN          reduce using rule 88 (floor -> FLOOR LPAREN DECIMAL RPAREN .)


state 252

    (90) floor -> FLOOR LPAREN DECIMAL PRODUCTO . NUMEROS RPAREN

    NUMEROS         shift and go to state 288


state 253

    (89) floor -> FLOOR LPAREN MENOS DECIMAL . RPAREN

    RPAREN          shift and go to state 289


state 254

    (91) floor -> FLOOR LPAREN VARIABLE RPAREN .

    PUNTOCOMA       reduce using rule 91 (floor -> FLOOR LPAREN VARIABLE RPAREN .)
    VARIABLE        reduce using rule 91 (floor -> FLOOR LPAREN VARIABLE RPAREN .)
    IF              reduce using rule 91 (floor -> FLOOR LPAREN VARIABLE RPAREN .)
    FOR             reduce using rule 91 (floor -> FLOOR LPAREN VARIABLE RPAREN .)
    WHILE           reduce using rule 91 (floor -> FLOOR LPAREN VARIABLE RPAREN .)
    PREINCREMENTO   reduce using rule 91 (floor -> FLOOR LPAREN VARIABLE RPAREN .)
    POSTINCREMENTO  reduce using rule 91 (floor -> FLOOR LPAREN VARIABLE RPAREN .)
    PREDECREMENTO   reduce using rule 91 (floor -> FLOOR LPAREN VARIABLE RPAREN .)
    POSTDECREMENTO  reduce using rule 91 (floor -> FLOOR LPAREN VARIABLE RPAREN .)
    ECHO            reduce using rule 91 (floor -> FLOOR LPAREN VARIABLE RPAREN .)
    PRINT           reduce using rule 91 (floor -> FLOOR LPAREN VARIABLE RPAREN .)
    LPAREN          reduce using rule 91 (floor -> FLOOR LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 91 (floor -> FLOOR LPAREN VARIABLE RPAREN .)
    R_LLAVE         reduce using rule 91 (floor -> FLOOR LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 91 (floor -> FLOOR LPAREN VARIABLE RPAREN .)


state 255

    (82) round -> ROUND LPAREN DECIMAL RPAREN .

    PUNTOCOMA       reduce using rule 82 (round -> ROUND LPAREN DECIMAL RPAREN .)
    VARIABLE        reduce using rule 82 (round -> ROUND LPAREN DECIMAL RPAREN .)
    IF              reduce using rule 82 (round -> ROUND LPAREN DECIMAL RPAREN .)
    FOR             reduce using rule 82 (round -> ROUND LPAREN DECIMAL RPAREN .)
    WHILE           reduce using rule 82 (round -> ROUND LPAREN DECIMAL RPAREN .)
    PREINCREMENTO   reduce using rule 82 (round -> ROUND LPAREN DECIMAL RPAREN .)
    POSTINCREMENTO  reduce using rule 82 (round -> ROUND LPAREN DECIMAL RPAREN .)
    PREDECREMENTO   reduce using rule 82 (round -> ROUND LPAREN DECIMAL RPAREN .)
    POSTDECREMENTO  reduce using rule 82 (round -> ROUND LPAREN DECIMAL RPAREN .)
    ECHO            reduce using rule 82 (round -> ROUND LPAREN DECIMAL RPAREN .)
    PRINT           reduce using rule 82 (round -> ROUND LPAREN DECIMAL RPAREN .)
    LPAREN          reduce using rule 82 (round -> ROUND LPAREN DECIMAL RPAREN .)
    $end            reduce using rule 82 (round -> ROUND LPAREN DECIMAL RPAREN .)
    R_LLAVE         reduce using rule 82 (round -> ROUND LPAREN DECIMAL RPAREN .)
    RPAREN          reduce using rule 82 (round -> ROUND LPAREN DECIMAL RPAREN .)


state 256

    (84) round -> ROUND LPAREN DECIMAL COMA . NUMEROS RPAREN
    (85) round -> ROUND LPAREN DECIMAL COMA . MENOS NUMEROS RPAREN

    NUMEROS         shift and go to state 290
    MENOS           shift and go to state 291


state 257

    (83) round -> ROUND LPAREN MENOS DECIMAL . RPAREN
    (86) round -> ROUND LPAREN MENOS DECIMAL . COMA MENOS NUMEROS RPAREN
    (87) round -> ROUND LPAREN MENOS DECIMAL . COMA NUMEROS RPAREN

    RPAREN          shift and go to state 292
    COMA            shift and go to state 293


state 258

    (92) ceil -> CEIL LPAREN MENOS DECIMAL . RPAREN

    RPAREN          shift and go to state 294


state 259

    (93) ceil -> CEIL LPAREN DECIMAL RPAREN .

    PUNTOCOMA       reduce using rule 93 (ceil -> CEIL LPAREN DECIMAL RPAREN .)
    VARIABLE        reduce using rule 93 (ceil -> CEIL LPAREN DECIMAL RPAREN .)
    IF              reduce using rule 93 (ceil -> CEIL LPAREN DECIMAL RPAREN .)
    FOR             reduce using rule 93 (ceil -> CEIL LPAREN DECIMAL RPAREN .)
    WHILE           reduce using rule 93 (ceil -> CEIL LPAREN DECIMAL RPAREN .)
    PREINCREMENTO   reduce using rule 93 (ceil -> CEIL LPAREN DECIMAL RPAREN .)
    POSTINCREMENTO  reduce using rule 93 (ceil -> CEIL LPAREN DECIMAL RPAREN .)
    PREDECREMENTO   reduce using rule 93 (ceil -> CEIL LPAREN DECIMAL RPAREN .)
    POSTDECREMENTO  reduce using rule 93 (ceil -> CEIL LPAREN DECIMAL RPAREN .)
    ECHO            reduce using rule 93 (ceil -> CEIL LPAREN DECIMAL RPAREN .)
    PRINT           reduce using rule 93 (ceil -> CEIL LPAREN DECIMAL RPAREN .)
    LPAREN          reduce using rule 93 (ceil -> CEIL LPAREN DECIMAL RPAREN .)
    $end            reduce using rule 93 (ceil -> CEIL LPAREN DECIMAL RPAREN .)
    R_LLAVE         reduce using rule 93 (ceil -> CEIL LPAREN DECIMAL RPAREN .)
    RPAREN          reduce using rule 93 (ceil -> CEIL LPAREN DECIMAL RPAREN .)


state 260

    (94) ceil -> CEIL LPAREN VARIABLE RPAREN .

    PUNTOCOMA       reduce using rule 94 (ceil -> CEIL LPAREN VARIABLE RPAREN .)
    VARIABLE        reduce using rule 94 (ceil -> CEIL LPAREN VARIABLE RPAREN .)
    IF              reduce using rule 94 (ceil -> CEIL LPAREN VARIABLE RPAREN .)
    FOR             reduce using rule 94 (ceil -> CEIL LPAREN VARIABLE RPAREN .)
    WHILE           reduce using rule 94 (ceil -> CEIL LPAREN VARIABLE RPAREN .)
    PREINCREMENTO   reduce using rule 94 (ceil -> CEIL LPAREN VARIABLE RPAREN .)
    POSTINCREMENTO  reduce using rule 94 (ceil -> CEIL LPAREN VARIABLE RPAREN .)
    PREDECREMENTO   reduce using rule 94 (ceil -> CEIL LPAREN VARIABLE RPAREN .)
    POSTDECREMENTO  reduce using rule 94 (ceil -> CEIL LPAREN VARIABLE RPAREN .)
    ECHO            reduce using rule 94 (ceil -> CEIL LPAREN VARIABLE RPAREN .)
    PRINT           reduce using rule 94 (ceil -> CEIL LPAREN VARIABLE RPAREN .)
    LPAREN          reduce using rule 94 (ceil -> CEIL LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 94 (ceil -> CEIL LPAREN VARIABLE RPAREN .)
    R_LLAVE         reduce using rule 94 (ceil -> CEIL LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 94 (ceil -> CEIL LPAREN VARIABLE RPAREN .)


state 261

    (95) ceil -> CEIL LPAREN VARIABLE PRODUCTO . NUMEROS RPAREN

    NUMEROS         shift and go to state 295


state 262

    (122) rand -> RAND LPAREN NUMEROS COMA . NUMEROS RPAREN

    NUMEROS         shift and go to state 296


state 263

    (96) fmod -> FMOD LPAREN VARIABLE COMA . VARIABLE RPAREN

    VARIABLE        shift and go to state 297


state 264

    (149) getclass -> GETCLASS LPAREN VARIABLE RPAREN .

    PUNTOCOMA       reduce using rule 149 (getclass -> GETCLASS LPAREN VARIABLE RPAREN .)
    VARIABLE        reduce using rule 149 (getclass -> GETCLASS LPAREN VARIABLE RPAREN .)
    IF              reduce using rule 149 (getclass -> GETCLASS LPAREN VARIABLE RPAREN .)
    FOR             reduce using rule 149 (getclass -> GETCLASS LPAREN VARIABLE RPAREN .)
    WHILE           reduce using rule 149 (getclass -> GETCLASS LPAREN VARIABLE RPAREN .)
    PREINCREMENTO   reduce using rule 149 (getclass -> GETCLASS LPAREN VARIABLE RPAREN .)
    POSTINCREMENTO  reduce using rule 149 (getclass -> GETCLASS LPAREN VARIABLE RPAREN .)
    PREDECREMENTO   reduce using rule 149 (getclass -> GETCLASS LPAREN VARIABLE RPAREN .)
    POSTDECREMENTO  reduce using rule 149 (getclass -> GETCLASS LPAREN VARIABLE RPAREN .)
    ECHO            reduce using rule 149 (getclass -> GETCLASS LPAREN VARIABLE RPAREN .)
    PRINT           reduce using rule 149 (getclass -> GETCLASS LPAREN VARIABLE RPAREN .)
    LPAREN          reduce using rule 149 (getclass -> GETCLASS LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 149 (getclass -> GETCLASS LPAREN VARIABLE RPAREN .)
    R_LLAVE         reduce using rule 149 (getclass -> GETCLASS LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 149 (getclass -> GETCLASS LPAREN VARIABLE RPAREN .)


state 265

    (150) is_a -> IS_A LPAREN VARIABLE COMA . CADENADOBLE RPAREN

    CADENADOBLE     shift and go to state 298


state 266

    (22) imprimir -> PRINT LPAREN factor RPAREN PUNTOCOMA .

    VARIABLE        reduce using rule 22 (imprimir -> PRINT LPAREN factor RPAREN PUNTOCOMA .)
    IF              reduce using rule 22 (imprimir -> PRINT LPAREN factor RPAREN PUNTOCOMA .)
    FOR             reduce using rule 22 (imprimir -> PRINT LPAREN factor RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 22 (imprimir -> PRINT LPAREN factor RPAREN PUNTOCOMA .)
    PREINCREMENTO   reduce using rule 22 (imprimir -> PRINT LPAREN factor RPAREN PUNTOCOMA .)
    POSTINCREMENTO  reduce using rule 22 (imprimir -> PRINT LPAREN factor RPAREN PUNTOCOMA .)
    PREDECREMENTO   reduce using rule 22 (imprimir -> PRINT LPAREN factor RPAREN PUNTOCOMA .)
    POSTDECREMENTO  reduce using rule 22 (imprimir -> PRINT LPAREN factor RPAREN PUNTOCOMA .)
    ECHO            reduce using rule 22 (imprimir -> PRINT LPAREN factor RPAREN PUNTOCOMA .)
    PRINT           reduce using rule 22 (imprimir -> PRINT LPAREN factor RPAREN PUNTOCOMA .)
    LPAREN          reduce using rule 22 (imprimir -> PRINT LPAREN factor RPAREN PUNTOCOMA .)
    $end            reduce using rule 22 (imprimir -> PRINT LPAREN factor RPAREN PUNTOCOMA .)
    R_LLAVE         reduce using rule 22 (imprimir -> PRINT LPAREN factor RPAREN PUNTOCOMA .)


state 267

    (23) imprimir -> PRINT LPAREN funciones RPAREN PUNTOCOMA .

    VARIABLE        reduce using rule 23 (imprimir -> PRINT LPAREN funciones RPAREN PUNTOCOMA .)
    IF              reduce using rule 23 (imprimir -> PRINT LPAREN funciones RPAREN PUNTOCOMA .)
    FOR             reduce using rule 23 (imprimir -> PRINT LPAREN funciones RPAREN PUNTOCOMA .)
    WHILE           reduce using rule 23 (imprimir -> PRINT LPAREN funciones RPAREN PUNTOCOMA .)
    PREINCREMENTO   reduce using rule 23 (imprimir -> PRINT LPAREN funciones RPAREN PUNTOCOMA .)
    POSTINCREMENTO  reduce using rule 23 (imprimir -> PRINT LPAREN funciones RPAREN PUNTOCOMA .)
    PREDECREMENTO   reduce using rule 23 (imprimir -> PRINT LPAREN funciones RPAREN PUNTOCOMA .)
    POSTDECREMENTO  reduce using rule 23 (imprimir -> PRINT LPAREN funciones RPAREN PUNTOCOMA .)
    ECHO            reduce using rule 23 (imprimir -> PRINT LPAREN funciones RPAREN PUNTOCOMA .)
    PRINT           reduce using rule 23 (imprimir -> PRINT LPAREN funciones RPAREN PUNTOCOMA .)
    LPAREN          reduce using rule 23 (imprimir -> PRINT LPAREN funciones RPAREN PUNTOCOMA .)
    $end            reduce using rule 23 (imprimir -> PRINT LPAREN funciones RPAREN PUNTOCOMA .)
    R_LLAVE         reduce using rule 23 (imprimir -> PRINT LPAREN funciones RPAREN PUNTOCOMA .)


state 268

    (26) if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias . R_LLAVE
    (27) if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias . R_LLAVE else
    (28) if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias . R_LLAVE elseif else
    (1) sentencias -> sentencias . asignacion
    (2) sentencias -> sentencias . metodos
    (3) sentencias -> sentencias . if
    (4) sentencias -> sentencias . for
    (5) sentencias -> sentencias . while
    (32) asignacion -> . VARIABLE IGUAL expresion PUNTOCOMA
    (33) asignacion -> . VARIABLE IGUAL factor PUNTOCOMA
    (34) asignacion -> . incremento_decremento PUNTOCOMA
    (35) asignacion -> . VARIABLE IGUAL funciones PUNTOCOMA
    (18) metodos -> . imprimir
    (19) metodos -> . object
    (26) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (27) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else
    (28) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else
    (11) for -> . FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE
    (12) while -> . WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (13) incremento_decremento -> . PREINCREMENTO
    (14) incremento_decremento -> . POSTINCREMENTO
    (15) incremento_decremento -> . PREDECREMENTO
    (16) incremento_decremento -> . POSTDECREMENTO
    (20) imprimir -> . ECHO factor PUNTOCOMA
    (21) imprimir -> . ECHO funciones PUNTOCOMA
    (22) imprimir -> . PRINT LPAREN factor RPAREN PUNTOCOMA
    (23) imprimir -> . PRINT LPAREN funciones RPAREN PUNTOCOMA
    (24) imprimir -> . PRINT factor
    (25) imprimir -> . PRINT funciones
    (17) object -> . LPAREN OBJECT RPAREN term

    R_LLAVE         shift and go to state 299
    VARIABLE        shift and go to state 7
    IF              shift and go to state 11
    FOR             shift and go to state 13
    WHILE           shift and go to state 14
    PREINCREMENTO   shift and go to state 15
    POSTINCREMENTO  shift and go to state 16
    PREDECREMENTO   shift and go to state 17
    POSTDECREMENTO  shift and go to state 18
    ECHO            shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 12

    asignacion                     shift and go to state 21
    metodos                        shift and go to state 22
    if                             shift and go to state 23
    for                            shift and go to state 24
    while                          shift and go to state 25
    incremento_decremento          shift and go to state 8
    imprimir                       shift and go to state 9
    object                         shift and go to state 10

state 269

    (46) comparacion -> NO LPAREN condiciones RPAREN .

    RPAREN          reduce using rule 46 (comparacion -> NO LPAREN condiciones RPAREN .)
    XOR             reduce using rule 46 (comparacion -> NO LPAREN condiciones RPAREN .)
    ANDAND          reduce using rule 46 (comparacion -> NO LPAREN condiciones RPAREN .)
    AND             reduce using rule 46 (comparacion -> NO LPAREN condiciones RPAREN .)
    OR              reduce using rule 46 (comparacion -> NO LPAREN condiciones RPAREN .)
    OROR            reduce using rule 46 (comparacion -> NO LPAREN condiciones RPAREN .)
    PUNTOCOMA       reduce using rule 46 (comparacion -> NO LPAREN condiciones RPAREN .)


state 270

    (11) for -> FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento . RPAREN L_LLAVE sentencias R_LLAVE

    RPAREN          shift and go to state 300


state 271

    (12) while -> WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias . R_LLAVE
    (1) sentencias -> sentencias . asignacion
    (2) sentencias -> sentencias . metodos
    (3) sentencias -> sentencias . if
    (4) sentencias -> sentencias . for
    (5) sentencias -> sentencias . while
    (32) asignacion -> . VARIABLE IGUAL expresion PUNTOCOMA
    (33) asignacion -> . VARIABLE IGUAL factor PUNTOCOMA
    (34) asignacion -> . incremento_decremento PUNTOCOMA
    (35) asignacion -> . VARIABLE IGUAL funciones PUNTOCOMA
    (18) metodos -> . imprimir
    (19) metodos -> . object
    (26) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (27) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else
    (28) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else
    (11) for -> . FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE
    (12) while -> . WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (13) incremento_decremento -> . PREINCREMENTO
    (14) incremento_decremento -> . POSTINCREMENTO
    (15) incremento_decremento -> . PREDECREMENTO
    (16) incremento_decremento -> . POSTDECREMENTO
    (20) imprimir -> . ECHO factor PUNTOCOMA
    (21) imprimir -> . ECHO funciones PUNTOCOMA
    (22) imprimir -> . PRINT LPAREN factor RPAREN PUNTOCOMA
    (23) imprimir -> . PRINT LPAREN funciones RPAREN PUNTOCOMA
    (24) imprimir -> . PRINT factor
    (25) imprimir -> . PRINT funciones
    (17) object -> . LPAREN OBJECT RPAREN term

    R_LLAVE         shift and go to state 301
    VARIABLE        shift and go to state 7
    IF              shift and go to state 11
    FOR             shift and go to state 13
    WHILE           shift and go to state 14
    PREINCREMENTO   shift and go to state 15
    POSTINCREMENTO  shift and go to state 16
    PREDECREMENTO   shift and go to state 17
    POSTDECREMENTO  shift and go to state 18
    ECHO            shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 12

    asignacion                     shift and go to state 21
    metodos                        shift and go to state 22
    if                             shift and go to state 23
    for                            shift and go to state 24
    while                          shift and go to state 25
    incremento_decremento          shift and go to state 8
    imprimir                       shift and go to state 9
    object                         shift and go to state 10

state 272

    (146) next -> NEXT LPAREN VARIABLE . RPAREN

    RPAREN          shift and go to state 302


state 273

    (124) funciones -> POTENCIA LPAREN NUMEROS COMA NUMEROS . RPAREN

    RPAREN          shift and go to state 303


state 274

    (136) trim -> TRIM LPAREN VARIABLE COMA CADENADOBLE . RPAREN

    RPAREN          shift and go to state 304


state 275

    (137) trim -> TRIM LPAREN VARIABLE COMA CADENASIMPLE . RPAREN

    RPAREN          shift and go to state 305


state 276

    (138) substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS . COMA NUMEROS RPAREN
    (140) substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS . RPAREN

    COMA            shift and go to state 306
    RPAREN          shift and go to state 307


state 277

    (139) substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS . COMA NUMEROS RPAREN
    (141) substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS . RPAREN

    COMA            shift and go to state 308
    RPAREN          shift and go to state 309


state 278

    (142) wordwrap -> WORDWRAP LPAREN VARIABLE COMA NUMEROS . COMA CADENADOBLE COMA BOOLEAN RPAREN

    COMA            shift and go to state 310


state 279

    (70) fopen -> FOPEN LPAREN CADENADOBLE COMA CADENADOBLE . RPAREN

    RPAREN          shift and go to state 311


state 280

    (71) fopen -> FOPEN LPAREN CADENASIMPLE COMA CADENADOBLE . RPAREN

    RPAREN          shift and go to state 312


state 281

    (74) fgets -> FGETS LPAREN VARIABLE COMA NUMEROS . RPAREN

    RPAREN          shift and go to state 313


state 282

    (76) nl2br -> NL2BR LPAREN CADENADOBLE COMA VARIABLE . RPAREN

    RPAREN          shift and go to state 314


state 283

    (77) nl2br -> NL2BR LPAREN CADENADOBLE COMA BOOLEAN . RPAREN

    RPAREN          shift and go to state 315


state 284

    (80) nl2br -> NL2BR LPAREN VARIABLE COMA VARIABLE . RPAREN

    RPAREN          shift and go to state 316


state 285

    (79) nl2br -> NL2BR LPAREN VARIABLE COMA BOOLEAN . RPAREN

    RPAREN          shift and go to state 317


state 286

    (144) sort -> SORT LPAREN VARIABLE COMA FLAG . RPAREN

    RPAREN          shift and go to state 318


state 287

    (109) number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS . RPAREN
    (110) number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS . COMA CADENASIMPLE COMA CADENASIMPLE RPAREN

    RPAREN          shift and go to state 320
    COMA            shift and go to state 319


state 288

    (90) floor -> FLOOR LPAREN DECIMAL PRODUCTO NUMEROS . RPAREN

    RPAREN          shift and go to state 321


state 289

    (89) floor -> FLOOR LPAREN MENOS DECIMAL RPAREN .

    PUNTOCOMA       reduce using rule 89 (floor -> FLOOR LPAREN MENOS DECIMAL RPAREN .)
    VARIABLE        reduce using rule 89 (floor -> FLOOR LPAREN MENOS DECIMAL RPAREN .)
    IF              reduce using rule 89 (floor -> FLOOR LPAREN MENOS DECIMAL RPAREN .)
    FOR             reduce using rule 89 (floor -> FLOOR LPAREN MENOS DECIMAL RPAREN .)
    WHILE           reduce using rule 89 (floor -> FLOOR LPAREN MENOS DECIMAL RPAREN .)
    PREINCREMENTO   reduce using rule 89 (floor -> FLOOR LPAREN MENOS DECIMAL RPAREN .)
    POSTINCREMENTO  reduce using rule 89 (floor -> FLOOR LPAREN MENOS DECIMAL RPAREN .)
    PREDECREMENTO   reduce using rule 89 (floor -> FLOOR LPAREN MENOS DECIMAL RPAREN .)
    POSTDECREMENTO  reduce using rule 89 (floor -> FLOOR LPAREN MENOS DECIMAL RPAREN .)
    ECHO            reduce using rule 89 (floor -> FLOOR LPAREN MENOS DECIMAL RPAREN .)
    PRINT           reduce using rule 89 (floor -> FLOOR LPAREN MENOS DECIMAL RPAREN .)
    LPAREN          reduce using rule 89 (floor -> FLOOR LPAREN MENOS DECIMAL RPAREN .)
    $end            reduce using rule 89 (floor -> FLOOR LPAREN MENOS DECIMAL RPAREN .)
    R_LLAVE         reduce using rule 89 (floor -> FLOOR LPAREN MENOS DECIMAL RPAREN .)
    RPAREN          reduce using rule 89 (floor -> FLOOR LPAREN MENOS DECIMAL RPAREN .)


state 290

    (84) round -> ROUND LPAREN DECIMAL COMA NUMEROS . RPAREN

    RPAREN          shift and go to state 322


state 291

    (85) round -> ROUND LPAREN DECIMAL COMA MENOS . NUMEROS RPAREN

    NUMEROS         shift and go to state 323


state 292

    (83) round -> ROUND LPAREN MENOS DECIMAL RPAREN .

    PUNTOCOMA       reduce using rule 83 (round -> ROUND LPAREN MENOS DECIMAL RPAREN .)
    VARIABLE        reduce using rule 83 (round -> ROUND LPAREN MENOS DECIMAL RPAREN .)
    IF              reduce using rule 83 (round -> ROUND LPAREN MENOS DECIMAL RPAREN .)
    FOR             reduce using rule 83 (round -> ROUND LPAREN MENOS DECIMAL RPAREN .)
    WHILE           reduce using rule 83 (round -> ROUND LPAREN MENOS DECIMAL RPAREN .)
    PREINCREMENTO   reduce using rule 83 (round -> ROUND LPAREN MENOS DECIMAL RPAREN .)
    POSTINCREMENTO  reduce using rule 83 (round -> ROUND LPAREN MENOS DECIMAL RPAREN .)
    PREDECREMENTO   reduce using rule 83 (round -> ROUND LPAREN MENOS DECIMAL RPAREN .)
    POSTDECREMENTO  reduce using rule 83 (round -> ROUND LPAREN MENOS DECIMAL RPAREN .)
    ECHO            reduce using rule 83 (round -> ROUND LPAREN MENOS DECIMAL RPAREN .)
    PRINT           reduce using rule 83 (round -> ROUND LPAREN MENOS DECIMAL RPAREN .)
    LPAREN          reduce using rule 83 (round -> ROUND LPAREN MENOS DECIMAL RPAREN .)
    $end            reduce using rule 83 (round -> ROUND LPAREN MENOS DECIMAL RPAREN .)
    R_LLAVE         reduce using rule 83 (round -> ROUND LPAREN MENOS DECIMAL RPAREN .)
    RPAREN          reduce using rule 83 (round -> ROUND LPAREN MENOS DECIMAL RPAREN .)


state 293

    (86) round -> ROUND LPAREN MENOS DECIMAL COMA . MENOS NUMEROS RPAREN
    (87) round -> ROUND LPAREN MENOS DECIMAL COMA . NUMEROS RPAREN

    MENOS           shift and go to state 324
    NUMEROS         shift and go to state 325


state 294

    (92) ceil -> CEIL LPAREN MENOS DECIMAL RPAREN .

    PUNTOCOMA       reduce using rule 92 (ceil -> CEIL LPAREN MENOS DECIMAL RPAREN .)
    VARIABLE        reduce using rule 92 (ceil -> CEIL LPAREN MENOS DECIMAL RPAREN .)
    IF              reduce using rule 92 (ceil -> CEIL LPAREN MENOS DECIMAL RPAREN .)
    FOR             reduce using rule 92 (ceil -> CEIL LPAREN MENOS DECIMAL RPAREN .)
    WHILE           reduce using rule 92 (ceil -> CEIL LPAREN MENOS DECIMAL RPAREN .)
    PREINCREMENTO   reduce using rule 92 (ceil -> CEIL LPAREN MENOS DECIMAL RPAREN .)
    POSTINCREMENTO  reduce using rule 92 (ceil -> CEIL LPAREN MENOS DECIMAL RPAREN .)
    PREDECREMENTO   reduce using rule 92 (ceil -> CEIL LPAREN MENOS DECIMAL RPAREN .)
    POSTDECREMENTO  reduce using rule 92 (ceil -> CEIL LPAREN MENOS DECIMAL RPAREN .)
    ECHO            reduce using rule 92 (ceil -> CEIL LPAREN MENOS DECIMAL RPAREN .)
    PRINT           reduce using rule 92 (ceil -> CEIL LPAREN MENOS DECIMAL RPAREN .)
    LPAREN          reduce using rule 92 (ceil -> CEIL LPAREN MENOS DECIMAL RPAREN .)
    $end            reduce using rule 92 (ceil -> CEIL LPAREN MENOS DECIMAL RPAREN .)
    R_LLAVE         reduce using rule 92 (ceil -> CEIL LPAREN MENOS DECIMAL RPAREN .)
    RPAREN          reduce using rule 92 (ceil -> CEIL LPAREN MENOS DECIMAL RPAREN .)


state 295

    (95) ceil -> CEIL LPAREN VARIABLE PRODUCTO NUMEROS . RPAREN

    RPAREN          shift and go to state 326


state 296

    (122) rand -> RAND LPAREN NUMEROS COMA NUMEROS . RPAREN

    RPAREN          shift and go to state 327


state 297

    (96) fmod -> FMOD LPAREN VARIABLE COMA VARIABLE . RPAREN

    RPAREN          shift and go to state 328


state 298

    (150) is_a -> IS_A LPAREN VARIABLE COMA CADENADOBLE . RPAREN

    RPAREN          shift and go to state 329


state 299

    (26) if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .
    (27) if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE . else
    (28) if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE . elseif else
    (31) else -> . ELSE L_LLAVE sentencias R_LLAVE
    (29) elseif -> . ELSEIF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (30) elseif -> . elseif ELSEIF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE

    VARIABLE        reduce using rule 26 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    IF              reduce using rule 26 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    FOR             reduce using rule 26 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    WHILE           reduce using rule 26 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    PREINCREMENTO   reduce using rule 26 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    POSTINCREMENTO  reduce using rule 26 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    PREDECREMENTO   reduce using rule 26 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    POSTDECREMENTO  reduce using rule 26 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    ECHO            reduce using rule 26 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    PRINT           reduce using rule 26 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    LPAREN          reduce using rule 26 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    $end            reduce using rule 26 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    R_LLAVE         reduce using rule 26 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    ELSE            shift and go to state 332
    ELSEIF          shift and go to state 333

    else                           shift and go to state 330
    elseif                         shift and go to state 331

state 300

    (11) for -> FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN . L_LLAVE sentencias R_LLAVE

    L_LLAVE         shift and go to state 334


state 301

    (12) while -> WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .

    VARIABLE        reduce using rule 12 (while -> WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    IF              reduce using rule 12 (while -> WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    FOR             reduce using rule 12 (while -> WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    WHILE           reduce using rule 12 (while -> WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    PREINCREMENTO   reduce using rule 12 (while -> WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    POSTINCREMENTO  reduce using rule 12 (while -> WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    PREDECREMENTO   reduce using rule 12 (while -> WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    POSTDECREMENTO  reduce using rule 12 (while -> WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    ECHO            reduce using rule 12 (while -> WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    PRINT           reduce using rule 12 (while -> WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    LPAREN          reduce using rule 12 (while -> WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    $end            reduce using rule 12 (while -> WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    R_LLAVE         reduce using rule 12 (while -> WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)


state 302

    (146) next -> NEXT LPAREN VARIABLE RPAREN .

    PUNTOCOMA       reduce using rule 146 (next -> NEXT LPAREN VARIABLE RPAREN .)
    VARIABLE        reduce using rule 146 (next -> NEXT LPAREN VARIABLE RPAREN .)
    IF              reduce using rule 146 (next -> NEXT LPAREN VARIABLE RPAREN .)
    FOR             reduce using rule 146 (next -> NEXT LPAREN VARIABLE RPAREN .)
    WHILE           reduce using rule 146 (next -> NEXT LPAREN VARIABLE RPAREN .)
    PREINCREMENTO   reduce using rule 146 (next -> NEXT LPAREN VARIABLE RPAREN .)
    POSTINCREMENTO  reduce using rule 146 (next -> NEXT LPAREN VARIABLE RPAREN .)
    PREDECREMENTO   reduce using rule 146 (next -> NEXT LPAREN VARIABLE RPAREN .)
    POSTDECREMENTO  reduce using rule 146 (next -> NEXT LPAREN VARIABLE RPAREN .)
    ECHO            reduce using rule 146 (next -> NEXT LPAREN VARIABLE RPAREN .)
    PRINT           reduce using rule 146 (next -> NEXT LPAREN VARIABLE RPAREN .)
    LPAREN          reduce using rule 146 (next -> NEXT LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 146 (next -> NEXT LPAREN VARIABLE RPAREN .)
    R_LLAVE         reduce using rule 146 (next -> NEXT LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 146 (next -> NEXT LPAREN VARIABLE RPAREN .)


state 303

    (124) funciones -> POTENCIA LPAREN NUMEROS COMA NUMEROS RPAREN .

    PUNTOCOMA       reduce using rule 124 (funciones -> POTENCIA LPAREN NUMEROS COMA NUMEROS RPAREN .)
    VARIABLE        reduce using rule 124 (funciones -> POTENCIA LPAREN NUMEROS COMA NUMEROS RPAREN .)
    IF              reduce using rule 124 (funciones -> POTENCIA LPAREN NUMEROS COMA NUMEROS RPAREN .)
    FOR             reduce using rule 124 (funciones -> POTENCIA LPAREN NUMEROS COMA NUMEROS RPAREN .)
    WHILE           reduce using rule 124 (funciones -> POTENCIA LPAREN NUMEROS COMA NUMEROS RPAREN .)
    PREINCREMENTO   reduce using rule 124 (funciones -> POTENCIA LPAREN NUMEROS COMA NUMEROS RPAREN .)
    POSTINCREMENTO  reduce using rule 124 (funciones -> POTENCIA LPAREN NUMEROS COMA NUMEROS RPAREN .)
    PREDECREMENTO   reduce using rule 124 (funciones -> POTENCIA LPAREN NUMEROS COMA NUMEROS RPAREN .)
    POSTDECREMENTO  reduce using rule 124 (funciones -> POTENCIA LPAREN NUMEROS COMA NUMEROS RPAREN .)
    ECHO            reduce using rule 124 (funciones -> POTENCIA LPAREN NUMEROS COMA NUMEROS RPAREN .)
    PRINT           reduce using rule 124 (funciones -> POTENCIA LPAREN NUMEROS COMA NUMEROS RPAREN .)
    LPAREN          reduce using rule 124 (funciones -> POTENCIA LPAREN NUMEROS COMA NUMEROS RPAREN .)
    $end            reduce using rule 124 (funciones -> POTENCIA LPAREN NUMEROS COMA NUMEROS RPAREN .)
    R_LLAVE         reduce using rule 124 (funciones -> POTENCIA LPAREN NUMEROS COMA NUMEROS RPAREN .)
    RPAREN          reduce using rule 124 (funciones -> POTENCIA LPAREN NUMEROS COMA NUMEROS RPAREN .)


state 304

    (136) trim -> TRIM LPAREN VARIABLE COMA CADENADOBLE RPAREN .

    PUNTOCOMA       reduce using rule 136 (trim -> TRIM LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    VARIABLE        reduce using rule 136 (trim -> TRIM LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    IF              reduce using rule 136 (trim -> TRIM LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    FOR             reduce using rule 136 (trim -> TRIM LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    WHILE           reduce using rule 136 (trim -> TRIM LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    PREINCREMENTO   reduce using rule 136 (trim -> TRIM LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    POSTINCREMENTO  reduce using rule 136 (trim -> TRIM LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    PREDECREMENTO   reduce using rule 136 (trim -> TRIM LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    POSTDECREMENTO  reduce using rule 136 (trim -> TRIM LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    ECHO            reduce using rule 136 (trim -> TRIM LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    PRINT           reduce using rule 136 (trim -> TRIM LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    LPAREN          reduce using rule 136 (trim -> TRIM LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    $end            reduce using rule 136 (trim -> TRIM LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    R_LLAVE         reduce using rule 136 (trim -> TRIM LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    RPAREN          reduce using rule 136 (trim -> TRIM LPAREN VARIABLE COMA CADENADOBLE RPAREN .)


state 305

    (137) trim -> TRIM LPAREN VARIABLE COMA CADENASIMPLE RPAREN .

    PUNTOCOMA       reduce using rule 137 (trim -> TRIM LPAREN VARIABLE COMA CADENASIMPLE RPAREN .)
    VARIABLE        reduce using rule 137 (trim -> TRIM LPAREN VARIABLE COMA CADENASIMPLE RPAREN .)
    IF              reduce using rule 137 (trim -> TRIM LPAREN VARIABLE COMA CADENASIMPLE RPAREN .)
    FOR             reduce using rule 137 (trim -> TRIM LPAREN VARIABLE COMA CADENASIMPLE RPAREN .)
    WHILE           reduce using rule 137 (trim -> TRIM LPAREN VARIABLE COMA CADENASIMPLE RPAREN .)
    PREINCREMENTO   reduce using rule 137 (trim -> TRIM LPAREN VARIABLE COMA CADENASIMPLE RPAREN .)
    POSTINCREMENTO  reduce using rule 137 (trim -> TRIM LPAREN VARIABLE COMA CADENASIMPLE RPAREN .)
    PREDECREMENTO   reduce using rule 137 (trim -> TRIM LPAREN VARIABLE COMA CADENASIMPLE RPAREN .)
    POSTDECREMENTO  reduce using rule 137 (trim -> TRIM LPAREN VARIABLE COMA CADENASIMPLE RPAREN .)
    ECHO            reduce using rule 137 (trim -> TRIM LPAREN VARIABLE COMA CADENASIMPLE RPAREN .)
    PRINT           reduce using rule 137 (trim -> TRIM LPAREN VARIABLE COMA CADENASIMPLE RPAREN .)
    LPAREN          reduce using rule 137 (trim -> TRIM LPAREN VARIABLE COMA CADENASIMPLE RPAREN .)
    $end            reduce using rule 137 (trim -> TRIM LPAREN VARIABLE COMA CADENASIMPLE RPAREN .)
    R_LLAVE         reduce using rule 137 (trim -> TRIM LPAREN VARIABLE COMA CADENASIMPLE RPAREN .)
    RPAREN          reduce using rule 137 (trim -> TRIM LPAREN VARIABLE COMA CADENASIMPLE RPAREN .)


state 306

    (138) substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS COMA . NUMEROS RPAREN

    NUMEROS         shift and go to state 335


state 307

    (140) substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS RPAREN .

    PUNTOCOMA       reduce using rule 140 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS RPAREN .)
    VARIABLE        reduce using rule 140 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS RPAREN .)
    IF              reduce using rule 140 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS RPAREN .)
    FOR             reduce using rule 140 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS RPAREN .)
    WHILE           reduce using rule 140 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS RPAREN .)
    PREINCREMENTO   reduce using rule 140 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS RPAREN .)
    POSTINCREMENTO  reduce using rule 140 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS RPAREN .)
    PREDECREMENTO   reduce using rule 140 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS RPAREN .)
    POSTDECREMENTO  reduce using rule 140 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS RPAREN .)
    ECHO            reduce using rule 140 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS RPAREN .)
    PRINT           reduce using rule 140 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS RPAREN .)
    LPAREN          reduce using rule 140 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS RPAREN .)
    $end            reduce using rule 140 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS RPAREN .)
    R_LLAVE         reduce using rule 140 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS RPAREN .)
    RPAREN          reduce using rule 140 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS RPAREN .)


state 308

    (139) substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS COMA . NUMEROS RPAREN

    NUMEROS         shift and go to state 336


state 309

    (141) substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS RPAREN .

    PUNTOCOMA       reduce using rule 141 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS RPAREN .)
    VARIABLE        reduce using rule 141 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS RPAREN .)
    IF              reduce using rule 141 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS RPAREN .)
    FOR             reduce using rule 141 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS RPAREN .)
    WHILE           reduce using rule 141 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS RPAREN .)
    PREINCREMENTO   reduce using rule 141 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS RPAREN .)
    POSTINCREMENTO  reduce using rule 141 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS RPAREN .)
    PREDECREMENTO   reduce using rule 141 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS RPAREN .)
    POSTDECREMENTO  reduce using rule 141 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS RPAREN .)
    ECHO            reduce using rule 141 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS RPAREN .)
    PRINT           reduce using rule 141 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS RPAREN .)
    LPAREN          reduce using rule 141 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS RPAREN .)
    $end            reduce using rule 141 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS RPAREN .)
    R_LLAVE         reduce using rule 141 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS RPAREN .)
    RPAREN          reduce using rule 141 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS RPAREN .)


state 310

    (142) wordwrap -> WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA . CADENADOBLE COMA BOOLEAN RPAREN

    CADENADOBLE     shift and go to state 337


state 311

    (70) fopen -> FOPEN LPAREN CADENADOBLE COMA CADENADOBLE RPAREN .

    PUNTOCOMA       reduce using rule 70 (fopen -> FOPEN LPAREN CADENADOBLE COMA CADENADOBLE RPAREN .)
    VARIABLE        reduce using rule 70 (fopen -> FOPEN LPAREN CADENADOBLE COMA CADENADOBLE RPAREN .)
    IF              reduce using rule 70 (fopen -> FOPEN LPAREN CADENADOBLE COMA CADENADOBLE RPAREN .)
    FOR             reduce using rule 70 (fopen -> FOPEN LPAREN CADENADOBLE COMA CADENADOBLE RPAREN .)
    WHILE           reduce using rule 70 (fopen -> FOPEN LPAREN CADENADOBLE COMA CADENADOBLE RPAREN .)
    PREINCREMENTO   reduce using rule 70 (fopen -> FOPEN LPAREN CADENADOBLE COMA CADENADOBLE RPAREN .)
    POSTINCREMENTO  reduce using rule 70 (fopen -> FOPEN LPAREN CADENADOBLE COMA CADENADOBLE RPAREN .)
    PREDECREMENTO   reduce using rule 70 (fopen -> FOPEN LPAREN CADENADOBLE COMA CADENADOBLE RPAREN .)
    POSTDECREMENTO  reduce using rule 70 (fopen -> FOPEN LPAREN CADENADOBLE COMA CADENADOBLE RPAREN .)
    ECHO            reduce using rule 70 (fopen -> FOPEN LPAREN CADENADOBLE COMA CADENADOBLE RPAREN .)
    PRINT           reduce using rule 70 (fopen -> FOPEN LPAREN CADENADOBLE COMA CADENADOBLE RPAREN .)
    LPAREN          reduce using rule 70 (fopen -> FOPEN LPAREN CADENADOBLE COMA CADENADOBLE RPAREN .)
    $end            reduce using rule 70 (fopen -> FOPEN LPAREN CADENADOBLE COMA CADENADOBLE RPAREN .)
    R_LLAVE         reduce using rule 70 (fopen -> FOPEN LPAREN CADENADOBLE COMA CADENADOBLE RPAREN .)
    RPAREN          reduce using rule 70 (fopen -> FOPEN LPAREN CADENADOBLE COMA CADENADOBLE RPAREN .)


state 312

    (71) fopen -> FOPEN LPAREN CADENASIMPLE COMA CADENADOBLE RPAREN .

    PUNTOCOMA       reduce using rule 71 (fopen -> FOPEN LPAREN CADENASIMPLE COMA CADENADOBLE RPAREN .)
    VARIABLE        reduce using rule 71 (fopen -> FOPEN LPAREN CADENASIMPLE COMA CADENADOBLE RPAREN .)
    IF              reduce using rule 71 (fopen -> FOPEN LPAREN CADENASIMPLE COMA CADENADOBLE RPAREN .)
    FOR             reduce using rule 71 (fopen -> FOPEN LPAREN CADENASIMPLE COMA CADENADOBLE RPAREN .)
    WHILE           reduce using rule 71 (fopen -> FOPEN LPAREN CADENASIMPLE COMA CADENADOBLE RPAREN .)
    PREINCREMENTO   reduce using rule 71 (fopen -> FOPEN LPAREN CADENASIMPLE COMA CADENADOBLE RPAREN .)
    POSTINCREMENTO  reduce using rule 71 (fopen -> FOPEN LPAREN CADENASIMPLE COMA CADENADOBLE RPAREN .)
    PREDECREMENTO   reduce using rule 71 (fopen -> FOPEN LPAREN CADENASIMPLE COMA CADENADOBLE RPAREN .)
    POSTDECREMENTO  reduce using rule 71 (fopen -> FOPEN LPAREN CADENASIMPLE COMA CADENADOBLE RPAREN .)
    ECHO            reduce using rule 71 (fopen -> FOPEN LPAREN CADENASIMPLE COMA CADENADOBLE RPAREN .)
    PRINT           reduce using rule 71 (fopen -> FOPEN LPAREN CADENASIMPLE COMA CADENADOBLE RPAREN .)
    LPAREN          reduce using rule 71 (fopen -> FOPEN LPAREN CADENASIMPLE COMA CADENADOBLE RPAREN .)
    $end            reduce using rule 71 (fopen -> FOPEN LPAREN CADENASIMPLE COMA CADENADOBLE RPAREN .)
    R_LLAVE         reduce using rule 71 (fopen -> FOPEN LPAREN CADENASIMPLE COMA CADENADOBLE RPAREN .)
    RPAREN          reduce using rule 71 (fopen -> FOPEN LPAREN CADENASIMPLE COMA CADENADOBLE RPAREN .)


state 313

    (74) fgets -> FGETS LPAREN VARIABLE COMA NUMEROS RPAREN .

    PUNTOCOMA       reduce using rule 74 (fgets -> FGETS LPAREN VARIABLE COMA NUMEROS RPAREN .)
    VARIABLE        reduce using rule 74 (fgets -> FGETS LPAREN VARIABLE COMA NUMEROS RPAREN .)
    IF              reduce using rule 74 (fgets -> FGETS LPAREN VARIABLE COMA NUMEROS RPAREN .)
    FOR             reduce using rule 74 (fgets -> FGETS LPAREN VARIABLE COMA NUMEROS RPAREN .)
    WHILE           reduce using rule 74 (fgets -> FGETS LPAREN VARIABLE COMA NUMEROS RPAREN .)
    PREINCREMENTO   reduce using rule 74 (fgets -> FGETS LPAREN VARIABLE COMA NUMEROS RPAREN .)
    POSTINCREMENTO  reduce using rule 74 (fgets -> FGETS LPAREN VARIABLE COMA NUMEROS RPAREN .)
    PREDECREMENTO   reduce using rule 74 (fgets -> FGETS LPAREN VARIABLE COMA NUMEROS RPAREN .)
    POSTDECREMENTO  reduce using rule 74 (fgets -> FGETS LPAREN VARIABLE COMA NUMEROS RPAREN .)
    ECHO            reduce using rule 74 (fgets -> FGETS LPAREN VARIABLE COMA NUMEROS RPAREN .)
    PRINT           reduce using rule 74 (fgets -> FGETS LPAREN VARIABLE COMA NUMEROS RPAREN .)
    LPAREN          reduce using rule 74 (fgets -> FGETS LPAREN VARIABLE COMA NUMEROS RPAREN .)
    $end            reduce using rule 74 (fgets -> FGETS LPAREN VARIABLE COMA NUMEROS RPAREN .)
    R_LLAVE         reduce using rule 74 (fgets -> FGETS LPAREN VARIABLE COMA NUMEROS RPAREN .)
    RPAREN          reduce using rule 74 (fgets -> FGETS LPAREN VARIABLE COMA NUMEROS RPAREN .)


state 314

    (76) nl2br -> NL2BR LPAREN CADENADOBLE COMA VARIABLE RPAREN .

    PUNTOCOMA       reduce using rule 76 (nl2br -> NL2BR LPAREN CADENADOBLE COMA VARIABLE RPAREN .)
    VARIABLE        reduce using rule 76 (nl2br -> NL2BR LPAREN CADENADOBLE COMA VARIABLE RPAREN .)
    IF              reduce using rule 76 (nl2br -> NL2BR LPAREN CADENADOBLE COMA VARIABLE RPAREN .)
    FOR             reduce using rule 76 (nl2br -> NL2BR LPAREN CADENADOBLE COMA VARIABLE RPAREN .)
    WHILE           reduce using rule 76 (nl2br -> NL2BR LPAREN CADENADOBLE COMA VARIABLE RPAREN .)
    PREINCREMENTO   reduce using rule 76 (nl2br -> NL2BR LPAREN CADENADOBLE COMA VARIABLE RPAREN .)
    POSTINCREMENTO  reduce using rule 76 (nl2br -> NL2BR LPAREN CADENADOBLE COMA VARIABLE RPAREN .)
    PREDECREMENTO   reduce using rule 76 (nl2br -> NL2BR LPAREN CADENADOBLE COMA VARIABLE RPAREN .)
    POSTDECREMENTO  reduce using rule 76 (nl2br -> NL2BR LPAREN CADENADOBLE COMA VARIABLE RPAREN .)
    ECHO            reduce using rule 76 (nl2br -> NL2BR LPAREN CADENADOBLE COMA VARIABLE RPAREN .)
    PRINT           reduce using rule 76 (nl2br -> NL2BR LPAREN CADENADOBLE COMA VARIABLE RPAREN .)
    LPAREN          reduce using rule 76 (nl2br -> NL2BR LPAREN CADENADOBLE COMA VARIABLE RPAREN .)
    $end            reduce using rule 76 (nl2br -> NL2BR LPAREN CADENADOBLE COMA VARIABLE RPAREN .)
    R_LLAVE         reduce using rule 76 (nl2br -> NL2BR LPAREN CADENADOBLE COMA VARIABLE RPAREN .)
    RPAREN          reduce using rule 76 (nl2br -> NL2BR LPAREN CADENADOBLE COMA VARIABLE RPAREN .)


state 315

    (77) nl2br -> NL2BR LPAREN CADENADOBLE COMA BOOLEAN RPAREN .

    PUNTOCOMA       reduce using rule 77 (nl2br -> NL2BR LPAREN CADENADOBLE COMA BOOLEAN RPAREN .)
    VARIABLE        reduce using rule 77 (nl2br -> NL2BR LPAREN CADENADOBLE COMA BOOLEAN RPAREN .)
    IF              reduce using rule 77 (nl2br -> NL2BR LPAREN CADENADOBLE COMA BOOLEAN RPAREN .)
    FOR             reduce using rule 77 (nl2br -> NL2BR LPAREN CADENADOBLE COMA BOOLEAN RPAREN .)
    WHILE           reduce using rule 77 (nl2br -> NL2BR LPAREN CADENADOBLE COMA BOOLEAN RPAREN .)
    PREINCREMENTO   reduce using rule 77 (nl2br -> NL2BR LPAREN CADENADOBLE COMA BOOLEAN RPAREN .)
    POSTINCREMENTO  reduce using rule 77 (nl2br -> NL2BR LPAREN CADENADOBLE COMA BOOLEAN RPAREN .)
    PREDECREMENTO   reduce using rule 77 (nl2br -> NL2BR LPAREN CADENADOBLE COMA BOOLEAN RPAREN .)
    POSTDECREMENTO  reduce using rule 77 (nl2br -> NL2BR LPAREN CADENADOBLE COMA BOOLEAN RPAREN .)
    ECHO            reduce using rule 77 (nl2br -> NL2BR LPAREN CADENADOBLE COMA BOOLEAN RPAREN .)
    PRINT           reduce using rule 77 (nl2br -> NL2BR LPAREN CADENADOBLE COMA BOOLEAN RPAREN .)
    LPAREN          reduce using rule 77 (nl2br -> NL2BR LPAREN CADENADOBLE COMA BOOLEAN RPAREN .)
    $end            reduce using rule 77 (nl2br -> NL2BR LPAREN CADENADOBLE COMA BOOLEAN RPAREN .)
    R_LLAVE         reduce using rule 77 (nl2br -> NL2BR LPAREN CADENADOBLE COMA BOOLEAN RPAREN .)
    RPAREN          reduce using rule 77 (nl2br -> NL2BR LPAREN CADENADOBLE COMA BOOLEAN RPAREN .)


state 316

    (80) nl2br -> NL2BR LPAREN VARIABLE COMA VARIABLE RPAREN .

    PUNTOCOMA       reduce using rule 80 (nl2br -> NL2BR LPAREN VARIABLE COMA VARIABLE RPAREN .)
    VARIABLE        reduce using rule 80 (nl2br -> NL2BR LPAREN VARIABLE COMA VARIABLE RPAREN .)
    IF              reduce using rule 80 (nl2br -> NL2BR LPAREN VARIABLE COMA VARIABLE RPAREN .)
    FOR             reduce using rule 80 (nl2br -> NL2BR LPAREN VARIABLE COMA VARIABLE RPAREN .)
    WHILE           reduce using rule 80 (nl2br -> NL2BR LPAREN VARIABLE COMA VARIABLE RPAREN .)
    PREINCREMENTO   reduce using rule 80 (nl2br -> NL2BR LPAREN VARIABLE COMA VARIABLE RPAREN .)
    POSTINCREMENTO  reduce using rule 80 (nl2br -> NL2BR LPAREN VARIABLE COMA VARIABLE RPAREN .)
    PREDECREMENTO   reduce using rule 80 (nl2br -> NL2BR LPAREN VARIABLE COMA VARIABLE RPAREN .)
    POSTDECREMENTO  reduce using rule 80 (nl2br -> NL2BR LPAREN VARIABLE COMA VARIABLE RPAREN .)
    ECHO            reduce using rule 80 (nl2br -> NL2BR LPAREN VARIABLE COMA VARIABLE RPAREN .)
    PRINT           reduce using rule 80 (nl2br -> NL2BR LPAREN VARIABLE COMA VARIABLE RPAREN .)
    LPAREN          reduce using rule 80 (nl2br -> NL2BR LPAREN VARIABLE COMA VARIABLE RPAREN .)
    $end            reduce using rule 80 (nl2br -> NL2BR LPAREN VARIABLE COMA VARIABLE RPAREN .)
    R_LLAVE         reduce using rule 80 (nl2br -> NL2BR LPAREN VARIABLE COMA VARIABLE RPAREN .)
    RPAREN          reduce using rule 80 (nl2br -> NL2BR LPAREN VARIABLE COMA VARIABLE RPAREN .)


state 317

    (79) nl2br -> NL2BR LPAREN VARIABLE COMA BOOLEAN RPAREN .

    PUNTOCOMA       reduce using rule 79 (nl2br -> NL2BR LPAREN VARIABLE COMA BOOLEAN RPAREN .)
    VARIABLE        reduce using rule 79 (nl2br -> NL2BR LPAREN VARIABLE COMA BOOLEAN RPAREN .)
    IF              reduce using rule 79 (nl2br -> NL2BR LPAREN VARIABLE COMA BOOLEAN RPAREN .)
    FOR             reduce using rule 79 (nl2br -> NL2BR LPAREN VARIABLE COMA BOOLEAN RPAREN .)
    WHILE           reduce using rule 79 (nl2br -> NL2BR LPAREN VARIABLE COMA BOOLEAN RPAREN .)
    PREINCREMENTO   reduce using rule 79 (nl2br -> NL2BR LPAREN VARIABLE COMA BOOLEAN RPAREN .)
    POSTINCREMENTO  reduce using rule 79 (nl2br -> NL2BR LPAREN VARIABLE COMA BOOLEAN RPAREN .)
    PREDECREMENTO   reduce using rule 79 (nl2br -> NL2BR LPAREN VARIABLE COMA BOOLEAN RPAREN .)
    POSTDECREMENTO  reduce using rule 79 (nl2br -> NL2BR LPAREN VARIABLE COMA BOOLEAN RPAREN .)
    ECHO            reduce using rule 79 (nl2br -> NL2BR LPAREN VARIABLE COMA BOOLEAN RPAREN .)
    PRINT           reduce using rule 79 (nl2br -> NL2BR LPAREN VARIABLE COMA BOOLEAN RPAREN .)
    LPAREN          reduce using rule 79 (nl2br -> NL2BR LPAREN VARIABLE COMA BOOLEAN RPAREN .)
    $end            reduce using rule 79 (nl2br -> NL2BR LPAREN VARIABLE COMA BOOLEAN RPAREN .)
    R_LLAVE         reduce using rule 79 (nl2br -> NL2BR LPAREN VARIABLE COMA BOOLEAN RPAREN .)
    RPAREN          reduce using rule 79 (nl2br -> NL2BR LPAREN VARIABLE COMA BOOLEAN RPAREN .)


state 318

    (144) sort -> SORT LPAREN VARIABLE COMA FLAG RPAREN .

    PUNTOCOMA       reduce using rule 144 (sort -> SORT LPAREN VARIABLE COMA FLAG RPAREN .)
    VARIABLE        reduce using rule 144 (sort -> SORT LPAREN VARIABLE COMA FLAG RPAREN .)
    IF              reduce using rule 144 (sort -> SORT LPAREN VARIABLE COMA FLAG RPAREN .)
    FOR             reduce using rule 144 (sort -> SORT LPAREN VARIABLE COMA FLAG RPAREN .)
    WHILE           reduce using rule 144 (sort -> SORT LPAREN VARIABLE COMA FLAG RPAREN .)
    PREINCREMENTO   reduce using rule 144 (sort -> SORT LPAREN VARIABLE COMA FLAG RPAREN .)
    POSTINCREMENTO  reduce using rule 144 (sort -> SORT LPAREN VARIABLE COMA FLAG RPAREN .)
    PREDECREMENTO   reduce using rule 144 (sort -> SORT LPAREN VARIABLE COMA FLAG RPAREN .)
    POSTDECREMENTO  reduce using rule 144 (sort -> SORT LPAREN VARIABLE COMA FLAG RPAREN .)
    ECHO            reduce using rule 144 (sort -> SORT LPAREN VARIABLE COMA FLAG RPAREN .)
    PRINT           reduce using rule 144 (sort -> SORT LPAREN VARIABLE COMA FLAG RPAREN .)
    LPAREN          reduce using rule 144 (sort -> SORT LPAREN VARIABLE COMA FLAG RPAREN .)
    $end            reduce using rule 144 (sort -> SORT LPAREN VARIABLE COMA FLAG RPAREN .)
    R_LLAVE         reduce using rule 144 (sort -> SORT LPAREN VARIABLE COMA FLAG RPAREN .)
    RPAREN          reduce using rule 144 (sort -> SORT LPAREN VARIABLE COMA FLAG RPAREN .)


state 319

    (110) number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA . CADENASIMPLE COMA CADENASIMPLE RPAREN

    CADENASIMPLE    shift and go to state 338


state 320

    (109) number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS RPAREN .

    PUNTOCOMA       reduce using rule 109 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS RPAREN .)
    VARIABLE        reduce using rule 109 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS RPAREN .)
    IF              reduce using rule 109 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS RPAREN .)
    FOR             reduce using rule 109 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS RPAREN .)
    WHILE           reduce using rule 109 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS RPAREN .)
    PREINCREMENTO   reduce using rule 109 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS RPAREN .)
    POSTINCREMENTO  reduce using rule 109 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS RPAREN .)
    PREDECREMENTO   reduce using rule 109 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS RPAREN .)
    POSTDECREMENTO  reduce using rule 109 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS RPAREN .)
    ECHO            reduce using rule 109 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS RPAREN .)
    PRINT           reduce using rule 109 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS RPAREN .)
    LPAREN          reduce using rule 109 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS RPAREN .)
    $end            reduce using rule 109 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS RPAREN .)
    R_LLAVE         reduce using rule 109 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS RPAREN .)
    RPAREN          reduce using rule 109 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS RPAREN .)


state 321

    (90) floor -> FLOOR LPAREN DECIMAL PRODUCTO NUMEROS RPAREN .

    PUNTOCOMA       reduce using rule 90 (floor -> FLOOR LPAREN DECIMAL PRODUCTO NUMEROS RPAREN .)
    VARIABLE        reduce using rule 90 (floor -> FLOOR LPAREN DECIMAL PRODUCTO NUMEROS RPAREN .)
    IF              reduce using rule 90 (floor -> FLOOR LPAREN DECIMAL PRODUCTO NUMEROS RPAREN .)
    FOR             reduce using rule 90 (floor -> FLOOR LPAREN DECIMAL PRODUCTO NUMEROS RPAREN .)
    WHILE           reduce using rule 90 (floor -> FLOOR LPAREN DECIMAL PRODUCTO NUMEROS RPAREN .)
    PREINCREMENTO   reduce using rule 90 (floor -> FLOOR LPAREN DECIMAL PRODUCTO NUMEROS RPAREN .)
    POSTINCREMENTO  reduce using rule 90 (floor -> FLOOR LPAREN DECIMAL PRODUCTO NUMEROS RPAREN .)
    PREDECREMENTO   reduce using rule 90 (floor -> FLOOR LPAREN DECIMAL PRODUCTO NUMEROS RPAREN .)
    POSTDECREMENTO  reduce using rule 90 (floor -> FLOOR LPAREN DECIMAL PRODUCTO NUMEROS RPAREN .)
    ECHO            reduce using rule 90 (floor -> FLOOR LPAREN DECIMAL PRODUCTO NUMEROS RPAREN .)
    PRINT           reduce using rule 90 (floor -> FLOOR LPAREN DECIMAL PRODUCTO NUMEROS RPAREN .)
    LPAREN          reduce using rule 90 (floor -> FLOOR LPAREN DECIMAL PRODUCTO NUMEROS RPAREN .)
    $end            reduce using rule 90 (floor -> FLOOR LPAREN DECIMAL PRODUCTO NUMEROS RPAREN .)
    R_LLAVE         reduce using rule 90 (floor -> FLOOR LPAREN DECIMAL PRODUCTO NUMEROS RPAREN .)
    RPAREN          reduce using rule 90 (floor -> FLOOR LPAREN DECIMAL PRODUCTO NUMEROS RPAREN .)


state 322

    (84) round -> ROUND LPAREN DECIMAL COMA NUMEROS RPAREN .

    PUNTOCOMA       reduce using rule 84 (round -> ROUND LPAREN DECIMAL COMA NUMEROS RPAREN .)
    VARIABLE        reduce using rule 84 (round -> ROUND LPAREN DECIMAL COMA NUMEROS RPAREN .)
    IF              reduce using rule 84 (round -> ROUND LPAREN DECIMAL COMA NUMEROS RPAREN .)
    FOR             reduce using rule 84 (round -> ROUND LPAREN DECIMAL COMA NUMEROS RPAREN .)
    WHILE           reduce using rule 84 (round -> ROUND LPAREN DECIMAL COMA NUMEROS RPAREN .)
    PREINCREMENTO   reduce using rule 84 (round -> ROUND LPAREN DECIMAL COMA NUMEROS RPAREN .)
    POSTINCREMENTO  reduce using rule 84 (round -> ROUND LPAREN DECIMAL COMA NUMEROS RPAREN .)
    PREDECREMENTO   reduce using rule 84 (round -> ROUND LPAREN DECIMAL COMA NUMEROS RPAREN .)
    POSTDECREMENTO  reduce using rule 84 (round -> ROUND LPAREN DECIMAL COMA NUMEROS RPAREN .)
    ECHO            reduce using rule 84 (round -> ROUND LPAREN DECIMAL COMA NUMEROS RPAREN .)
    PRINT           reduce using rule 84 (round -> ROUND LPAREN DECIMAL COMA NUMEROS RPAREN .)
    LPAREN          reduce using rule 84 (round -> ROUND LPAREN DECIMAL COMA NUMEROS RPAREN .)
    $end            reduce using rule 84 (round -> ROUND LPAREN DECIMAL COMA NUMEROS RPAREN .)
    R_LLAVE         reduce using rule 84 (round -> ROUND LPAREN DECIMAL COMA NUMEROS RPAREN .)
    RPAREN          reduce using rule 84 (round -> ROUND LPAREN DECIMAL COMA NUMEROS RPAREN .)


state 323

    (85) round -> ROUND LPAREN DECIMAL COMA MENOS NUMEROS . RPAREN

    RPAREN          shift and go to state 339


state 324

    (86) round -> ROUND LPAREN MENOS DECIMAL COMA MENOS . NUMEROS RPAREN

    NUMEROS         shift and go to state 340


state 325

    (87) round -> ROUND LPAREN MENOS DECIMAL COMA NUMEROS . RPAREN

    RPAREN          shift and go to state 341


state 326

    (95) ceil -> CEIL LPAREN VARIABLE PRODUCTO NUMEROS RPAREN .

    PUNTOCOMA       reduce using rule 95 (ceil -> CEIL LPAREN VARIABLE PRODUCTO NUMEROS RPAREN .)
    VARIABLE        reduce using rule 95 (ceil -> CEIL LPAREN VARIABLE PRODUCTO NUMEROS RPAREN .)
    IF              reduce using rule 95 (ceil -> CEIL LPAREN VARIABLE PRODUCTO NUMEROS RPAREN .)
    FOR             reduce using rule 95 (ceil -> CEIL LPAREN VARIABLE PRODUCTO NUMEROS RPAREN .)
    WHILE           reduce using rule 95 (ceil -> CEIL LPAREN VARIABLE PRODUCTO NUMEROS RPAREN .)
    PREINCREMENTO   reduce using rule 95 (ceil -> CEIL LPAREN VARIABLE PRODUCTO NUMEROS RPAREN .)
    POSTINCREMENTO  reduce using rule 95 (ceil -> CEIL LPAREN VARIABLE PRODUCTO NUMEROS RPAREN .)
    PREDECREMENTO   reduce using rule 95 (ceil -> CEIL LPAREN VARIABLE PRODUCTO NUMEROS RPAREN .)
    POSTDECREMENTO  reduce using rule 95 (ceil -> CEIL LPAREN VARIABLE PRODUCTO NUMEROS RPAREN .)
    ECHO            reduce using rule 95 (ceil -> CEIL LPAREN VARIABLE PRODUCTO NUMEROS RPAREN .)
    PRINT           reduce using rule 95 (ceil -> CEIL LPAREN VARIABLE PRODUCTO NUMEROS RPAREN .)
    LPAREN          reduce using rule 95 (ceil -> CEIL LPAREN VARIABLE PRODUCTO NUMEROS RPAREN .)
    $end            reduce using rule 95 (ceil -> CEIL LPAREN VARIABLE PRODUCTO NUMEROS RPAREN .)
    R_LLAVE         reduce using rule 95 (ceil -> CEIL LPAREN VARIABLE PRODUCTO NUMEROS RPAREN .)
    RPAREN          reduce using rule 95 (ceil -> CEIL LPAREN VARIABLE PRODUCTO NUMEROS RPAREN .)


state 327

    (122) rand -> RAND LPAREN NUMEROS COMA NUMEROS RPAREN .

    PUNTOCOMA       reduce using rule 122 (rand -> RAND LPAREN NUMEROS COMA NUMEROS RPAREN .)
    VARIABLE        reduce using rule 122 (rand -> RAND LPAREN NUMEROS COMA NUMEROS RPAREN .)
    IF              reduce using rule 122 (rand -> RAND LPAREN NUMEROS COMA NUMEROS RPAREN .)
    FOR             reduce using rule 122 (rand -> RAND LPAREN NUMEROS COMA NUMEROS RPAREN .)
    WHILE           reduce using rule 122 (rand -> RAND LPAREN NUMEROS COMA NUMEROS RPAREN .)
    PREINCREMENTO   reduce using rule 122 (rand -> RAND LPAREN NUMEROS COMA NUMEROS RPAREN .)
    POSTINCREMENTO  reduce using rule 122 (rand -> RAND LPAREN NUMEROS COMA NUMEROS RPAREN .)
    PREDECREMENTO   reduce using rule 122 (rand -> RAND LPAREN NUMEROS COMA NUMEROS RPAREN .)
    POSTDECREMENTO  reduce using rule 122 (rand -> RAND LPAREN NUMEROS COMA NUMEROS RPAREN .)
    ECHO            reduce using rule 122 (rand -> RAND LPAREN NUMEROS COMA NUMEROS RPAREN .)
    PRINT           reduce using rule 122 (rand -> RAND LPAREN NUMEROS COMA NUMEROS RPAREN .)
    LPAREN          reduce using rule 122 (rand -> RAND LPAREN NUMEROS COMA NUMEROS RPAREN .)
    $end            reduce using rule 122 (rand -> RAND LPAREN NUMEROS COMA NUMEROS RPAREN .)
    R_LLAVE         reduce using rule 122 (rand -> RAND LPAREN NUMEROS COMA NUMEROS RPAREN .)
    RPAREN          reduce using rule 122 (rand -> RAND LPAREN NUMEROS COMA NUMEROS RPAREN .)


state 328

    (96) fmod -> FMOD LPAREN VARIABLE COMA VARIABLE RPAREN .

    PUNTOCOMA       reduce using rule 96 (fmod -> FMOD LPAREN VARIABLE COMA VARIABLE RPAREN .)
    VARIABLE        reduce using rule 96 (fmod -> FMOD LPAREN VARIABLE COMA VARIABLE RPAREN .)
    IF              reduce using rule 96 (fmod -> FMOD LPAREN VARIABLE COMA VARIABLE RPAREN .)
    FOR             reduce using rule 96 (fmod -> FMOD LPAREN VARIABLE COMA VARIABLE RPAREN .)
    WHILE           reduce using rule 96 (fmod -> FMOD LPAREN VARIABLE COMA VARIABLE RPAREN .)
    PREINCREMENTO   reduce using rule 96 (fmod -> FMOD LPAREN VARIABLE COMA VARIABLE RPAREN .)
    POSTINCREMENTO  reduce using rule 96 (fmod -> FMOD LPAREN VARIABLE COMA VARIABLE RPAREN .)
    PREDECREMENTO   reduce using rule 96 (fmod -> FMOD LPAREN VARIABLE COMA VARIABLE RPAREN .)
    POSTDECREMENTO  reduce using rule 96 (fmod -> FMOD LPAREN VARIABLE COMA VARIABLE RPAREN .)
    ECHO            reduce using rule 96 (fmod -> FMOD LPAREN VARIABLE COMA VARIABLE RPAREN .)
    PRINT           reduce using rule 96 (fmod -> FMOD LPAREN VARIABLE COMA VARIABLE RPAREN .)
    LPAREN          reduce using rule 96 (fmod -> FMOD LPAREN VARIABLE COMA VARIABLE RPAREN .)
    $end            reduce using rule 96 (fmod -> FMOD LPAREN VARIABLE COMA VARIABLE RPAREN .)
    R_LLAVE         reduce using rule 96 (fmod -> FMOD LPAREN VARIABLE COMA VARIABLE RPAREN .)
    RPAREN          reduce using rule 96 (fmod -> FMOD LPAREN VARIABLE COMA VARIABLE RPAREN .)


state 329

    (150) is_a -> IS_A LPAREN VARIABLE COMA CADENADOBLE RPAREN .

    PUNTOCOMA       reduce using rule 150 (is_a -> IS_A LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    VARIABLE        reduce using rule 150 (is_a -> IS_A LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    IF              reduce using rule 150 (is_a -> IS_A LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    FOR             reduce using rule 150 (is_a -> IS_A LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    WHILE           reduce using rule 150 (is_a -> IS_A LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    PREINCREMENTO   reduce using rule 150 (is_a -> IS_A LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    POSTINCREMENTO  reduce using rule 150 (is_a -> IS_A LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    PREDECREMENTO   reduce using rule 150 (is_a -> IS_A LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    POSTDECREMENTO  reduce using rule 150 (is_a -> IS_A LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    ECHO            reduce using rule 150 (is_a -> IS_A LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    PRINT           reduce using rule 150 (is_a -> IS_A LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    LPAREN          reduce using rule 150 (is_a -> IS_A LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    $end            reduce using rule 150 (is_a -> IS_A LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    R_LLAVE         reduce using rule 150 (is_a -> IS_A LPAREN VARIABLE COMA CADENADOBLE RPAREN .)
    RPAREN          reduce using rule 150 (is_a -> IS_A LPAREN VARIABLE COMA CADENADOBLE RPAREN .)


state 330

    (27) if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else .

    VARIABLE        reduce using rule 27 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else .)
    IF              reduce using rule 27 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else .)
    FOR             reduce using rule 27 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else .)
    WHILE           reduce using rule 27 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else .)
    PREINCREMENTO   reduce using rule 27 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else .)
    POSTINCREMENTO  reduce using rule 27 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else .)
    PREDECREMENTO   reduce using rule 27 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else .)
    POSTDECREMENTO  reduce using rule 27 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else .)
    ECHO            reduce using rule 27 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else .)
    PRINT           reduce using rule 27 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else .)
    LPAREN          reduce using rule 27 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else .)
    $end            reduce using rule 27 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else .)
    R_LLAVE         reduce using rule 27 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else .)


state 331

    (28) if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif . else
    (30) elseif -> elseif . ELSEIF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (31) else -> . ELSE L_LLAVE sentencias R_LLAVE

    ELSEIF          shift and go to state 343
    ELSE            shift and go to state 332

    else                           shift and go to state 342

state 332

    (31) else -> ELSE . L_LLAVE sentencias R_LLAVE

    L_LLAVE         shift and go to state 344


state 333

    (29) elseif -> ELSEIF . LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE

    LPAREN          shift and go to state 345


state 334

    (11) for -> FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE . sentencias R_LLAVE
    (1) sentencias -> . sentencias asignacion
    (2) sentencias -> . sentencias metodos
    (3) sentencias -> . sentencias if
    (4) sentencias -> . sentencias for
    (5) sentencias -> . sentencias while
    (6) sentencias -> . asignacion
    (7) sentencias -> . metodos
    (8) sentencias -> . if
    (9) sentencias -> . for
    (10) sentencias -> . while
    (32) asignacion -> . VARIABLE IGUAL expresion PUNTOCOMA
    (33) asignacion -> . VARIABLE IGUAL factor PUNTOCOMA
    (34) asignacion -> . incremento_decremento PUNTOCOMA
    (35) asignacion -> . VARIABLE IGUAL funciones PUNTOCOMA
    (18) metodos -> . imprimir
    (19) metodos -> . object
    (26) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (27) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else
    (28) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else
    (11) for -> . FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE
    (12) while -> . WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (13) incremento_decremento -> . PREINCREMENTO
    (14) incremento_decremento -> . POSTINCREMENTO
    (15) incremento_decremento -> . PREDECREMENTO
    (16) incremento_decremento -> . POSTDECREMENTO
    (20) imprimir -> . ECHO factor PUNTOCOMA
    (21) imprimir -> . ECHO funciones PUNTOCOMA
    (22) imprimir -> . PRINT LPAREN factor RPAREN PUNTOCOMA
    (23) imprimir -> . PRINT LPAREN funciones RPAREN PUNTOCOMA
    (24) imprimir -> . PRINT factor
    (25) imprimir -> . PRINT funciones
    (17) object -> . LPAREN OBJECT RPAREN term

    VARIABLE        shift and go to state 7
    IF              shift and go to state 11
    FOR             shift and go to state 13
    WHILE           shift and go to state 14
    PREINCREMENTO   shift and go to state 15
    POSTINCREMENTO  shift and go to state 16
    PREDECREMENTO   shift and go to state 17
    POSTDECREMENTO  shift and go to state 18
    ECHO            shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 12

    asignacion                     shift and go to state 2
    incremento_decremento          shift and go to state 8
    sentencias                     shift and go to state 346
    metodos                        shift and go to state 3
    if                             shift and go to state 4
    for                            shift and go to state 5
    while                          shift and go to state 6
    imprimir                       shift and go to state 9
    object                         shift and go to state 10

state 335

    (138) substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS COMA NUMEROS . RPAREN

    RPAREN          shift and go to state 347


state 336

    (139) substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS COMA NUMEROS . RPAREN

    RPAREN          shift and go to state 348


state 337

    (142) wordwrap -> WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE . COMA BOOLEAN RPAREN

    COMA            shift and go to state 349


state 338

    (110) number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE . COMA CADENASIMPLE RPAREN

    COMA            shift and go to state 350


state 339

    (85) round -> ROUND LPAREN DECIMAL COMA MENOS NUMEROS RPAREN .

    PUNTOCOMA       reduce using rule 85 (round -> ROUND LPAREN DECIMAL COMA MENOS NUMEROS RPAREN .)
    VARIABLE        reduce using rule 85 (round -> ROUND LPAREN DECIMAL COMA MENOS NUMEROS RPAREN .)
    IF              reduce using rule 85 (round -> ROUND LPAREN DECIMAL COMA MENOS NUMEROS RPAREN .)
    FOR             reduce using rule 85 (round -> ROUND LPAREN DECIMAL COMA MENOS NUMEROS RPAREN .)
    WHILE           reduce using rule 85 (round -> ROUND LPAREN DECIMAL COMA MENOS NUMEROS RPAREN .)
    PREINCREMENTO   reduce using rule 85 (round -> ROUND LPAREN DECIMAL COMA MENOS NUMEROS RPAREN .)
    POSTINCREMENTO  reduce using rule 85 (round -> ROUND LPAREN DECIMAL COMA MENOS NUMEROS RPAREN .)
    PREDECREMENTO   reduce using rule 85 (round -> ROUND LPAREN DECIMAL COMA MENOS NUMEROS RPAREN .)
    POSTDECREMENTO  reduce using rule 85 (round -> ROUND LPAREN DECIMAL COMA MENOS NUMEROS RPAREN .)
    ECHO            reduce using rule 85 (round -> ROUND LPAREN DECIMAL COMA MENOS NUMEROS RPAREN .)
    PRINT           reduce using rule 85 (round -> ROUND LPAREN DECIMAL COMA MENOS NUMEROS RPAREN .)
    LPAREN          reduce using rule 85 (round -> ROUND LPAREN DECIMAL COMA MENOS NUMEROS RPAREN .)
    $end            reduce using rule 85 (round -> ROUND LPAREN DECIMAL COMA MENOS NUMEROS RPAREN .)
    R_LLAVE         reduce using rule 85 (round -> ROUND LPAREN DECIMAL COMA MENOS NUMEROS RPAREN .)
    RPAREN          reduce using rule 85 (round -> ROUND LPAREN DECIMAL COMA MENOS NUMEROS RPAREN .)


state 340

    (86) round -> ROUND LPAREN MENOS DECIMAL COMA MENOS NUMEROS . RPAREN

    RPAREN          shift and go to state 351


state 341

    (87) round -> ROUND LPAREN MENOS DECIMAL COMA NUMEROS RPAREN .

    PUNTOCOMA       reduce using rule 87 (round -> ROUND LPAREN MENOS DECIMAL COMA NUMEROS RPAREN .)
    VARIABLE        reduce using rule 87 (round -> ROUND LPAREN MENOS DECIMAL COMA NUMEROS RPAREN .)
    IF              reduce using rule 87 (round -> ROUND LPAREN MENOS DECIMAL COMA NUMEROS RPAREN .)
    FOR             reduce using rule 87 (round -> ROUND LPAREN MENOS DECIMAL COMA NUMEROS RPAREN .)
    WHILE           reduce using rule 87 (round -> ROUND LPAREN MENOS DECIMAL COMA NUMEROS RPAREN .)
    PREINCREMENTO   reduce using rule 87 (round -> ROUND LPAREN MENOS DECIMAL COMA NUMEROS RPAREN .)
    POSTINCREMENTO  reduce using rule 87 (round -> ROUND LPAREN MENOS DECIMAL COMA NUMEROS RPAREN .)
    PREDECREMENTO   reduce using rule 87 (round -> ROUND LPAREN MENOS DECIMAL COMA NUMEROS RPAREN .)
    POSTDECREMENTO  reduce using rule 87 (round -> ROUND LPAREN MENOS DECIMAL COMA NUMEROS RPAREN .)
    ECHO            reduce using rule 87 (round -> ROUND LPAREN MENOS DECIMAL COMA NUMEROS RPAREN .)
    PRINT           reduce using rule 87 (round -> ROUND LPAREN MENOS DECIMAL COMA NUMEROS RPAREN .)
    LPAREN          reduce using rule 87 (round -> ROUND LPAREN MENOS DECIMAL COMA NUMEROS RPAREN .)
    $end            reduce using rule 87 (round -> ROUND LPAREN MENOS DECIMAL COMA NUMEROS RPAREN .)
    R_LLAVE         reduce using rule 87 (round -> ROUND LPAREN MENOS DECIMAL COMA NUMEROS RPAREN .)
    RPAREN          reduce using rule 87 (round -> ROUND LPAREN MENOS DECIMAL COMA NUMEROS RPAREN .)


state 342

    (28) if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else .

    VARIABLE        reduce using rule 28 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else .)
    IF              reduce using rule 28 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else .)
    FOR             reduce using rule 28 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else .)
    WHILE           reduce using rule 28 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else .)
    PREINCREMENTO   reduce using rule 28 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else .)
    POSTINCREMENTO  reduce using rule 28 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else .)
    PREDECREMENTO   reduce using rule 28 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else .)
    POSTDECREMENTO  reduce using rule 28 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else .)
    ECHO            reduce using rule 28 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else .)
    PRINT           reduce using rule 28 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else .)
    LPAREN          reduce using rule 28 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else .)
    $end            reduce using rule 28 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else .)
    R_LLAVE         reduce using rule 28 (if -> IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else .)


state 343

    (30) elseif -> elseif ELSEIF . LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE

    LPAREN          shift and go to state 352


state 344

    (31) else -> ELSE L_LLAVE . sentencias R_LLAVE
    (1) sentencias -> . sentencias asignacion
    (2) sentencias -> . sentencias metodos
    (3) sentencias -> . sentencias if
    (4) sentencias -> . sentencias for
    (5) sentencias -> . sentencias while
    (6) sentencias -> . asignacion
    (7) sentencias -> . metodos
    (8) sentencias -> . if
    (9) sentencias -> . for
    (10) sentencias -> . while
    (32) asignacion -> . VARIABLE IGUAL expresion PUNTOCOMA
    (33) asignacion -> . VARIABLE IGUAL factor PUNTOCOMA
    (34) asignacion -> . incremento_decremento PUNTOCOMA
    (35) asignacion -> . VARIABLE IGUAL funciones PUNTOCOMA
    (18) metodos -> . imprimir
    (19) metodos -> . object
    (26) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (27) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else
    (28) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else
    (11) for -> . FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE
    (12) while -> . WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (13) incremento_decremento -> . PREINCREMENTO
    (14) incremento_decremento -> . POSTINCREMENTO
    (15) incremento_decremento -> . PREDECREMENTO
    (16) incremento_decremento -> . POSTDECREMENTO
    (20) imprimir -> . ECHO factor PUNTOCOMA
    (21) imprimir -> . ECHO funciones PUNTOCOMA
    (22) imprimir -> . PRINT LPAREN factor RPAREN PUNTOCOMA
    (23) imprimir -> . PRINT LPAREN funciones RPAREN PUNTOCOMA
    (24) imprimir -> . PRINT factor
    (25) imprimir -> . PRINT funciones
    (17) object -> . LPAREN OBJECT RPAREN term

    VARIABLE        shift and go to state 7
    IF              shift and go to state 11
    FOR             shift and go to state 13
    WHILE           shift and go to state 14
    PREINCREMENTO   shift and go to state 15
    POSTINCREMENTO  shift and go to state 16
    PREDECREMENTO   shift and go to state 17
    POSTDECREMENTO  shift and go to state 18
    ECHO            shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 12

    sentencias                     shift and go to state 353
    asignacion                     shift and go to state 2
    metodos                        shift and go to state 3
    if                             shift and go to state 4
    for                            shift and go to state 5
    while                          shift and go to state 6
    incremento_decremento          shift and go to state 8
    imprimir                       shift and go to state 9
    object                         shift and go to state 10

state 345

    (29) elseif -> ELSEIF LPAREN . comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (54) comparaciones -> . comparacion
    (55) comparaciones -> . comparaciones anado comparacion
    (44) comparacion -> . condiciones
    (45) comparacion -> . LPAREN condiciones RPAREN
    (46) comparacion -> . NO LPAREN condiciones RPAREN
    (47) condiciones -> . factor IGUAL_IGUAL factor
    (48) condiciones -> . factor IDENTICO factor
    (49) condiciones -> . factor DISTINTO factor
    (50) condiciones -> . factor MENORQUE factor
    (51) condiciones -> . factor MAYORQUE factor
    (52) condiciones -> . factor MENOROIGUAL factor
    (53) condiciones -> . factor MAYOROIGUAL factor
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN

    LPAREN          shift and go to state 94
    NO              shift and go to state 98
    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 100
    BOOLEAN         shift and go to state 39

    comparaciones                  shift and go to state 354
    comparacion                    shift and go to state 96
    condiciones                    shift and go to state 97
    factor                         shift and go to state 99

state 346

    (11) for -> FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias . R_LLAVE
    (1) sentencias -> sentencias . asignacion
    (2) sentencias -> sentencias . metodos
    (3) sentencias -> sentencias . if
    (4) sentencias -> sentencias . for
    (5) sentencias -> sentencias . while
    (32) asignacion -> . VARIABLE IGUAL expresion PUNTOCOMA
    (33) asignacion -> . VARIABLE IGUAL factor PUNTOCOMA
    (34) asignacion -> . incremento_decremento PUNTOCOMA
    (35) asignacion -> . VARIABLE IGUAL funciones PUNTOCOMA
    (18) metodos -> . imprimir
    (19) metodos -> . object
    (26) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (27) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else
    (28) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else
    (11) for -> . FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE
    (12) while -> . WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (13) incremento_decremento -> . PREINCREMENTO
    (14) incremento_decremento -> . POSTINCREMENTO
    (15) incremento_decremento -> . PREDECREMENTO
    (16) incremento_decremento -> . POSTDECREMENTO
    (20) imprimir -> . ECHO factor PUNTOCOMA
    (21) imprimir -> . ECHO funciones PUNTOCOMA
    (22) imprimir -> . PRINT LPAREN factor RPAREN PUNTOCOMA
    (23) imprimir -> . PRINT LPAREN funciones RPAREN PUNTOCOMA
    (24) imprimir -> . PRINT factor
    (25) imprimir -> . PRINT funciones
    (17) object -> . LPAREN OBJECT RPAREN term

    R_LLAVE         shift and go to state 355
    VARIABLE        shift and go to state 7
    IF              shift and go to state 11
    FOR             shift and go to state 13
    WHILE           shift and go to state 14
    PREINCREMENTO   shift and go to state 15
    POSTINCREMENTO  shift and go to state 16
    PREDECREMENTO   shift and go to state 17
    POSTDECREMENTO  shift and go to state 18
    ECHO            shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 12

    asignacion                     shift and go to state 21
    incremento_decremento          shift and go to state 8
    metodos                        shift and go to state 22
    if                             shift and go to state 23
    for                            shift and go to state 24
    while                          shift and go to state 25
    imprimir                       shift and go to state 9
    object                         shift and go to state 10

state 347

    (138) substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS COMA NUMEROS RPAREN .

    PUNTOCOMA       reduce using rule 138 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS COMA NUMEROS RPAREN .)
    VARIABLE        reduce using rule 138 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS COMA NUMEROS RPAREN .)
    IF              reduce using rule 138 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS COMA NUMEROS RPAREN .)
    FOR             reduce using rule 138 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS COMA NUMEROS RPAREN .)
    WHILE           reduce using rule 138 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS COMA NUMEROS RPAREN .)
    PREINCREMENTO   reduce using rule 138 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS COMA NUMEROS RPAREN .)
    POSTINCREMENTO  reduce using rule 138 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS COMA NUMEROS RPAREN .)
    PREDECREMENTO   reduce using rule 138 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS COMA NUMEROS RPAREN .)
    POSTDECREMENTO  reduce using rule 138 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS COMA NUMEROS RPAREN .)
    ECHO            reduce using rule 138 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS COMA NUMEROS RPAREN .)
    PRINT           reduce using rule 138 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS COMA NUMEROS RPAREN .)
    LPAREN          reduce using rule 138 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS COMA NUMEROS RPAREN .)
    $end            reduce using rule 138 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS COMA NUMEROS RPAREN .)
    R_LLAVE         reduce using rule 138 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS COMA NUMEROS RPAREN .)
    RPAREN          reduce using rule 138 (substr -> SUBSTR LPAREN VARIABLE COMA NUMEROS COMA NUMEROS RPAREN .)


state 348

    (139) substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS COMA NUMEROS RPAREN .

    PUNTOCOMA       reduce using rule 139 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS COMA NUMEROS RPAREN .)
    VARIABLE        reduce using rule 139 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS COMA NUMEROS RPAREN .)
    IF              reduce using rule 139 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS COMA NUMEROS RPAREN .)
    FOR             reduce using rule 139 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS COMA NUMEROS RPAREN .)
    WHILE           reduce using rule 139 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS COMA NUMEROS RPAREN .)
    PREINCREMENTO   reduce using rule 139 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS COMA NUMEROS RPAREN .)
    POSTINCREMENTO  reduce using rule 139 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS COMA NUMEROS RPAREN .)
    PREDECREMENTO   reduce using rule 139 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS COMA NUMEROS RPAREN .)
    POSTDECREMENTO  reduce using rule 139 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS COMA NUMEROS RPAREN .)
    ECHO            reduce using rule 139 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS COMA NUMEROS RPAREN .)
    PRINT           reduce using rule 139 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS COMA NUMEROS RPAREN .)
    LPAREN          reduce using rule 139 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS COMA NUMEROS RPAREN .)
    $end            reduce using rule 139 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS COMA NUMEROS RPAREN .)
    R_LLAVE         reduce using rule 139 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS COMA NUMEROS RPAREN .)
    RPAREN          reduce using rule 139 (substr -> SUBSTR LPAREN CADENADOBLE COMA NUMEROS COMA NUMEROS RPAREN .)


state 349

    (142) wordwrap -> WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE COMA . BOOLEAN RPAREN

    BOOLEAN         shift and go to state 356


state 350

    (110) number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA . CADENASIMPLE RPAREN

    CADENASIMPLE    shift and go to state 357


state 351

    (86) round -> ROUND LPAREN MENOS DECIMAL COMA MENOS NUMEROS RPAREN .

    PUNTOCOMA       reduce using rule 86 (round -> ROUND LPAREN MENOS DECIMAL COMA MENOS NUMEROS RPAREN .)
    VARIABLE        reduce using rule 86 (round -> ROUND LPAREN MENOS DECIMAL COMA MENOS NUMEROS RPAREN .)
    IF              reduce using rule 86 (round -> ROUND LPAREN MENOS DECIMAL COMA MENOS NUMEROS RPAREN .)
    FOR             reduce using rule 86 (round -> ROUND LPAREN MENOS DECIMAL COMA MENOS NUMEROS RPAREN .)
    WHILE           reduce using rule 86 (round -> ROUND LPAREN MENOS DECIMAL COMA MENOS NUMEROS RPAREN .)
    PREINCREMENTO   reduce using rule 86 (round -> ROUND LPAREN MENOS DECIMAL COMA MENOS NUMEROS RPAREN .)
    POSTINCREMENTO  reduce using rule 86 (round -> ROUND LPAREN MENOS DECIMAL COMA MENOS NUMEROS RPAREN .)
    PREDECREMENTO   reduce using rule 86 (round -> ROUND LPAREN MENOS DECIMAL COMA MENOS NUMEROS RPAREN .)
    POSTDECREMENTO  reduce using rule 86 (round -> ROUND LPAREN MENOS DECIMAL COMA MENOS NUMEROS RPAREN .)
    ECHO            reduce using rule 86 (round -> ROUND LPAREN MENOS DECIMAL COMA MENOS NUMEROS RPAREN .)
    PRINT           reduce using rule 86 (round -> ROUND LPAREN MENOS DECIMAL COMA MENOS NUMEROS RPAREN .)
    LPAREN          reduce using rule 86 (round -> ROUND LPAREN MENOS DECIMAL COMA MENOS NUMEROS RPAREN .)
    $end            reduce using rule 86 (round -> ROUND LPAREN MENOS DECIMAL COMA MENOS NUMEROS RPAREN .)
    R_LLAVE         reduce using rule 86 (round -> ROUND LPAREN MENOS DECIMAL COMA MENOS NUMEROS RPAREN .)
    RPAREN          reduce using rule 86 (round -> ROUND LPAREN MENOS DECIMAL COMA MENOS NUMEROS RPAREN .)


state 352

    (30) elseif -> elseif ELSEIF LPAREN . comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (54) comparaciones -> . comparacion
    (55) comparaciones -> . comparaciones anado comparacion
    (44) comparacion -> . condiciones
    (45) comparacion -> . LPAREN condiciones RPAREN
    (46) comparacion -> . NO LPAREN condiciones RPAREN
    (47) condiciones -> . factor IGUAL_IGUAL factor
    (48) condiciones -> . factor IDENTICO factor
    (49) condiciones -> . factor DISTINTO factor
    (50) condiciones -> . factor MENORQUE factor
    (51) condiciones -> . factor MAYORQUE factor
    (52) condiciones -> . factor MENOROIGUAL factor
    (53) condiciones -> . factor MAYOROIGUAL factor
    (63) factor -> . NUMEROS
    (64) factor -> . DECIMAL
    (65) factor -> . CADENASIMPLE
    (66) factor -> . CADENADOBLE
    (67) factor -> . VARIABLE
    (68) factor -> . BOOLEAN
    (69) factor -> . LPAREN expresion RPAREN

    LPAREN          shift and go to state 94
    NO              shift and go to state 98
    NUMEROS         shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENASIMPLE    shift and go to state 36
    CADENADOBLE     shift and go to state 37
    VARIABLE        shift and go to state 100
    BOOLEAN         shift and go to state 39

    comparaciones                  shift and go to state 358
    comparacion                    shift and go to state 96
    condiciones                    shift and go to state 97
    factor                         shift and go to state 99

state 353

    (31) else -> ELSE L_LLAVE sentencias . R_LLAVE
    (1) sentencias -> sentencias . asignacion
    (2) sentencias -> sentencias . metodos
    (3) sentencias -> sentencias . if
    (4) sentencias -> sentencias . for
    (5) sentencias -> sentencias . while
    (32) asignacion -> . VARIABLE IGUAL expresion PUNTOCOMA
    (33) asignacion -> . VARIABLE IGUAL factor PUNTOCOMA
    (34) asignacion -> . incremento_decremento PUNTOCOMA
    (35) asignacion -> . VARIABLE IGUAL funciones PUNTOCOMA
    (18) metodos -> . imprimir
    (19) metodos -> . object
    (26) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (27) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else
    (28) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else
    (11) for -> . FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE
    (12) while -> . WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (13) incremento_decremento -> . PREINCREMENTO
    (14) incremento_decremento -> . POSTINCREMENTO
    (15) incremento_decremento -> . PREDECREMENTO
    (16) incremento_decremento -> . POSTDECREMENTO
    (20) imprimir -> . ECHO factor PUNTOCOMA
    (21) imprimir -> . ECHO funciones PUNTOCOMA
    (22) imprimir -> . PRINT LPAREN factor RPAREN PUNTOCOMA
    (23) imprimir -> . PRINT LPAREN funciones RPAREN PUNTOCOMA
    (24) imprimir -> . PRINT factor
    (25) imprimir -> . PRINT funciones
    (17) object -> . LPAREN OBJECT RPAREN term

    R_LLAVE         shift and go to state 359
    VARIABLE        shift and go to state 7
    IF              shift and go to state 11
    FOR             shift and go to state 13
    WHILE           shift and go to state 14
    PREINCREMENTO   shift and go to state 15
    POSTINCREMENTO  shift and go to state 16
    PREDECREMENTO   shift and go to state 17
    POSTDECREMENTO  shift and go to state 18
    ECHO            shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 12

    asignacion                     shift and go to state 21
    metodos                        shift and go to state 22
    if                             shift and go to state 23
    for                            shift and go to state 24
    while                          shift and go to state 25
    incremento_decremento          shift and go to state 8
    imprimir                       shift and go to state 9
    object                         shift and go to state 10

state 354

    (29) elseif -> ELSEIF LPAREN comparaciones . RPAREN L_LLAVE sentencias R_LLAVE
    (55) comparaciones -> comparaciones . anado comparacion
    (56) anado -> . condicion
    (57) condicion -> . XOR
    (58) condicion -> . ANDAND
    (59) condicion -> . AND
    (60) condicion -> . OR
    (61) condicion -> . OROR

    RPAREN          shift and go to state 360
    XOR             shift and go to state 154
    ANDAND          shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    OROR            shift and go to state 158

    anado                          shift and go to state 152
    condicion                      shift and go to state 153

state 355

    (11) for -> FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE .

    VARIABLE        reduce using rule 11 (for -> FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE .)
    IF              reduce using rule 11 (for -> FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE .)
    FOR             reduce using rule 11 (for -> FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE .)
    WHILE           reduce using rule 11 (for -> FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE .)
    PREINCREMENTO   reduce using rule 11 (for -> FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE .)
    POSTINCREMENTO  reduce using rule 11 (for -> FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE .)
    PREDECREMENTO   reduce using rule 11 (for -> FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE .)
    POSTDECREMENTO  reduce using rule 11 (for -> FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE .)
    ECHO            reduce using rule 11 (for -> FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE .)
    PRINT           reduce using rule 11 (for -> FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE .)
    LPAREN          reduce using rule 11 (for -> FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE .)
    $end            reduce using rule 11 (for -> FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE .)
    R_LLAVE         reduce using rule 11 (for -> FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE .)


state 356

    (142) wordwrap -> WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN . RPAREN

    RPAREN          shift and go to state 361


state 357

    (110) number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE . RPAREN

    RPAREN          shift and go to state 362


state 358

    (30) elseif -> elseif ELSEIF LPAREN comparaciones . RPAREN L_LLAVE sentencias R_LLAVE
    (55) comparaciones -> comparaciones . anado comparacion
    (56) anado -> . condicion
    (57) condicion -> . XOR
    (58) condicion -> . ANDAND
    (59) condicion -> . AND
    (60) condicion -> . OR
    (61) condicion -> . OROR

    RPAREN          shift and go to state 363
    XOR             shift and go to state 154
    ANDAND          shift and go to state 155
    AND             shift and go to state 156
    OR              shift and go to state 157
    OROR            shift and go to state 158

    anado                          shift and go to state 152
    condicion                      shift and go to state 153

state 359

    (31) else -> ELSE L_LLAVE sentencias R_LLAVE .

    VARIABLE        reduce using rule 31 (else -> ELSE L_LLAVE sentencias R_LLAVE .)
    IF              reduce using rule 31 (else -> ELSE L_LLAVE sentencias R_LLAVE .)
    FOR             reduce using rule 31 (else -> ELSE L_LLAVE sentencias R_LLAVE .)
    WHILE           reduce using rule 31 (else -> ELSE L_LLAVE sentencias R_LLAVE .)
    PREINCREMENTO   reduce using rule 31 (else -> ELSE L_LLAVE sentencias R_LLAVE .)
    POSTINCREMENTO  reduce using rule 31 (else -> ELSE L_LLAVE sentencias R_LLAVE .)
    PREDECREMENTO   reduce using rule 31 (else -> ELSE L_LLAVE sentencias R_LLAVE .)
    POSTDECREMENTO  reduce using rule 31 (else -> ELSE L_LLAVE sentencias R_LLAVE .)
    ECHO            reduce using rule 31 (else -> ELSE L_LLAVE sentencias R_LLAVE .)
    PRINT           reduce using rule 31 (else -> ELSE L_LLAVE sentencias R_LLAVE .)
    LPAREN          reduce using rule 31 (else -> ELSE L_LLAVE sentencias R_LLAVE .)
    $end            reduce using rule 31 (else -> ELSE L_LLAVE sentencias R_LLAVE .)
    R_LLAVE         reduce using rule 31 (else -> ELSE L_LLAVE sentencias R_LLAVE .)


state 360

    (29) elseif -> ELSEIF LPAREN comparaciones RPAREN . L_LLAVE sentencias R_LLAVE

    L_LLAVE         shift and go to state 364


state 361

    (142) wordwrap -> WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN RPAREN .

    PUNTOCOMA       reduce using rule 142 (wordwrap -> WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN RPAREN .)
    VARIABLE        reduce using rule 142 (wordwrap -> WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN RPAREN .)
    IF              reduce using rule 142 (wordwrap -> WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN RPAREN .)
    FOR             reduce using rule 142 (wordwrap -> WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN RPAREN .)
    WHILE           reduce using rule 142 (wordwrap -> WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN RPAREN .)
    PREINCREMENTO   reduce using rule 142 (wordwrap -> WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN RPAREN .)
    POSTINCREMENTO  reduce using rule 142 (wordwrap -> WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN RPAREN .)
    PREDECREMENTO   reduce using rule 142 (wordwrap -> WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN RPAREN .)
    POSTDECREMENTO  reduce using rule 142 (wordwrap -> WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN RPAREN .)
    ECHO            reduce using rule 142 (wordwrap -> WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN RPAREN .)
    PRINT           reduce using rule 142 (wordwrap -> WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN RPAREN .)
    LPAREN          reduce using rule 142 (wordwrap -> WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN RPAREN .)
    $end            reduce using rule 142 (wordwrap -> WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN RPAREN .)
    R_LLAVE         reduce using rule 142 (wordwrap -> WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN RPAREN .)
    RPAREN          reduce using rule 142 (wordwrap -> WORDWRAP LPAREN VARIABLE COMA NUMEROS COMA CADENADOBLE COMA BOOLEAN RPAREN .)


state 362

    (110) number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPAREN .

    PUNTOCOMA       reduce using rule 110 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPAREN .)
    VARIABLE        reduce using rule 110 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPAREN .)
    IF              reduce using rule 110 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPAREN .)
    FOR             reduce using rule 110 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPAREN .)
    WHILE           reduce using rule 110 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPAREN .)
    PREINCREMENTO   reduce using rule 110 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPAREN .)
    POSTINCREMENTO  reduce using rule 110 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPAREN .)
    PREDECREMENTO   reduce using rule 110 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPAREN .)
    POSTDECREMENTO  reduce using rule 110 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPAREN .)
    ECHO            reduce using rule 110 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPAREN .)
    PRINT           reduce using rule 110 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPAREN .)
    LPAREN          reduce using rule 110 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPAREN .)
    $end            reduce using rule 110 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPAREN .)
    R_LLAVE         reduce using rule 110 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPAREN .)
    RPAREN          reduce using rule 110 (number_format -> NUMBER_FORMAT LPAREN VARIABLE COMA NUMEROS COMA CADENASIMPLE COMA CADENASIMPLE RPAREN .)


state 363

    (30) elseif -> elseif ELSEIF LPAREN comparaciones RPAREN . L_LLAVE sentencias R_LLAVE

    L_LLAVE         shift and go to state 365


state 364

    (29) elseif -> ELSEIF LPAREN comparaciones RPAREN L_LLAVE . sentencias R_LLAVE
    (1) sentencias -> . sentencias asignacion
    (2) sentencias -> . sentencias metodos
    (3) sentencias -> . sentencias if
    (4) sentencias -> . sentencias for
    (5) sentencias -> . sentencias while
    (6) sentencias -> . asignacion
    (7) sentencias -> . metodos
    (8) sentencias -> . if
    (9) sentencias -> . for
    (10) sentencias -> . while
    (32) asignacion -> . VARIABLE IGUAL expresion PUNTOCOMA
    (33) asignacion -> . VARIABLE IGUAL factor PUNTOCOMA
    (34) asignacion -> . incremento_decremento PUNTOCOMA
    (35) asignacion -> . VARIABLE IGUAL funciones PUNTOCOMA
    (18) metodos -> . imprimir
    (19) metodos -> . object
    (26) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (27) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else
    (28) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else
    (11) for -> . FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE
    (12) while -> . WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (13) incremento_decremento -> . PREINCREMENTO
    (14) incremento_decremento -> . POSTINCREMENTO
    (15) incremento_decremento -> . PREDECREMENTO
    (16) incremento_decremento -> . POSTDECREMENTO
    (20) imprimir -> . ECHO factor PUNTOCOMA
    (21) imprimir -> . ECHO funciones PUNTOCOMA
    (22) imprimir -> . PRINT LPAREN factor RPAREN PUNTOCOMA
    (23) imprimir -> . PRINT LPAREN funciones RPAREN PUNTOCOMA
    (24) imprimir -> . PRINT factor
    (25) imprimir -> . PRINT funciones
    (17) object -> . LPAREN OBJECT RPAREN term

    VARIABLE        shift and go to state 7
    IF              shift and go to state 11
    FOR             shift and go to state 13
    WHILE           shift and go to state 14
    PREINCREMENTO   shift and go to state 15
    POSTINCREMENTO  shift and go to state 16
    PREDECREMENTO   shift and go to state 17
    POSTDECREMENTO  shift and go to state 18
    ECHO            shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 12

    sentencias                     shift and go to state 366
    asignacion                     shift and go to state 2
    metodos                        shift and go to state 3
    if                             shift and go to state 4
    for                            shift and go to state 5
    while                          shift and go to state 6
    incremento_decremento          shift and go to state 8
    imprimir                       shift and go to state 9
    object                         shift and go to state 10

state 365

    (30) elseif -> elseif ELSEIF LPAREN comparaciones RPAREN L_LLAVE . sentencias R_LLAVE
    (1) sentencias -> . sentencias asignacion
    (2) sentencias -> . sentencias metodos
    (3) sentencias -> . sentencias if
    (4) sentencias -> . sentencias for
    (5) sentencias -> . sentencias while
    (6) sentencias -> . asignacion
    (7) sentencias -> . metodos
    (8) sentencias -> . if
    (9) sentencias -> . for
    (10) sentencias -> . while
    (32) asignacion -> . VARIABLE IGUAL expresion PUNTOCOMA
    (33) asignacion -> . VARIABLE IGUAL factor PUNTOCOMA
    (34) asignacion -> . incremento_decremento PUNTOCOMA
    (35) asignacion -> . VARIABLE IGUAL funciones PUNTOCOMA
    (18) metodos -> . imprimir
    (19) metodos -> . object
    (26) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (27) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else
    (28) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else
    (11) for -> . FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE
    (12) while -> . WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (13) incremento_decremento -> . PREINCREMENTO
    (14) incremento_decremento -> . POSTINCREMENTO
    (15) incremento_decremento -> . PREDECREMENTO
    (16) incremento_decremento -> . POSTDECREMENTO
    (20) imprimir -> . ECHO factor PUNTOCOMA
    (21) imprimir -> . ECHO funciones PUNTOCOMA
    (22) imprimir -> . PRINT LPAREN factor RPAREN PUNTOCOMA
    (23) imprimir -> . PRINT LPAREN funciones RPAREN PUNTOCOMA
    (24) imprimir -> . PRINT factor
    (25) imprimir -> . PRINT funciones
    (17) object -> . LPAREN OBJECT RPAREN term

    VARIABLE        shift and go to state 7
    IF              shift and go to state 11
    FOR             shift and go to state 13
    WHILE           shift and go to state 14
    PREINCREMENTO   shift and go to state 15
    POSTINCREMENTO  shift and go to state 16
    PREDECREMENTO   shift and go to state 17
    POSTDECREMENTO  shift and go to state 18
    ECHO            shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 12

    sentencias                     shift and go to state 367
    asignacion                     shift and go to state 2
    metodos                        shift and go to state 3
    if                             shift and go to state 4
    for                            shift and go to state 5
    while                          shift and go to state 6
    incremento_decremento          shift and go to state 8
    imprimir                       shift and go to state 9
    object                         shift and go to state 10

state 366

    (29) elseif -> ELSEIF LPAREN comparaciones RPAREN L_LLAVE sentencias . R_LLAVE
    (1) sentencias -> sentencias . asignacion
    (2) sentencias -> sentencias . metodos
    (3) sentencias -> sentencias . if
    (4) sentencias -> sentencias . for
    (5) sentencias -> sentencias . while
    (32) asignacion -> . VARIABLE IGUAL expresion PUNTOCOMA
    (33) asignacion -> . VARIABLE IGUAL factor PUNTOCOMA
    (34) asignacion -> . incremento_decremento PUNTOCOMA
    (35) asignacion -> . VARIABLE IGUAL funciones PUNTOCOMA
    (18) metodos -> . imprimir
    (19) metodos -> . object
    (26) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (27) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else
    (28) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else
    (11) for -> . FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE
    (12) while -> . WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (13) incremento_decremento -> . PREINCREMENTO
    (14) incremento_decremento -> . POSTINCREMENTO
    (15) incremento_decremento -> . PREDECREMENTO
    (16) incremento_decremento -> . POSTDECREMENTO
    (20) imprimir -> . ECHO factor PUNTOCOMA
    (21) imprimir -> . ECHO funciones PUNTOCOMA
    (22) imprimir -> . PRINT LPAREN factor RPAREN PUNTOCOMA
    (23) imprimir -> . PRINT LPAREN funciones RPAREN PUNTOCOMA
    (24) imprimir -> . PRINT factor
    (25) imprimir -> . PRINT funciones
    (17) object -> . LPAREN OBJECT RPAREN term

    R_LLAVE         shift and go to state 368
    VARIABLE        shift and go to state 7
    IF              shift and go to state 11
    FOR             shift and go to state 13
    WHILE           shift and go to state 14
    PREINCREMENTO   shift and go to state 15
    POSTINCREMENTO  shift and go to state 16
    PREDECREMENTO   shift and go to state 17
    POSTDECREMENTO  shift and go to state 18
    ECHO            shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 12

    asignacion                     shift and go to state 21
    metodos                        shift and go to state 22
    if                             shift and go to state 23
    for                            shift and go to state 24
    while                          shift and go to state 25
    incremento_decremento          shift and go to state 8
    imprimir                       shift and go to state 9
    object                         shift and go to state 10

state 367

    (30) elseif -> elseif ELSEIF LPAREN comparaciones RPAREN L_LLAVE sentencias . R_LLAVE
    (1) sentencias -> sentencias . asignacion
    (2) sentencias -> sentencias . metodos
    (3) sentencias -> sentencias . if
    (4) sentencias -> sentencias . for
    (5) sentencias -> sentencias . while
    (32) asignacion -> . VARIABLE IGUAL expresion PUNTOCOMA
    (33) asignacion -> . VARIABLE IGUAL factor PUNTOCOMA
    (34) asignacion -> . incremento_decremento PUNTOCOMA
    (35) asignacion -> . VARIABLE IGUAL funciones PUNTOCOMA
    (18) metodos -> . imprimir
    (19) metodos -> . object
    (26) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (27) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE else
    (28) if -> . IF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE elseif else
    (11) for -> . FOR LPAREN asignacion comparaciones PUNTOCOMA incremento_decremento RPAREN L_LLAVE sentencias R_LLAVE
    (12) while -> . WHILE LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE
    (13) incremento_decremento -> . PREINCREMENTO
    (14) incremento_decremento -> . POSTINCREMENTO
    (15) incremento_decremento -> . PREDECREMENTO
    (16) incremento_decremento -> . POSTDECREMENTO
    (20) imprimir -> . ECHO factor PUNTOCOMA
    (21) imprimir -> . ECHO funciones PUNTOCOMA
    (22) imprimir -> . PRINT LPAREN factor RPAREN PUNTOCOMA
    (23) imprimir -> . PRINT LPAREN funciones RPAREN PUNTOCOMA
    (24) imprimir -> . PRINT factor
    (25) imprimir -> . PRINT funciones
    (17) object -> . LPAREN OBJECT RPAREN term

    R_LLAVE         shift and go to state 369
    VARIABLE        shift and go to state 7
    IF              shift and go to state 11
    FOR             shift and go to state 13
    WHILE           shift and go to state 14
    PREINCREMENTO   shift and go to state 15
    POSTINCREMENTO  shift and go to state 16
    PREDECREMENTO   shift and go to state 17
    POSTDECREMENTO  shift and go to state 18
    ECHO            shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 12

    asignacion                     shift and go to state 21
    metodos                        shift and go to state 22
    if                             shift and go to state 23
    for                            shift and go to state 24
    while                          shift and go to state 25
    incremento_decremento          shift and go to state 8
    imprimir                       shift and go to state 9
    object                         shift and go to state 10

state 368

    (29) elseif -> ELSEIF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .

    ELSEIF          reduce using rule 29 (elseif -> ELSEIF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    ELSE            reduce using rule 29 (elseif -> ELSEIF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)


state 369

    (30) elseif -> elseif ELSEIF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .

    ELSEIF          reduce using rule 30 (elseif -> elseif ELSEIF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)
    ELSE            reduce using rule 30 (elseif -> elseif ELSEIF LPAREN comparaciones RPAREN L_LLAVE sentencias R_LLAVE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOCOMA in state 91 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 137 resolved as shift
